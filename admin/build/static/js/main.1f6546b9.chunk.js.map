{"version":3,"sources":["config.ts","actions/types.ts","actions/errorHandler.ts","actions/AuthActions.ts","constants/immigrantsConstants.ts","helpers/index.ts","actions/ImmigrantActions.ts","components/Form/TextValidator.tsx","components/Form/index.tsx","components/Loading/index.tsx","assets/img/bg1.jpg","assets/img/logo.png","assets/img/Avatar-1.png","components/Section/index.tsx","pages/Antigua.tsx","pages/Business.tsx","pages/General.tsx","pages/Stkitts.tsx","routes.ts","actions/Utilites.ts","layouts/AdminLayout.tsx","pages/Auth.tsx","reducers/AuthReducers.ts","reducers/index.ts","reducers/ImmigrantReducers.ts","store.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["URL","header","headers","Accept","AUTH_SUCCESS","LOGOUT_USER","errHandler","err","callback","Array","isArray","forEach","error","Object","keys","message","auth","localStorage","removeItem","type","key","setUser","data","dispatch","a","payload","IMMIGRANT_LIST_REQUEST","IMMIGRANT_LIST_SUCCESS","IMMIGRANT_LIST_FAILED","IMMIGRANT_DELETE_REQUEST","IMMIGRANT_DELETE_SUCCESS","IMMIGRANT_DELETE_FAILED","IMMIGRANT_LIST_RESET","BUSINESS_LIST_REQUEST","BUSINESS_LIST_SUCCESS","BUSINESS_LIST_FAILED","GENERAL_LIST_REQUEST","GENERAL_LIST_SUCCESS","GENERAL_LIST_FAILED","format","require","logout","removeLocal","window","location","reload","handleErr","response","getLocal","name","parse","getItem","JSON","setLocal","content","setItem","stringify","_calculateAge","birthday","ageDifMs","Date","getTime","ageDate","Math","abs","getUTCFullYear","formatNum","num","currency","showDecimals","currencyPosition","spacing","fundsAction","funds","map","fund","min","max","value","id","getImmigrants","collection","getState","token","config","Authorization","Axios","get","res","toast","searchDb","query","param","entries","TextValidator","state","isValid","valid","invalid","feedBack","changeState","setState","FormFeedback","style","display","this","props","isRequired","isEmail","isPhoneNumber","isPassword","rest","Input","onKeyUp","required","errorText","otherConditions","validator","isMobilePhone","replaceAll","isLength","isEmpty","Component","TextInputGroup","makeAnimated","iconClass","label","className","htmlFor","subText","DateInputGroup","onChange","e","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","target","_d","closeOnSelect","timeFormat","inputProps","SelectGroup","placeholder","options","onSelect","disabled","defaultValue","labelClass","CustomInput","item","title","selected","Loading","show","Section","bgImage","bgImageSrc","styles","children","width","backgroundImage","console","log","titles","Antigua","search","loading","onSearch","then","catch","immigrantList","Row","Col","sm","first_name","last_name","email","phone","married","old_dependents","young_dependents","teen_dependents","average_dependents","rejected","deported","contact_medium","referee","createdAt","investRange","networthRange","residenceCountry","nationalityCountry","RejectedCountries","DeportedCountries","invest","networth","country","filename","Card","Table","responsive","striped","bordered","immigrant","scope","thousandSeparator","prefix","displayType","moment","length","connect","field","Business","_q","invest_funds","startDate","endDate","sortConfig","asc","enableKeyboard","document","onkeypress","disableKeyboard","sortData","sortField","direction","businessList","sort","b","_a","_b","toLowerCase","getBusinessImmigrants","investRanges","xs","group","dob","eligible_party","spouse","managerial_experience","citizenshipCountry","bsSize","border","class","onFocus","onBlur","autoComplete","onClick","General","generalList","getGeneralImmigrants","Stkitts","routes","path","component","getCountries","getFundRanges","AdminLayout","showMenu","countries","initFunc","res1","res3","toggleMenu","getRoutes","prop","user","showcaseBg","to","src","logo","alt","height","md","classList","contains","avatar1","activeClassName","Button","block","logOut","color","initialState","password","prevPath","Auth","loginUser","preventDefault","authenticateUser","isAuthenticated","Container","maxHeight","Form","onSubmit","bind","lg","autoFocus","callBack","post","authReducer","action","authLoaded","goBack","combineReducers","immigrantDelete","success","middleware","thunk","store","createStore","reducers","composeWithDevTools","applyMiddleware","App","autoClose","draggable","enableMultiContainer","containerId","position","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0eACeA,EAAM,qCAEnBC,EAMI,CACFC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,qBCZDC,EAAe,eAC1BC,EAAc,cCMHC,EAAa,SAACC,EAAUC,GACnC,GAAIC,MAAMC,QAAQH,GAChBA,EAAII,SAAQ,SAAAC,GAAK,OAAIJ,EAASI,EAAMC,OAAOC,KAAKF,GAAO,aAClD,GAAmB,kBAARL,EAChB,GAAIA,EAAIQ,QACNP,EAASD,EAAIQ,cACR,GAAIR,EAAIK,OAASL,EAAIS,KAC1BC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,QACxBV,EAASD,EAAIK,OACE,CAAEO,KAAMd,OAClB,CACMQ,OAAOC,KAAKP,GAClBI,SAAQ,SAAAS,GACXZ,EAASD,EAAIa,WAGO,kBAARb,GAChBC,EAASD,ICDAc,EAAU,SAACC,GAAD,8CAA6C,WAClEC,GADkE,SAAAC,EAAA,sDAGlED,EAAS,CACPJ,KAAMf,EACNqB,QAASH,IALuD,2CAA7C,uD,SCxBVI,EAAyB,yBACpCC,EAAyB,yBACzBC,EAAwB,wBAEbC,EAA2B,2BACtCC,EAA2B,2BAC3BC,EAA0B,0BAC1BC,EAAuB,uBAEZC,EAAwB,wBACnCC,EAAwB,wBACxBC,EAAuB,uBAEZC,EAAuB,uBAClCC,EAAuB,uBACvBC,EAAsB,sBCfhBC,EAAWC,EAAQ,KAAnBD,OACFE,EAAS,SAAClC,GACF,kBAARA,IACFmC,EAAY,QACZA,EAAY,SACZC,OAAOC,SAASC,WAaPC,EAAY,SAAClC,GACxB,OAAIA,EAAMmC,UACRN,EAAO7B,EAAMmC,SAASzB,KAAKP,SACpBH,EAAMmC,SAASzB,KAAKP,SAClBH,EAAMG,SACf0B,EAAO7B,EAAMG,SACNH,EAAMG,cAFR,GAMIiC,EAAW,SAACC,GAAyC,IAA3BC,IAA0B,yDACzD5B,EAAOL,aAAakC,QAAQF,GAClC,OAAO3B,EAAQ4B,EAAQE,KAAKF,MAAM5B,GAAQA,EAAQ,MAEvC+B,EAAW,SAACJ,EAAcK,GAAf,OACtBrC,aAAasC,QACXN,EACmB,kBAAZK,EAAuBF,KAAKI,UAAUF,GAAWA,IAG/CZ,EAAc,SAACO,GAAD,OAAkBhC,aAAaC,WAAW+B,IAExDQ,EAAgB,SAACC,GAC5B,IAAIC,GAAW,IAAIC,MAAOC,UAAY,IAAID,KAAKF,GAAUG,UACrDC,EAAU,IAAIF,KAAKD,GACvB,OAAOI,KAAKC,IAAIF,EAAQG,iBAAmB,OAGvCC,GAAY,SAACC,GAAD,OAChB5B,EAAO4B,EAAK,CACVC,SAAU,IACVC,aAAc,QACdC,iBAAkB,OAClBC,SAAS,KAGAC,GAAc,SACzBC,GADyB,OAQzBA,EAAMC,KAAI,SAACC,GAAD,MAAmE,CAC3E1B,KACe,IAAb0B,EAAKC,IAAL,oBACiBV,GAAUS,EAAKE,MACf,IAAbF,EAAKE,IAAL,gBACSX,GAAUS,EAAKC,MADxB,UAEGV,GAAUS,EAAKC,KAFlB,eAE6BV,GAAUS,EAAKE,MAClDC,MAAOH,EAAKI,QCzCHC,GAAgB,SAACC,GAAD,8CAAgC,WAC3D1D,EACA2D,GAF2D,qBAAA1D,EAAA,sEAKzDD,EAAS,CACPJ,KAAMO,IANiD,EAUrDwD,IADMC,EAT+C,EASvDnE,KAAQmE,MAGJC,EAAS,CACblF,QAAS,CACPmF,cAAc,UAAD,OAAYF,KAd4B,SAiBvCG,IAAMC,IAAN,UAAavF,EAAb,uBAA+BiF,GAAcG,GAjBN,OAiBnDI,EAjBmD,OAmBzDjE,EAAS,CACPJ,KAAMQ,EACNF,QAAS+D,EAAIlE,OArB0C,kDAwBzDC,EAAS,CACPJ,KAAMS,EACNH,QAASqB,EAAU,EAAD,MAEpB2C,YAAM3C,EAAU,EAAD,KA5B0C,0DAAhC,yDAwGhB4C,GAAW,SAACT,EAA4BU,GAA7B,8CAA+C,WACrEpE,EACA2D,GAFqE,iCAAA1D,EAAA,sDAmBnE,IAnBmE,SAKnED,EAAS,CACPJ,KFzHkC,6BEmH+B,EAU/D+D,IADMC,EATyD,EASjEnE,KAAQmE,MAGJC,EAAS,CACblF,QAAS,CACPmF,cAAc,UAAD,OAAYF,KAGzBS,EAAQ,IAEZ,MAA2B/E,OAAOgF,QAAQF,GAA1C,eAAmD,EAAD,oBAAtCvE,EAAsC,MAAjC0D,EAAiC,QACrCc,GAAK,UAAOxE,EAAP,YAAc0D,EAAd,MApBiD,gBAuBjDQ,IAAMC,IAAN,UACbvF,EADa,uBACKiF,EAAaW,GAClCR,GAzBiE,OAuB7DI,EAvB6D,OA4BnEjE,EAAS,CACPJ,KACiB,eAAf8D,EACI/C,EACAP,EACNF,QAAS+D,EAAIlE,OAjCoD,kDAoCnEC,EAAS,CACPJ,KFvJsB,0BEwJtBM,QAASqB,EAAU,EAAD,MAEpB2C,YAAM3C,EAAU,EAAD,KAxCoD,0DAA/C,yD,2JCHTgD,G,4MAjHbC,MAAQ,CACNC,QAAS,CAAEC,OAAO,EAAOC,SAAS,GAClCC,SAAU,I,EA4DZC,YAAc,SAACH,EAAgBE,GAC7B,EAAKE,SAAS,CAAEL,QAAS,CAAEE,SAAUD,EAAOA,WAC5C,EAAKI,SAAS,CACZF,SAAUF,EACR,GAEA,cAACK,GAAA,EAAD,CAAcC,MAAO,CAAEC,QAAS,SAAhC,SAA4CL,O,mEA/DhD,IAAIM,KAAKC,MAAMR,UAA0C,IAA/BO,KAAKV,MAAMC,QAAQE,QAExC,OAAO,KADVO,KAAKL,aAAY,EAAO,4B,+BAGlB,IAAD,SAQDK,KAAKC,MANPC,EAFG,EAEHA,WACAC,EAHG,EAGHA,QACAC,EAJG,EAIHA,cACAC,EALG,EAKHA,WACAhC,EANG,EAMHA,MACGiC,EAPA,gFAWDN,KAAKV,MADPC,QAVG,EAUQC,MAVR,EAUeC,QAGtB,OACE,qCAgBE,cAACc,GAAA,EAAD,yBACEC,QAAS,kBACPN,GAAcI,EAAKG,SAAW,EAAKC,YAAc,MAEnDhG,KACE0F,EACI,MACAD,EACA,QACAE,EACA,WACA,OAENhC,MAAiB,OAAVA,EAAiB,GAAKA,GACzBiC,GACAN,KAAKV,MAAMC,UAGhBS,KAAKV,MAAMI,c,kCAgBL,IAAD,SAQNM,KAAKC,MANPC,EAFQ,EAERA,WACAO,EAHQ,EAGRA,SACAN,EAJQ,EAIRA,QACAC,EALQ,EAKRA,cACAC,EANQ,EAMRA,WACAhC,EAPQ,EAORA,MAGIsC,EAAkB,WAClBR,EACF,EAAKR,YAAYiB,KAAUT,QAAQ9B,GAAQ,yBAClC+B,EACT,EAAKT,YACHiB,KAAUC,cAAcxC,EAAMyC,WAAW,IAAK,IAAK,OACnD,wBAEOT,EACT,EAAKV,YACHiB,KAAUG,SAAS1C,EAAO,CAAEF,IAAK,IACjC,0CAGF,EAAKwB,aAAY,EAAM,MAIvBO,GAAcO,IACZG,KAAUI,QAAQ3C,GACpB2B,KAAKL,aAAY,EAAO,0BAK1BgB,Q,GA7GsBM,aCOfC,IAFcC,eAEG,SAAC,GAK4B,EAJzDC,UAI0D,IAAD,IAHzDC,aAGyD,MAHjD,GAGiD,MAFzD5B,eAEyD,SADtDa,EACsD,gDACzD,OACE,qCACIM,KAAUI,QAAQK,GAMlB,6BALA,wBAAOC,UAAU,0BAA0BC,QAASjB,EAAK9D,KAAzD,UACG6E,EACAf,EAAKG,UAAY,sBAAMa,UAAU,cAAhB,kBAKtB,cAAC,GAAD,aAAe7B,QAASA,EAASpB,OAAK,GAAKiC,IAC1CA,EAAKkB,SAAW,gCAAQlB,EAAKkB,eAsCvBC,GAAiB,SAAC,GAMxB,IAAD,IALJC,gBAKI,MALO,SAACC,KAKR,MAJJP,iBAII,MAJQ,GAIR,MAHJC,aAGI,MAHI,GAGJ,MAFJhD,aAEI,MAFI,GAEJ,EADDiC,EACC,yDACJ,OACE,eAACsB,GAAA,EAAD,CAAWN,UAAU,OAArB,UACIV,KAAUI,QAAQK,GAMlB,6BALA,wBAAOC,UAAU,0BAA0BC,QAASjB,EAAK9D,KAAzD,UACG6E,EACAf,EAAKG,UAAY,sBAAMa,UAAU,cAAhB,kBAKtB,eAACO,GAAA,EAAD,CAAYP,UAAU,0BAAtB,UACIV,KAAUI,QAAQI,GAOlB,GANA,cAACU,GAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,GAAA,EAAD,UACE,mBAAGV,UAAWF,QAMpB,cAAC,KAAD,aACEM,SAAU,SAACC,GAAD,OAERD,EAAS,CAAEO,OAAQ,CAAEzF,KAAM8D,EAAK9D,KAAM6B,MAAOsD,EAAEO,OAEjDC,eAAa,EACbC,YAAY,EACZ/D,MAAOA,GACH,CACFiC,OACA+B,WAAW,2BACN/B,EAAK+B,YADA,IAERvC,MAAO,CAAEpF,KAAM,QACf+F,SAAUH,EAAKG,SACfa,UAAU,gBAAD,OAAkBhB,EAAKb,QAAU,aAAe,gBAgJ1D6C,GAAc,SAAC,GAmCrB,IAlCLC,EAkCI,EAlCJA,YACA/F,EAiCI,EAjCJA,KAiCI,IAhCJgG,eAgCI,MAhCM,GAgCN,EA/BJC,EA+BI,EA/BJA,SA+BI,IA9BJnE,UA8BI,MA9BC,GA8BD,MA7BJmC,gBA6BI,aA5BJpC,aA4BI,MA5BI,GA4BJ,MA3BJ+C,iBA2BI,MA3BQ,GA2BR,MA1BJsB,gBA0BI,aAzBJrB,aAyBI,MAzBI,GAyBJ,EAvBDf,GAuBC,EAxBJqC,aAwBI,mIACJ,OACE,eAACf,GAAA,EAAD,CAAWN,UAAU,OAArB,UACIV,KAAUI,QAAQK,GAWlB,6BAVA,wBACEC,UAAS,kCACPhB,EAAKsC,WAAatC,EAAKsC,WAAa,IAEtCrB,QAAS/E,EAJX,UAMGiE,GAAY,sBAAMa,UAAU,cAAhB,gBACZD,KAKL,eAACQ,GAAA,EAAD,CAAYP,UAAU,0BAAtB,UACIV,KAAUI,QAAQI,GAOlB,GANA,cAACU,GAAA,EAAD,CAAiBC,UAAU,UAA3B,SACE,cAACC,GAAA,EAAD,UACE,mBAAGV,UAAWF,QAMpB,eAACyB,GAAA,EAAD,yBACEnI,KAAK,SACL4D,GAAIA,EACJ9B,KAAMA,EACNkF,SAAUe,EACVhC,SAAUA,EACViC,SAAUA,GACNpC,GAPN,cASE,wBAAQjC,MAAM,GAAGsE,aAAa,GAAGD,WAAUrE,EAA3C,SACGkE,IAEFC,EAAQvE,KAAI,SAAC6E,EAAMnI,GAGlB,OAFImI,EAAKC,QAAOD,EAAKtG,KAAOsG,EAAKC,OAG/B,wBACEJ,aAAcG,EAAKtG,KAEnB6B,MAAOyE,EAAKzE,MACZ2E,WAAYF,EAAKE,SAJnB,SAMGF,EAAKtG,MAJD7B,aAUd2F,EAAKkB,SACJ,uBACEF,UAAS,6BACPhB,EAAKsC,WAAatC,EAAKsC,WAAa,IAFxC,SAKGtC,EAAKkB,c,SCtVDyB,I,OAXC,SAAC,GAAD,SAAGC,KAEf,qBAAK5B,UAAU,sBAAf,SACE,qBAAKA,UAAU,GAAf,SACE,cAAC,cAAD,QAIJ,2B,mBCZW,OAA0B,gCCA1B,OAA0B,iCCA1B,OAA0B,qCCoC1B6B,I,OAzBH,SAAC,GAQN,IAAD,IAPJC,eAOI,SANJC,EAMI,EANJA,WACA/B,EAKI,EALJA,UAKI,IAJJgC,cAII,MAJK,GAIL,EAHJC,EAGI,EAHJA,SACAjF,EAEI,EAFJA,GAEI,IADJkF,aACI,MADI,GACJ,EAIJ,OAHAJ,GAAWC,EACNC,EAAOG,gBAAP,cAAgCJ,EAAhC,KACDK,QAAQC,MAEV,yBACErF,GAAIA,EACJgD,UAAS,eAAUkC,EAAV,YAAmBlC,EAC1B,KACC8B,EAAU,WAAa,KAC1BtD,MAAK,eAAOwD,GALd,SAOGC,M,yDCfD1I,GAAO,CACX+I,OAAQ,CACN,GACA,OACA,QACA,QACA,UACA,eACA,WACA,YACA,cACA,WACA,WACA,QACA,QACA,QACA,QACA,cACA,MACA,SAIEC,G,4MAKJvE,MAAQ,CAAEwE,OAAQ,GAAIC,SAAS,G,EAU/BrC,SAAW,SAACC,GACV,EAAK/B,SAAL,eAAiB+B,EAAEM,OAAOzF,KAAOmF,EAAEM,OAAO5D,QAC1C,EAAK2F,SAASrC,EAAEM,OAAO5D,Q,EAGzB2F,SAAW,SAAC7E,GAAD,OACT,EAAKS,SAAS,CAAEmE,SAAS,IAAQ,kBAC/B,EAAK9D,MACFhB,SAAS,UAAWE,GACpB8E,MAAK,SAAClF,GAAD,OAAS,EAAKa,SAAS,CAAEmE,SAAS,OACvCG,OAAM,SAACpK,GAAD,OAAS,EAAK8F,SAAS,CAAEmE,SAAS,W,8LAjB7C/D,KAAKJ,SAAS,CAAEmE,SAAS,I,SACnB/D,KAAKC,MACR1B,cAAc,WACd0F,MAAK,SAAClF,GAAD,OAAS,EAAKa,SAAS,CAAEmE,SAAS,OACvCG,OAAM,SAACpK,GAAD,OAAS,EAAK8F,SAAS,CAAEmE,SAAS,O,qIAgBnC,IAAD,OACCI,EAAkBnE,KAAKC,MAAvBkE,cACR,OACE,sBAAK7F,GAAG,WAAWgD,UAAU,qBAA7B,UACE,cAAC,GAAD,CAAS4B,KAAMlD,KAAKV,MAAMyE,UAC1B,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,6CAGJ,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,GAAD,CACE5C,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpCnF,KAAM,SACN6B,MAAO2B,KAAKV,MAAMwE,OAClBvB,YAAY,gBAGhB,cAAC8B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,WAAD,CACEzJ,KAAMsJ,EAAclG,KAClB,gBACEsG,EADF,EACEA,WACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,QACAC,EANF,EAMEA,eACAC,EAPF,EAOEA,iBACAC,EARF,EAQEA,gBACAC,EATF,EASEA,mBACAC,EAVF,EAUEA,SACAC,EAXF,EAWEA,SACAC,EAZF,EAYEA,eACAC,EAbF,EAaEA,QACAC,EAdF,EAcEA,UACAC,EAfF,EAeEA,YACAC,EAhBF,EAgBEA,cACAC,EAjBF,EAiBEA,iBACAC,EAlBF,EAkBEA,mBACAC,EAnBF,EAmBEA,kBACAC,EApBF,EAoBEA,kBApBF,MAqBO,CACLnB,aACAC,YACAC,QACAC,QACAC,UACAC,iBACAC,mBACAC,kBACAC,qBACAG,iBACAC,UACAC,YACAO,OAAO,GAAD,OAAKN,EAAYlH,IAAjB,YAAwBkH,EAAYjH,KAC1CwH,SAAS,GAAD,OAAKN,EAAcnH,IAAnB,YAA0BmH,EAAclH,KAChDmH,iBAAkBA,EAAiB/I,KACnCgJ,mBAAoBA,EAAmBhJ,KACvCiJ,oBACAC,oBACAV,SAAUA,EACNS,EAAkBxH,KAAI,SAAC4H,GAAD,OACpB,uBAAMvE,UAAU,GAAhB,UACGuE,EAAQrJ,KADX,IACkB,MADMqJ,EAAQvH,OAIlC,KACJ2G,SAAUA,EACNS,EAAkBzH,KAAI,SAAC4H,GAAD,OACpB,uBAAMvE,UAAU,GAAhB,UACGuE,EAAQrJ,KADX,IACkB,MADMqJ,EAAQvH,OAIlC,SAGR2D,OAAO,SACPX,UAAU,4BACVwE,SAAS,qBA5DX,gCAkEJ,eAACC,GAAA,EAAD,CAAMzE,UAAU,WAAhB,UACE,eAAC0E,GAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAAlC,UACE,gCACE,6BACGtL,GAAK+I,OAAO3F,KAAI,SAAC8E,EAAOpI,GAAR,OACf,oBAAI2G,UAAU,kBAAd,SACGyB,GADkCpI,UAM3C,gCACGwJ,EAAclG,KAAI,SAACmI,EAAWzL,GAAc,IAEzC4J,EAoBE6B,EApBF7B,WACAC,EAmBE4B,EAnBF5B,UACAC,EAkBE2B,EAlBF3B,MACAC,EAiBE0B,EAjBF1B,MACAC,EAgBEyB,EAhBFzB,QACAC,EAeEwB,EAfFxB,eACAC,EAcEuB,EAdFvB,iBACAC,EAaEsB,EAbFtB,gBACAC,EAYEqB,EAZFrB,mBACAC,EAWEoB,EAXFpB,SACAC,EAUEmB,EAVFnB,SACAC,EASEkB,EATFlB,eACAC,EAQEiB,EARFjB,QACAC,EAOEgB,EAPFhB,UACAC,EAMEe,EANFf,YACAC,EAKEc,EALFd,cACAC,EAIEa,EAJFb,iBACAC,EAGEY,EAHFZ,mBACAC,EAEEW,EAFFX,kBACAC,EACEU,EADFV,kBAEF,OACE,+BACE,oBAAIW,MAAM,MAAV,SAAiB1L,EAAM,IACvB,uCAAQ4J,EAAR,YAAsBC,KACtB,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,+BACE,cAAC,KAAD,CACE2B,mBAAiB,EACjBC,OAAO,IACPlI,MAAOgH,EAAYlH,IACnBqI,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPlI,MAAOgH,EAAYjH,IACnBoI,YAAY,YAGhB,+BACE,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPlI,MAAOiH,EAAcnH,IACrBqI,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPlI,MAAOiH,EAAclH,IACrBoI,YAAY,YAGhB,6BAAKjB,EAAiB/I,OACtB,6BAAKgJ,EAAmBhJ,OACxB,6BACGwI,EACGS,EAAkBxH,KAAI,SAAC4H,GAAD,OACpB,uBAAMvE,UAAU,GAAhB,UACGuE,EAAQrJ,KADX,IACkB,MADMqJ,EAAQvH,OAIlC,OAEN,6BACG2G,EACGS,EAAkBzH,KAAI,SAAC4H,GAAD,OACpB,uBAAMvE,UAAU,GAAhB,UACGuE,EAAQrJ,KADX,IACkB,MADMqJ,EAAQvH,OAIlC,OAEN,6BAAKsG,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKG,IACL,6BAAKC,IACL,6BAAKsB,KAAOrB,GAAWtJ,OAAO,iBA9DvBnB,YAoEfwJ,EAAcuC,QACd,qBAAKpF,UAAU,cAAf,SACE,iE,GA5NQL,aA0OP0F,gBALS,SAAC,GAAD,IAAGxC,EAAH,EAAGA,cAAH,sBACnBA,KAImC,CAAE5F,iBAAeU,aAA1C0H,CAAsD9C,I,UChQ/DhJ,GAAO,CACX+I,OAAQ,CACN,CAAEb,MAAO,GAAI6D,MAAO,MACpB,CAAE7D,MAAO,OAAQ6D,MAAO,QACxB,CAAE7D,MAAO,QAAS6D,MAAO,SACzB,CAAE7D,MAAO,iBAAkB6D,MAAO,kBAClC,CAAE7D,MAAO,WAAY6D,MAAO,iBAC5B,CAAE7D,MAAO,eAAgB6D,MAAO,eAChC,CAAE7D,MAAO,cAAe6D,MAAO,sBAC/B,CAAE7D,MAAO,YAAa6D,MAAO,oBAC7B,CAAE7D,MAAO,QAAS6D,MAAO,SACzB,CAAE7D,MAAO,QAAS6D,MAAO,SACzB,CAAE7D,MAAO,MAAO6D,MAAO,OACvB,CAAE7D,MAAO,UAAW6D,MAAO,WAC3B,CAAE7D,MAAO,iBAAkB6D,MAAO,yBAClC,CAAE7D,MAAO,aAAc6D,MAAO,eAI5BC,G,4MAOJvH,MAAQ,CACNwH,GAAI,GACJC,aAAc,GACdhD,SAAS,EACT7E,MAAO,GACP8H,UAAW,GACXC,QAAS,GACTC,WAAY,CAAEN,MAAO,KAAMO,KAAK,I,EAWlCC,eAAiB,kBAAOC,SAASC,WAAa,kBAAM,I,EACpDC,gBAAkB,kBAAOF,SAASC,WAAa,kBAAM,I,EAErDE,SAAW,SAACC,GAAoB,IAAD,EAGzB,EAAKnI,MADP4H,WAAcN,EAFa,EAEbA,MAAOO,EAFM,EAENA,IAEjBO,EAAYD,IAAcb,GAASO,EAAMA,EAC/C,EAAKlH,MAAM0H,aAAaC,MAAK,SAAC7M,EAAQ8M,GACpC,IAAIC,EAAK/M,EAAE0M,GACTM,EAAKF,EAAEJ,GAET,MAAqB,kBAAPK,EACVJ,EACEI,EAAGE,cAAgBD,EAAGC,eACnB,EACDF,EAAGE,cAAgBD,EAAGC,cACtB,EACA,GACD,EACHN,EACAI,EAAKC,EACLA,EAAKD,KAEX,EAAKlI,SAAS,CACZsH,WAAY,CAAEN,MAAOa,EAAWN,IAAKO,M,EAIzChG,SAAW,SAACC,GACV,EAAK/B,SAAL,aACEV,MAAM,2BAAM,EAAKI,MAAMJ,OAAlB,kBAA0ByC,EAAEM,OAAOzF,KAAOmF,EAAEM,OAAO5D,SACvDsD,EAAEM,OAAOzF,KAAOmF,EAAEM,OAAO5D,QAE5B,EAAK2F,Y,EAGPA,SAAW,kBACT,EAAKpE,SAAS,CAAEmE,SAAS,IAAQ,kBAC/B,EAAK9D,MACFhB,SAAS,aAAc,EAAKK,MAAMJ,OAClC+E,MAAK,SAAClF,GAAD,OAAS,EAAKa,SAAS,CAAEmE,SAAS,OACvCG,OAAM,SAACpK,GAAD,OAAS,EAAK8F,SAAS,CAAEmE,SAAS,W,8LAjD7C/D,KAAKJ,SAAS,CAAEmE,SAAS,I,SACnB/D,KAAKC,MACRgI,sBAAsB,cACtBhE,MAAK,SAACpJ,GAAD,OAAU,EAAK+E,SAAS,CAAEmE,SAAS,EAAOlJ,YAC/CqJ,OAAM,SAACpK,GAAD,OAAS,EAAK8F,SAAS,CAAEmE,SAAS,O,qIAgDnC,IAAD,SACgC/D,KAAKC,MAApC0H,EADD,EACCA,aAAcO,EADf,EACeA,aADf,EAQDlI,KAAKV,MALPyE,EAHG,EAGHA,QACAgD,EAJG,EAIHA,aACAC,EALG,EAKHA,UACAC,EANG,EAMHA,QANG,IAOHC,WAAcC,EAPX,EAOWA,IAAYM,EAPvB,EAOgBb,MAEvB,OACE,sBAAKtI,GAAG,WAAWgD,UAAU,qBAA7B,UACE,cAAC,GAAD,CAAS4B,KAAMa,IACf,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,8CAGJ,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGhD,UAAU,OAAtB,SACE,cAAC,GAAD,CACEI,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpCnF,KAAK,KACL6B,MAAO2B,KAAKV,MAAMwH,GAClBvE,YAAY,YACZf,QACE,oBAAGF,UAAU,YAAb,sBACW,sBAAMA,UAAU,YAAhB,uBADX,IACyD,IACvD,sBAAMA,UAAU,YAAhB,sBAFF,IAE+C,IAC7C,sBAAMA,UAAU,YAAhB,mBAHF,IAG4C,IAC1C,sBAAMA,UAAU,YAAhB,mBAJF,IAI4C,IAC1C,sBAAMA,UAAU,YAAhB,4BALF,OAKwD,IACtD,sBAAMA,UAAU,YAAhB,0BAKR,cAAC+C,EAAA,EAAD,CAAKC,GAAI,EAAG6D,GAAI,EAAG7G,UAAU,OAA7B,SACE,cAAC,WAAD,CACEzG,KAAM8M,EAAa1J,KACjB,gBACEsG,EADF,EACEA,WACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,MACA2D,EAJF,EAIEA,MACAC,EALF,EAKEA,IACAC,EANF,EAMEA,eACA5D,EAPF,EAOEA,MACA6D,EARF,EAQEA,OACAnD,EATF,EASEA,UACAC,EAVF,EAUEA,YACAC,EAXF,EAWEA,cACAkD,EAZF,EAYEA,sBACAjD,EAbF,EAaEA,iBACAkD,EAdF,EAcEA,mBAdF,MAeO,CACLlE,aACAC,YACAC,QACA2D,QACAC,MACAC,iBACA5D,QACAC,QAAoB,OAAX4D,EACT5C,OAAO,GAAD,OAAKN,EAAYlH,IAAjB,YAAwBkH,EAAYjH,KAC1CwH,SAAS,GAAD,OAAKN,EAAcnH,IAAnB,YAA0BmH,EAAclH,KAChDmH,iBAAkBA,EAAiB/I,KACnCiM,mBAAoBA,EAAmBjM,KACvCgM,wBACApD,gBAGJnD,OAAO,SACPX,UAAU,4BACVwE,SAAS,sBApCX,uBAyCF,cAACzB,EAAA,EAAD,CAAKC,GAAI,EAAG6D,GAAI,EAAG7G,UAAU,OAA7B,SACE,cAAC,WAAD,CACEzG,KAAM8M,EAAa1J,KACjB,kBAA8C,CAC5CsG,WADF,EAAGA,WAEDC,UAFF,EAAeA,UAGbC,MAHF,EAA0BA,MAIxBC,MAJF,EAAiCA,UAOnCzC,OAAO,SACPX,UAAU,yBACVwE,SAAS,gCAXX,0BAkBJ,eAAC1B,EAAA,EAAD,CAAK9C,UAAU,OAAf,UACE,cAAC+C,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,8CAEF,cAACD,EAAA,EAAD,CAAK8D,GAAG,IAAR,SACE,cAAC,GAAD,CACE7J,GAAG,eACH9B,KAAK,eACL6B,MAAO0I,EACPvE,QAAO,CAAG,CAAEhG,KAAM,OAAQ6B,MAAO,KAA1B,oBAAmC6J,IAC1C3F,YAAY,YACZE,SAAUzC,KAAK0B,SACfL,MAAM,sBACNqH,OAAO,SAGX,cAACrE,EAAA,EAAD,CAAK8D,GAAG,IAAI7G,UAAU,OAAtB,SACE,cAAC,GAAD,CACEe,WAAY,CACVvC,MAAO,CAAEpF,KAAM,OAAQiO,OAAQ,qBAC/BlI,UAAU,EACV8B,YAAa,OACbqG,MAAO,6CAETvH,MAAM,UACNwH,QAAS7I,KAAKuH,gBACduB,OAAQ9I,KAAKoH,eACb/I,MAAO2I,EACP+B,aAAa,MACbvM,KAAK,YACL8B,GAAG,YACHoD,SAAU,SAACC,GAAD,OACR,EAAKD,SAAL,2BACKC,GADL,IAEEM,OAAO,2BAAMN,EAAEM,QAAT,IAAiBzF,KAAM,sBAKrC,cAAC6H,EAAA,EAAD,CAAK8D,GAAG,IAAI7G,UAAU,OAAtB,SACE,cAAC,GAAD,CACEe,WAAY,CACVvC,MAAO,CAAEpF,KAAM,OAAQiO,OAAQ,qBAC/BlI,UAAU,EACV8B,YAAa,KACbqG,MAAO,6CAETvH,MAAM,IACNwH,QAAS7I,KAAKuH,gBACduB,OAAQ9I,KAAKoH,eACb/I,MAAO4I,EACP8B,aAAa,MACbvM,KAAK,UACL8B,GAAG,UACHoD,SAAU,SAACC,GAAD,OACR,EAAKD,SAAL,2BACKC,GADL,IAEEM,OAAO,2BAAMN,EAAEM,QAAT,IAAiBzF,KAAM,uBAMvC,eAACuJ,GAAA,EAAD,CAAMzE,UAAU,gBAAhB,UACE,eAAC0E,GAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAAlC,UACE,gCACE,6BACGtL,GAAK+I,OAAO3F,KAAI,WAAmBtD,GAAnB,IAAGoI,EAAH,EAAGA,MAAO6D,EAAV,EAAUA,MAAV,OACf,qBAAItF,UAAU,kBAAd,UACGyB,EAAO,IACR,yBACEzB,UAAU,6BACV0H,QAAS,kBAAM,EAAKxB,SAASZ,IAF/B,UAIE,mBACEtF,UAAS,gCACPmG,IAAcb,GAASO,EAAM,iBAAmB,MAGpD,mBACE7F,UAAS,8BACPmG,IAAcb,GAAUO,EAAyB,GAAnB,yBAbDxM,UAqB3C,gCACGgN,EAAa1J,KAAI,SAACmI,EAAWzL,GAAc,IAExC4J,EAcE6B,EAdF7B,WACAC,EAaE4B,EAbF5B,UACAC,EAYE2B,EAZF3B,MACA2D,EAWEhC,EAXFgC,MACAC,EAUEjC,EAVFiC,IACAC,EASElC,EATFkC,eACA5D,EAQE0B,EARF1B,MACA6D,EAOEnC,EAPFmC,OACAnD,EAMEgB,EANFhB,UACAC,EAKEe,EALFf,YACAC,EAIEc,EAJFd,cACAkD,EAGEpC,EAHFoC,sBACAjD,EAEEa,EAFFb,iBACAkD,EACErC,EADFqC,mBAEF,OACE,+BACE,oBAAIpC,MAAM,MAAV,SAAiB1L,EAAM,IACvB,uCAAQ4J,EAAR,YAAsBC,KACtB,wCAAW4D,KACX,6BAAKE,IACL,+BACE,cAAC,KAAD,CACEhC,mBAAiB,EACjBC,OAAO,IACPlI,MAAOgH,EAAYlH,IACnBqI,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPlI,MAAOgH,EAAYjH,IACnBoI,YAAY,YAGhB,+BACE,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPlI,MAAOiH,EAAcnH,IACrBqI,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPlI,MAAOiH,EAAclH,IACrBoI,YAAY,YAGhB,6BAAKiC,EAAmBjM,OACxB,6BAAK+I,EAAiB/I,OACtB,6BAAKiI,IACL,6BAAKC,IACL,6BAAK1H,EAAcqL,KACnB,6BAAgB,OAAXE,EAAkB,OAAS,UAChC,6BAAKC,EAAwB,OAAS,UAEtC,6BAAK/B,KAAOrB,GAAWtJ,OAAO,iBA3CvBnB,YAiDfgN,EAAajB,QACb,qBAAKpF,UAAU,cAAf,SACE,iE,GAtUSL,aAmVR0F,gBAJS,SAAC,GAAD,IAAGgB,EAAH,EAAGA,aAAH,sBACnBA,KAGmC,CAAEM,sBT3TL,yDAAM,WACzCnN,EACA2D,GAFyC,qBAAA1D,EAAA,sEAKvCD,EAAS,CACPJ,KAAMc,IAN+B,EAUnCiD,IADMC,EAT6B,EASrCnE,KAAQmE,MAGJC,EAAS,CACblF,QAAS,CACPmF,cAAc,UAAD,OAAYF,KAdU,SAiBrBG,IAAMC,IAAN,UAAavF,EAAb,0BAA0CoF,GAjBrB,cAiBjCI,EAjBiC,OAmBvCjE,EAAS,CACPJ,KAAMe,EACNT,QAAS+D,EAAIlE,OArBwB,kBAuBhCkE,EAAIlE,MAvB4B,kCAyBvCC,EAAS,CACPJ,KAAMgB,EACNV,QAASqB,EAAU,EAAD,MAEpB2C,YAAM3C,EAAU,EAAD,KA7BwB,0DAAN,yDS2T4B4C,aAAlD0H,CAEbE,ICzWIhM,GAAO,CACX+I,OAAQ,CACN,CAAEb,MAAO,GAAI6D,MAAO,MACpB,CAAE7D,MAAO,OAAQ6D,MAAO,QACxB,CAAE7D,MAAO,QAAS6D,MAAO,SACzB,CAAE7D,MAAO,iBAAkB6D,MAAO,kBAClC,CAAE7D,MAAO,cAAe6D,MAAO,sBAC/B,CAAE7D,MAAO,YAAa6D,MAAO,oBAC7B,CAAE7D,MAAO,QAAS6D,MAAO,SACzB,CAAE7D,MAAO,QAAS6D,MAAO,SACzB,CAAE7D,MAAO,MAAO6D,MAAO,OACvB,CAAE7D,MAAO,UAAW6D,MAAO,WAC3B,CAAE7D,MAAO,aAAc6D,MAAO,eAI5BqC,G,4MAMJ3J,MAAQ,CACNwH,GAAI,GACJ/C,SAAS,EACT7E,MAAO,GACP8H,UAAW,GACXC,QAAS,GACTC,WAAY,CAAEN,MAAO,KAAMO,KAAK,I,EAWlCC,eAAiB,kBAAOC,SAASC,WAAa,kBAAM,I,EACpDC,gBAAkB,kBAAOF,SAASC,WAAa,kBAAM,I,EAErDE,SAAW,SAACC,GAAoB,IAAD,EAGzB,EAAKnI,MADP4H,WAAcN,EAFa,EAEbA,MAAOO,EAFM,EAENA,IAEjBO,EAAYD,IAAcb,GAASO,EAAMA,EAC/C,EAAKlH,MAAMiJ,YAAYtB,MAAK,SAAC7M,EAAQ8M,GACnC,IAAIC,EAAK/M,EAAE0M,GACTM,EAAKF,EAAEJ,GAET,MAAqB,kBAAPK,EACVJ,EACEI,EAAGE,cAAgBD,EAAGC,eACnB,EACDF,EAAGE,cAAgBD,EAAGC,cACtB,EACA,GACD,EACHN,EACAI,EAAKC,EACLA,EAAKD,KAEX,EAAKlI,SAAS,CACZsH,WAAY,CAAEN,MAAOa,EAAWN,IAAKO,M,EAIzChG,SAAW,SAACC,GACV,EAAK/B,SAAL,aACEV,MAAM,2BAAM,EAAKI,MAAMJ,OAAlB,kBAA0ByC,EAAEM,OAAOzF,KAAOmF,EAAEM,OAAO5D,SACvDsD,EAAEM,OAAOzF,KAAOmF,EAAEM,OAAO5D,QAE5B,EAAK2F,Y,EAGPA,SAAW,kBACT,EAAKpE,SAAS,CAAEmE,SAAS,IAAQ,kBAC/B,EAAK9D,MACFhB,SAAS,WAAY,EAAKK,MAAMJ,OAChC+E,MAAK,SAAClF,GAAD,OAAS,EAAKa,SAAS,CAAEmE,SAAS,OACvCG,OAAM,SAACpK,GAAD,OAAS,EAAK8F,SAAS,CAAEmE,SAAS,W,8LAjD7C/D,KAAKJ,SAAS,CAAEmE,SAAS,I,SACnB/D,KAAKC,MACRkJ,uBACAlF,MAAK,SAACpJ,GAAD,OAAU,EAAK+E,SAAS,CAAEmE,SAAS,EAAOlJ,YAC/CqJ,OAAM,SAACpK,GAAD,OAAS,EAAK8F,SAAS,CAAEmE,SAAS,O,qIAgDnC,IAAD,OACCmF,EAAgBlJ,KAAKC,MAArBiJ,YAAF,EAMAlJ,KAAKV,MAJPyE,EAFE,EAEFA,QACAiD,EAHE,EAGFA,UACAC,EAJE,EAIFA,QAJE,IAKFC,WAAcC,EALZ,EAKYA,IAAYM,EALxB,EAKiBb,MAEvB,OACE,sBAAKtI,GAAG,WAAWgD,UAAU,qBAA7B,UACE,cAAC,GAAD,CAAS4B,KAAMa,IACf,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,6CAGJ,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGhD,UAAU,OAAtB,SACE,cAAC,GAAD,CACEI,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpCnF,KAAK,KACL6B,MAAO2B,KAAKV,MAAMwH,GAClBvE,YAAY,YACZf,QACE,oBAAGF,UAAU,YAAb,sBACW,sBAAMA,UAAU,YAAhB,uBADX,IACyD,IACvD,sBAAMA,UAAU,YAAhB,sBAFF,IAE+C,IAC7C,sBAAMA,UAAU,YAAhB,mBAHF,IAG4C,IAC1C,sBAAMA,UAAU,YAAhB,mBAJF,IAI4C,IAC1C,sBAAMA,UAAU,YAAhB,4BALF,OAKwD,IACtD,sBAAMA,UAAU,YAAhB,0BAKR,cAAC+C,EAAA,EAAD,CAAKC,GAAI,EAAG6D,GAAI,EAAG7G,UAAU,OAA7B,SACE,cAAC,WAAD,CACEzG,KAAMqO,EAAYjL,KAChB,gBACEsG,EADF,EACEA,WACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,MACA2D,EAJF,EAIEA,MACAC,EALF,EAKEA,IACAC,EANF,EAMEA,eACA5D,EAPF,EAOEA,MACA6D,EARF,EAQEA,OACAnD,EATF,EASEA,UACAG,EAVF,EAUEA,iBACAkD,EAXF,EAWEA,mBAXF,MAYO,CACLlE,aACAC,YACAC,QACA2D,QACAC,MACAC,iBACA5D,QACAC,QAAoB,OAAX4D,EACThD,iBAAkBA,EAAiB/I,KACnCiM,mBAAoBA,EAAmBjM,KACvC4I,gBAGJnD,OAAO,SACPX,UAAU,4BACVwE,SAAS,qBA9BX,uBAmCF,cAACzB,EAAA,EAAD,CAAKC,GAAI,EAAG6D,GAAI,EAAG7G,UAAU,OAA7B,SACE,cAAC,WAAD,CACEzG,KAAMqO,EAAYjL,KAChB,kBAA8C,CAC5CsG,WADF,EAAGA,WAEDC,UAFF,EAAeA,UAGbC,MAHF,EAA0BA,MAIxBC,MAJF,EAAiCA,UAOnCzC,OAAO,SACPX,UAAU,yBACVwE,SAAS,+BAXX,0BAkBJ,eAAC1B,EAAA,EAAD,CAAK9C,UAAU,OAAf,UACE,cAAC+C,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,8CAEF,cAACD,EAAA,EAAD,CAAK8D,GAAG,IAAI7G,UAAU,OAAtB,SACE,cAAC,GAAD,CACEe,WAAY,CACVvC,MAAO,CAAEpF,KAAM,OAAQiO,OAAQ,qBAC/BlI,UAAU,EACV8B,YAAa,OACbqG,MAAO,6CAETvH,MAAM,UACNwH,QAAS7I,KAAKuH,gBACduB,OAAQ9I,KAAKoH,eACb/I,MAAO2I,EACP+B,aAAa,MACbvM,KAAK,YACL8B,GAAG,YACHoD,SAAU,SAACC,GAAD,OACR,EAAKD,SAAL,2BACKC,GADL,IAEEM,OAAO,2BAAMN,EAAEM,QAAT,IAAiBzF,KAAM,sBAKrC,cAAC6H,EAAA,EAAD,CAAK8D,GAAG,IAAI7G,UAAU,OAAtB,SACE,cAAC,GAAD,CACEe,WAAY,CACVvC,MAAO,CAAEpF,KAAM,OAAQiO,OAAQ,qBAC/BlI,UAAU,EACV8B,YAAa,KACbqG,MAAO,6CAETvH,MAAM,IACNwH,QAAS7I,KAAKuH,gBACduB,OAAQ9I,KAAKoH,eACb/I,MAAO4I,EACP8B,aAAa,MACbvM,KAAK,UACL8B,GAAG,UACHoD,SAAU,SAACC,GAAD,OACR,EAAKD,SAAL,2BACKC,GADL,IAEEM,OAAO,2BAAMN,EAAEM,QAAT,IAAiBzF,KAAM,uBAMvC,eAACuJ,GAAA,EAAD,CAAMzE,UAAU,gBAAhB,UACE,eAAC0E,GAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAAlC,UACE,gCACE,6BACGtL,GAAK+I,OAAO3F,KAAI,WAAmBtD,GAAnB,IAAGoI,EAAH,EAAGA,MAAO6D,EAAV,EAAUA,MAAV,OACf,qBAAItF,UAAU,kBAAd,UACGyB,EAAO,IACR,yBACEzB,UAAU,6BACV0H,QAAS,kBAAM,EAAKxB,SAASZ,IAF/B,UAIE,mBACEtF,UAAS,gCACPmG,IAAcb,GAASO,EAAM,iBAAmB,MAGpD,mBACE7F,UAAS,8BACPmG,IAAcb,GAAUO,EAAyB,GAAnB,yBAbDxM,UAqB3C,gCACGuO,EAAYjL,KAAI,SAACmI,EAAWzL,GAAc,IAEvC4J,EAWE6B,EAXF7B,WACAC,EAUE4B,EAVF5B,UACAC,EASE2B,EATF3B,MACA2D,EAQEhC,EARFgC,MACAC,EAOEjC,EAPFiC,IACAC,EAMElC,EANFkC,eACA5D,EAKE0B,EALF1B,MACA6D,EAIEnC,EAJFmC,OACAnD,EAGEgB,EAHFhB,UACAG,EAEEa,EAFFb,iBACAkD,EACErC,EADFqC,mBAEF,OACE,+BACE,oBAAIpC,MAAM,MAAV,SAAiB1L,EAAM,IACvB,uCAAQ4J,EAAR,YAAsBC,KACtB,wCAAW4D,KACX,6BAAKE,IACL,6BAAKG,EAAmBjM,OACxB,6BAAK+I,EAAiB/I,OACtB,6BAAKiI,IACL,6BAAKC,IACL,6BAAK1H,EAAcqL,KACnB,6BAAgB,OAAXE,EAAkB,OAAS,UAEhC,6BAAK9B,KAAOrB,GAAWtJ,OAAO,iBAZvBnB,YAkBfuO,EAAYxC,QACZ,qBAAKpF,UAAU,cAAf,SACE,iE,GA/QQL,aA4RP0F,gBAJS,SAAC,GAAD,IAAGuC,EAAH,EAAGA,YAAH,sBACnBA,KAGmC,CAAEC,qBV/NN,yDAAM,WACxCrO,EACA2D,GAFwC,qBAAA1D,EAAA,sEAKtCD,EAAS,CACPJ,KAAMiB,IAN8B,EAUlC8C,IADMC,EAT4B,EASpCnE,KAAQmE,MAGJC,EAAS,CACblF,QAAS,CACPmF,cAAc,UAAD,OAAYF,KAdS,SAiBpBG,IAAMC,IAAN,UAAavF,EAAb,wBAAwCoF,GAjBpB,cAiBhCI,EAjBgC,OAmBtCjE,EAAS,CACPJ,KAAMkB,EACNZ,QAAS+D,EAAIlE,OArBuB,kBAuB/BkE,EAAIlE,MAvB2B,kCAyBtCC,EAAS,CACPJ,KAAMmB,EACNb,QAASqB,EAAU,EAAD,MAEpB2C,YAAM3C,EAAU,EAAD,KA7BuB,0DAAN,yDU+N4B4C,aAAjD0H,CAEbsC,IC9SIpO,GAAO,CACX+I,OAAQ,CACN,GACA,OACA,QACA,QACA,UACA,eACA,WACA,YACA,cACA,WACA,WACA,QACA,QACA,QACA,QACA,cACA,MACA,SAIEwF,G,4MAKJ9J,MAAQ,CAAEwE,OAAQ,GAAIC,SAAS,G,EAS/BrC,SAAW,SAACC,GACV,EAAK/B,SAAL,eAAiB+B,EAAEM,OAAOzF,KAAOmF,EAAEM,OAAO5D,QAC1C,EAAK2F,SAASrC,EAAEM,OAAO5D,Q,EAGzB2F,SAAW,SAAC7E,GAAD,OACT,EAAKS,SAAS,CAAEmE,SAAS,IAAQ,kBAC/B,EAAK9D,MACFhB,SAAS,UAAWE,GACpB8E,MAAK,SAAClF,GAAD,OAAS,EAAKa,SAAS,CAAEmE,SAAS,OACvCG,OAAM,SAACpK,GAAD,OAAS,EAAK8F,SAAS,CAAEmE,SAAS,W,8LAhB7C/D,KAAKJ,SAAS,CAAEmE,SAAS,I,SACnB/D,KAAKC,MACR1B,cAAc,WACd0F,MAAK,SAAClF,GAAD,OAAS,EAAKa,SAAS,CAAEmE,SAAS,OACvCG,OAAM,SAACpK,GAAD,OAAS,EAAK8F,SAAS,CAAEmE,SAAS,O,qIAenC,IAAD,OACCI,EAAkBnE,KAAKC,MAAvBkE,cACR,OACE,sBAAK7F,GAAG,WAAWgD,UAAU,qBAA7B,UACE,cAAC,GAAD,CAAS4B,KAAMlD,KAAKV,MAAMyE,UAC1B,cAACK,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,+CAGJ,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,GAAD,CACE5C,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpCnF,KAAM,SACN6B,MAAO2B,KAAKV,MAAMwE,OAClBvB,YAAY,gBAGhB,cAAC8B,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,WAAD,CACEzJ,KAAMsJ,EAAclG,KAClB,gBACEsG,EADF,EACEA,WACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,QACAC,EANF,EAMEA,eACAC,EAPF,EAOEA,iBACAC,EARF,EAQEA,gBACAC,EATF,EASEA,mBACAC,EAVF,EAUEA,SACAC,EAXF,EAWEA,SACAC,EAZF,EAYEA,eACAC,EAbF,EAaEA,QACAC,EAdF,EAcEA,UACAC,EAfF,EAeEA,YACAC,EAhBF,EAgBEA,cACAC,EAjBF,EAiBEA,iBACAC,EAlBF,EAkBEA,mBACAC,EAnBF,EAmBEA,kBACAC,EApBF,EAoBEA,kBApBF,MAqBO,CACLnB,aACAC,YACAC,QACAC,QACAC,UACAC,iBACAC,mBACAC,kBACAC,qBACAG,iBACAC,UACAC,YACAO,OAAO,GAAD,OAAKN,EAAYlH,IAAjB,YAAwBkH,EAAYjH,KAC1CwH,SAAS,GAAD,OAAKN,EAAcnH,IAAnB,YAA0BmH,EAAclH,KAChDmH,iBAAkBA,EAAiB/I,KACnCgJ,mBAAoBA,EAAmBhJ,KACvCiJ,oBACAC,oBACAV,SAAUA,EACNS,EAAkBxH,KAAI,SAAC4H,GAAD,OACpB,uBAAMvE,UAAU,GAAhB,UACGuE,EAAQrJ,KADX,IACkB,MADMqJ,EAAQvH,OAIlC,KACJ2G,SAAUA,EACNS,EAAkBzH,KAAI,SAAC4H,GAAD,OACpB,uBAAMvE,UAAU,GAAhB,UACGuE,EAAQrJ,KADX,IACkB,MADMqJ,EAAQvH,OAIlC,SAGR2D,OAAO,SACPX,UAAU,4BACVwE,SAAS,qBA5DX,gCAkEJ,eAACC,GAAA,EAAD,CAAMzE,UAAU,WAAhB,UACE,eAAC0E,GAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAAlC,UACE,gCACE,6BACGtL,GAAK+I,OAAO3F,KAAI,SAAC8E,EAAOpI,GAAR,OACf,oBAAI2G,UAAU,kBAAd,SACGyB,GADkCpI,UAM3C,gCACGwJ,EAAclG,KAAI,SAACmI,EAAWzL,GAAc,IAEzC4J,EAoBE6B,EApBF7B,WACAC,EAmBE4B,EAnBF5B,UACAC,EAkBE2B,EAlBF3B,MACAC,EAiBE0B,EAjBF1B,MACAC,EAgBEyB,EAhBFzB,QACAC,EAeEwB,EAfFxB,eACAC,EAcEuB,EAdFvB,iBACAC,EAaEsB,EAbFtB,gBACAC,EAYEqB,EAZFrB,mBACAC,EAWEoB,EAXFpB,SACAC,EAUEmB,EAVFnB,SACAC,EASEkB,EATFlB,eACAC,EAQEiB,EARFjB,QACAC,EAOEgB,EAPFhB,UACAC,EAMEe,EANFf,YACAC,EAKEc,EALFd,cACAC,EAIEa,EAJFb,iBACAC,EAGEY,EAHFZ,mBACAC,EAEEW,EAFFX,kBACAC,EACEU,EADFV,kBAEF,OACE,+BACE,oBAAIW,MAAM,MAAV,SAAiB1L,EAAM,IACvB,uCAAQ4J,EAAR,YAAsBC,KACtB,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,+BACE,cAAC,KAAD,CACE2B,mBAAiB,EACjBC,OAAO,IACPlI,MAAOgH,EAAYlH,IACnBqI,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPlI,MAAOgH,EAAYjH,IACnBoI,YAAY,YAGhB,+BACE,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPlI,MAAOiH,EAAcnH,IACrBqI,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPlI,MAAOiH,EAAclH,IACrBoI,YAAY,YAGhB,6BAAKjB,EAAiB/I,OACtB,6BAAKgJ,EAAmBhJ,OACxB,6BACGwI,EACGS,EAAkBxH,KAAI,SAAC4H,GAAD,OACpB,uBAAMvE,UAAU,GAAhB,UACGuE,EAAQrJ,KADX,IACkB,MADMqJ,EAAQvH,OAIlC,OAEN,6BACG2G,EACGS,EAAkBzH,KAAI,SAAC4H,GAAD,OACpB,uBAAMvE,UAAU,GAAhB,UACGuE,EAAQrJ,KADX,IACkB,MADMqJ,EAAQvH,OAIlC,OAEN,6BAAKsG,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKG,IACL,6BAAKC,IACL,6BAAKsB,KAAOrB,GAAWtJ,OAAO,iBA9DvBnB,YAoEfwJ,EAAcuC,QACd,qBAAKpF,UAAU,cAAf,SACE,iE,GA3NQL,aCLPoI,GA7BF,CACX,CACEC,KAAM,WACN9M,KAAM,cACN+M,UAAW1F,IAEb,CACEyF,KAAM,WACN9M,KAAM,gBACN+M,UDkQW5C,aALS,SAAC,GAAD,IAAGxC,EAAH,EAAGA,cAAH,sBACnBA,KAImC,CAAE5F,iBAAeU,aAA1C0H,CAAsDyC,KChQnE,CACEE,KAAM,cACN9M,KAAM,0BACN+M,UAAW1C,IAEb,CACEyC,KAAM,YACN9M,KAAM,yBACN+M,UAAWN,IAGb,CACEK,KAAM,IACN9M,KAAM,cACN+M,UAAW1F,KC1BF2F,GAAY,uCAAG,sBAAAzO,EAAA,sEACpB8D,IAAMC,IAAN,UAAavF,EAAb,yBADoB,mFAAH,qDAIZkQ,GAAa,uCAAG,WAAO/O,GAAP,SAAAK,EAAA,sEACrB8D,IAAMC,IAAN,UAAavF,EAAb,4BAAoCmB,IADf,mFAAH,sDCQpBgP,G,4MAIJpK,MAAQ,CACNqK,UAAU,EACV5F,SAAS,EACT6F,UAAW,GACX1B,aAAc,I,EAOhB2B,S,sBAAW,gCAAA9O,EAAA,6DACT,EAAK6E,SAAS,CAAEmE,SAAS,IADhB,kBAGYyF,KAHZ,cAGDM,EAHC,gBAKYL,GAAc,UAL1B,OAKDM,EALC,OAOP,EAAKnK,SAAS,CACZmE,SAAS,EACT6F,UAAWE,EAAKjP,KAChBqN,aAAc6B,EAAKlP,OAVd,kDAaP,EAAK+E,SAAS,CAAEmE,SAAS,IACzBlK,EAAU,OAAC,EAAD,6BAAC,KAAKyC,gBAAN,aAAC,EAAezB,KAAMmE,KAdzB,0D,EAkBXgL,WAAa,kBAAM,EAAKpK,SAAS,CAAE+J,UAAW,EAAKrK,MAAMqK,Y,EAEzDM,UAAY,SACVZ,GAKI,IAAD,EACiC,EAAK/J,MAAjC4I,EADL,EACKA,aAAc0B,EADnB,EACmBA,UACtB,OAAOP,EAAOpL,KAAI,SAACiM,EAAMvP,GAAP,OAChB,cAAC,KAAD,CACE2O,KAAMY,EAAKZ,KACXC,UAAW,kBACT,cAACW,EAAKX,UAAN,CACEK,UAAWA,EAAU3L,KACnB,SAAC4H,GAAD,MAA4C,CAC1CrJ,KAAMqJ,EAAQrJ,KACd6B,MAAOwH,EAAQvH,OAGnB4J,aAAcnK,GAAYmK,OAGzBvN,O,kEA7CTqF,KAAK6J,a,+BAkDG,IAAD,OACCM,EAASnK,KAAKC,MAAdkK,KACJR,EAAa3J,KAAKV,MAAlBqK,SAEJ,OAAOQ,EACL,cAAC,GAAD,CACE/G,SAAO,EACPC,WAAY+G,GACZ9L,GAAG,WACHgD,UAAU,kBAJZ,SAME,sBAAKA,UAAU,YAAYhD,GAAG,YAA9B,UACE,8BACE,eAACyH,GAAA,EAAD,CAAMzE,UAAU,mDAAhB,UACE,qBAAIA,UAAU,cAAd,UACE,mBACEA,UAAU,kCACV0H,QAAS,kBAAM,EAAKgB,gBAEtB,cAAC,IAAD,CAAMK,GAAG,IAAT,SACE,sBAAM/I,UAAU,6BAAhB,4BAGJ,qBAAKA,UAAU,cAAf,SACE,qBAAKgJ,IAAG,UAAKC,IAAQC,IAAI,OAAOC,OAAQ,YAI9C,eAACrG,EAAA,EAAD,CAAK9C,UAAU,gBAAf,UACE,cAAC+C,EAAA,EAAD,CACE/C,UAAS,4BACPqI,EAAW,SAAW,GADf,cAGTrF,GAAG,KACHoG,GAAG,IACH1B,QAAS,SAACrH,GACJA,EAAEM,OAAO0I,UAAUC,SAAS,SAAS,EAAKZ,cAPlD,SAUE,eAACjE,GAAA,EAAD,CAAMzE,UAAU,qBAAhB,UACE,oBAAIA,UAAU,aAAd,SACE,mBACE0H,QAAS,kBAAM,EAAKgB,cACpB1I,UAAU,4BAGd,sBAAKA,UAAU,mBAAf,UACE,qBACEkJ,IAAI,MACJlJ,UAAU,sBACVgJ,IAAG,UAAKO,MAEV,uBACA,2CAAYV,EAAK1F,SACjB,uBAEA,qBAAKnD,UAAU,qBAAf,SAAqC6I,EAAK1F,WAE5C,sBAAKnG,GAAG,OAAOgD,UAAU,OAAzB,UACE,mBAAGA,UAAU,OAAb,SACE,cAAC,IAAD,CACEwJ,gBAAgB,SAChB9B,QAAShJ,KAAKgK,WACdK,GAAG,WAHL,kCAQF,oBAAI/I,UAAU,cACd,mBAAGA,UAAU,OAAb,SACE,cAAC,IAAD,CACEwJ,gBAAgB,SAChB9B,QAAShJ,KAAKgK,WACdK,GAAG,WAHL,oCAQF,oBAAI/I,UAAU,cACd,mBAAGA,UAAU,OAAb,SACE,cAAC,IAAD,CACEwJ,gBAAgB,SAChB9B,QAAShJ,KAAKgK,WACdK,GAAG,cAHL,mCAQF,oBAAI/I,UAAU,cACd,mBAAGA,UAAU,OAAb,SACE,cAAC,IAAD,CACEwJ,gBAAgB,SAChB9B,QAAShJ,KAAKgK,WACdK,GAAG,YAHL,kCAQF,oBAAI/I,UAAU,cAYd,cAACyJ,EAAA,EAAD,CAAQC,OAAK,EAAChC,QAAShJ,KAAKC,MAAMgL,OAAQC,MAAM,SAAhD,4BAMN,cAAC7G,EAAA,EAAD,CAAK/C,UAAU,OAAOoJ,GAAG,IAAzB,SACE,eAAC3E,GAAA,EAAD,CAAMzE,UAAU,4BAAhB,UACE,cAAC,GAAD,CAAS4B,KAAMlD,KAAKV,MAAMyE,UAGxB,cAAC,KAAD,UAAS/D,KAAKiK,UAAUZ,mBAQpC,cAAC,KAAD,CAAUgB,GAAG,oB,GA/LOpJ,aAuMX0F,gBAJS,SAAC,GAAD,IAAGpM,EAAH,EAAGA,KAAH,sBACnBA,KAGmC,CAAE0Q,OjB1JpB,kBAAM,SAACnQ,GAC3BN,aAAaC,WAAW,QACxBD,aAAaC,WAAW,SACxBjB,EAAOC,QAAQmF,cAAgB,GAE/BI,YAAM,2BACNlE,EAAS,CACPJ,KAAMd,OiBmJK+M,CAAqC+C,IC7M9CyB,GAAe,CACnB1G,MAAO,GACP2G,SAAU,GACVC,SAAU,IACVtH,SAAS,GAGLuH,G,4MACJhM,MAAQ6L,G,EAERzJ,SAAW,SAACC,GACV,EAAK/B,SAAL,eAAiB+B,EAAEM,OAAOzF,KAAOmF,EAAEM,OAAO5D,S,EAG5CkN,UAAY,SAAC5J,GACXA,EAAE6J,iBACF,EAAK5L,SAAS,CAAEmE,SAAS,IACzB,EAAK9D,MAAMwL,iBAAiB,EAAKnM,OAAO,SAACP,EAAUjF,GAAX,OACtCiF,EAAM,EAAKa,SAASuL,IAAgB,EAAKvL,SAAS9F,O,uDAI5C,IAAD,OACP,OAAOkG,KAAKC,MAAMyL,gBAEhB,cAAC,GAAD,IAEA,mCACE,eAACC,EAAA,EAAD,CAAWrN,GAAG,QAAQgD,UAAU,YAAhC,UACE,cAAC8C,EAAA,EAAD,CAAK9C,UAAU,OAAf,SACE,cAAC+C,EAAA,EAAD,CAAK/C,UAAU,cAAf,SACE,qBAAKgJ,IAAKC,GAAMzK,MAAO,CAAE8L,UAAW,QAAUpB,IAAI,aAGtD,cAACqB,EAAA,EAAD,CAAMC,SAAU9L,KAAKuL,UAAUQ,KAAK/L,MAApC,SACE,eAACoE,EAAA,EAAD,WACE,cAAC,GAAD,CAASlB,KAAMlD,KAAKV,MAAMyE,UAC1B,eAACM,EAAA,EAAD,CAAKC,GAAG,IAAI0H,GAAI,EAAG1K,UAAU,+BAA7B,UACE,cAAC,GAAD,CACEI,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpCnF,KAAM,QACN6B,MAAO2B,KAAKV,MAAMmF,MAClBvE,YAAU,EACVqC,YAAY,WACZnB,UAAU,iBACV6K,WAAW,EACX3K,UAAU,SAGZ,cAAC,GAAD,CACEI,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpCnF,KAAM,WACN9B,KAAK,WACL2D,MAAO2B,KAAKV,MAAM8L,SAClBlL,YAAU,EACVG,YAAU,EACVkC,YAAY,WACZnB,UAAU,2BAEZ,qBAAKE,UAAU,cAAf,SACE,cAACyJ,EAAA,EAAD,CACEC,OAAK,EACL1J,UAAU,YACV4J,MAAM,UACNxQ,KAAK,SAJP,sC,GArDCuG,aA2EJ0F,gBAJS,SAAC,GAAD,IAAGpM,EAAH,EAAGA,KAAH,sBACnBA,KAGmC,CAAEkR,iBlBpFV,SAC9BtB,GAD8B,IAE9B+B,EAF8B,uDAEd,aAFc,8CAG3B,WAAOpR,GAAP,SAAAC,EAAA,sEACG8D,IAAMsN,KAAN,UAAc5S,EAAd,gBAAiC4Q,EAAM3Q,GAC1CyK,KADG,uCACE,WAAOlF,GAAP,SAAAhE,EAAA,6DACJmR,GAAS,GAAM,GADX,SAEEtR,EAAQmE,EAAIlE,KAAZD,CAAkBE,GAFpB,OAGJkE,YAAM,oBAHF,2CADF,uDAMHkF,OAAM,SAACpK,GACNoS,GAAS,EAAO,CAAEnI,SAAS,IAC3BlK,EAAW,sBAAuBmF,QATnC,2CAH2B,wDkBoFjB2H,CAA+C2E,I,6BC3D/Cc,GA9BK,WAAyD,IAAxD9M,EAAuD,uDAA/C,GAAI+M,EAA2C,uCAC1E,OAAQA,EAAO3R,MACb,KAAKf,EAAL,IACU+E,EAAU2N,EAAOrR,QAAjB0D,MAIR,cAHO2N,EAAOrR,QAAQ0D,MACtB9B,EAAS,QAAS8B,GAClB9B,EAAS,OAAQyP,EAAOrR,SACjB,2BACFsE,GADL,IAEEgN,YAAY,EACZ5N,QACAyL,KAAMkC,EAAOrR,QACb0Q,iBAAiB,EACjBa,QAAQ,IAGZ,KAAK3S,EACH,OAAO,2BACF0F,GADL,IAEEgN,YAAY,EACZZ,iBAAiB,EACjBvB,KAAM,KACNzL,MAAO,KAGX,QACE,OAAOY,ICpBEkN,8BAAgB,CAC7BjS,QACAkS,gBCKoC,WAGhC,IAFJnN,EAEG,uDAFK,GAEL,yCADD5E,EACC,EADDA,KACC,IADKM,eACL,MADe,KACf,EACH,OAAQN,GACN,KAAKU,EACH,MAAO,CAAE2I,SAAS,GACpB,KAAK1I,EACH,MAAO,CAAE0I,SAAS,EAAO2I,SAAS,GACpC,KAAKpR,EACH,MAAO,CAAEyI,SAAS,EAAM5J,MAAOa,GACjC,QACE,OAAOsE,IDhBX6E,cCoBkC,WAG9B,IAFJ7E,EAEG,uDAFK,CAAE6E,cAAe,IAEtB,yCADDzJ,EACC,EADDA,KACC,IADKM,eACL,MADe,KACf,EACH,OAAQN,GACN,KAAKO,EACH,OAAO,2BAAKqE,GAAZ,IAAmByE,SAAS,IAC9B,KAAK7I,EACH,OAAO,2BAAKoE,GAAZ,IAAmByE,SAAS,EAAOI,cAAenJ,IACpD,KAAKG,EACH,OAAO,2BAAKmE,GAAZ,IAAmByE,SAAS,EAAO5J,MAAOa,IAC5C,KAAKO,EACH,MAAO,CAAE4I,cAAe,IAC1B,QACE,OAAO7E,IDjCXqI,aCqCiC,WAG7B,IAFJrI,EAEG,uDAFK,CAAEqI,aAAc,IAErB,yCADDjN,EACC,EADDA,KACC,IADKM,eACL,MADe,KACf,EACH,OAAQN,GACN,KAAKc,EACH,OAAO,2BAAK8D,GAAZ,IAAmByE,SAAS,IAC9B,KAAKtI,EACH,OAAO,2BAAK6D,GAAZ,IAAmByE,SAAS,EAAO4D,aAAc3M,IACnD,KAAKU,EACH,OAAO,2BAAK4D,GAAZ,IAAmByE,SAAS,EAAO5J,MAAOa,IAC5C,QACE,OAAOsE,IDhDX4J,YCoDgC,WAG5B,IAFJ5J,EAEG,uDAFK,CAAE4J,YAAa,IAEpB,yCADDxO,EACC,EADDA,KACC,IADKM,eACL,MADe,KACf,EACH,OAAQN,GACN,KAAKiB,EACH,OAAO,2BAAK2D,GAAZ,IAAmByE,SAAS,IAC9B,KAAKnI,EACH,OAAO,2BAAK0D,GAAZ,IAAmByE,SAAS,EAAOmF,YAAalO,IAClD,KAAKa,EACH,OAAO,2BAAKyD,GAAZ,IAAmByE,SAAS,EAAO5J,MAAOa,IAC5C,QACE,OAAOsE,MClEP6L,GAAe,CACnB5Q,KAPW,CACXmR,gBAAiBnP,EAAS,SAAS,GACnC4N,KAAM5N,EAAS,QACfmC,MAAOnC,EAAS,SAAS,KAOrBoQ,GAAa,CAACC,MAQLC,GANDC,uBACZC,GACA5B,GACA6B,+BAAoBC,mBAAe,WAAf,EAAmBN,MCkB1BO,G,uKA5BX,OACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEM,UAAW,IACXC,WAAS,EACTC,sBAAoB,EACpBC,YAAa,IACbC,SAAU,cAEZ,cAAC,IAAD,CACEJ,UAAW,IACXC,WAAS,EACTC,sBAAoB,EACpBC,YAAa,IACbC,SAAU,gBAEZ,cAAC,IAAD,CAAgBJ,UAAW,IAAMC,WAAS,IAGxC,cAAC,GAAD,a,GAtBMnM,a,qBCGEuM,QACW,cAA7BtR,OAAOC,SAASsR,UAEe,UAA7BvR,OAAOC,SAASsR,UAEhBvR,OAAOC,SAASsR,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxG,SAASyG,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhK,MAAK,SAAAiK,GACJA,EAAaC,gBAEdjK,OAAM,SAAA/J,GACLuJ,QAAQvJ,MAAMA,EAAMG,c","file":"static/js/main.1f6546b9.chunk.js","sourcesContent":["// export const URL = 'http://localhost:5000',\n  export const URL = 'https://api-v2.loftimmigration.com',\n  baseColor = '#365B76 ',\n  header: {\n    headers: {\n      'Content-Type': string\n      Accept: string\n      Authorization?: string\n    }\n  } = {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  },\n  secret = 'secret'\n","export const AUTH_SUCCESS = 'AUTH_SUCCESS',\n  LOGOUT_USER = 'LOGOUT_USER'\n","import { Dispatch } from 'redux';\r\nimport { LOGOUT_USER } from './types';\r\n\r\nconst dispatchAction = (action: { type: string; payload?: string }) => (\r\n  dispatch: Dispatch\r\n) => dispatch(action);\r\n\r\nexport const errHandler = (err: any, callback: (e: string) => void) => {\r\n  if (Array.isArray(err)) {\r\n    err.forEach(error => callback(error[Object.keys(error)[0]]));\r\n  } else if (typeof err === 'object') {\r\n    if (err.message) {\r\n      callback(err.message);\r\n    } else if (err.error && err.auth) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      callback(err.error);\r\n      dispatchAction({ type: LOGOUT_USER });\r\n    } else {\r\n      let keys = Object.keys(err);\r\n      keys.forEach(key => {\r\n        callback(err[key]);\r\n      });\r\n    }\r\n  } else if (typeof err === 'string') {\r\n    callback(err);\r\n  }\r\n};\r\n","import Axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { header, URL } from '../config'\r\nimport { errHandler } from './errorHandler'\r\nimport { LOGOUT_USER, AUTH_SUCCESS } from './types'\r\nimport { Dispatch } from 'redux'\r\nimport userType from '../interface/user'\r\n\r\nexport const authenticateUser = (\r\n  user: { identifier: string; password: string },\r\n  callBack: any = () => {}\r\n) => async (dispatch: Dispatch) => {\r\n  await Axios.post(`${URL}/users/login`, user, header)\r\n    .then(async (res) => {\r\n      callBack(true, false)\r\n      await setUser(res.data)(dispatch)\r\n      toast('Login Successful')\r\n    })\r\n    .catch((err) => {\r\n      callBack(false, { loading: false })\r\n      errHandler('Invalid Credentials', toast)\r\n    })\r\n}\r\n\r\nexport const setUser = (data: { token: string; user: userType }) => async (\r\n  dispatch: Dispatch\r\n) => {\r\n  dispatch({\r\n    type: AUTH_SUCCESS,\r\n    payload: data,\r\n  })\r\n}\r\n\r\nexport const resetPassword = async (data: any, callBack = (res: any) => {}) => {\r\n  header.headers.Authorization = `Bearer ${data.token}`\r\n  await Axios.patch(`${URL}/users/reset-password`, data, header)\r\n    .then((res) => {\r\n      callBack(true)\r\n      toast('Password reset successful, proceed to login')\r\n    })\r\n    .catch((err) => {\r\n      callBack(false)\r\n      errHandler(err.response.data, toast)\r\n    })\r\n}\r\n\r\nexport const forgotPassword = async (\r\n  email: string,\r\n  callBack = (res: any) => {}\r\n) =>\r\n  await Axios.post(`${URL}/users/forgot-password`, { email }, header)\r\n    .then(async (res) => {\r\n      toast('A link to reset your password have been sent to your email')\r\n\r\n      callBack(true)\r\n    })\r\n    .catch((err) => {\r\n      callBack(false)\r\n      errHandler(err.response.data, toast)\r\n    })\r\n\r\nexport const logOut = () => (dispatch: Dispatch) => {\r\n  localStorage.removeItem('user')\r\n  localStorage.removeItem('token')\r\n  header.headers.Authorization = ''\r\n\r\n  toast('Successfully logged out')\r\n  dispatch({\r\n    type: LOGOUT_USER,\r\n  })\r\n}\r\n","export const IMMIGRANT_LIST_REQUEST = 'IMMIGRANT_LIST_REQUEST',\n  IMMIGRANT_LIST_SUCCESS = 'IMMIGRANT_LIST_SUCCESS',\n  IMMIGRANT_LIST_FAILED = 'IMMIGRANT_LIST_FAILED'\n\nexport const IMMIGRANT_DELETE_REQUEST = 'IMMIGRANT_DELETE_REQUEST',\n  IMMIGRANT_DELETE_SUCCESS = 'IMMIGRANT_DELETE_SUCCESS',\n  IMMIGRANT_DELETE_FAILED = 'IMMIGRANT_DELETE_FAILED',\n  IMMIGRANT_LIST_RESET = 'IMMIGRANT_LIST_RESET'\n\nexport const BUSINESS_LIST_REQUEST = 'BUSINESS_LIST_REQUEST',\n  BUSINESS_LIST_SUCCESS = 'BUSINESS_LIST_SUCCESS',\n  BUSINESS_LIST_FAILED = 'BUSINESS_LIST_FAILED'\n\nexport const GENERAL_LIST_REQUEST = 'GENERAL_LIST_REQUEST',\n  GENERAL_LIST_SUCCESS = 'GENERAL_LIST_SUCCESS',\n  GENERAL_LIST_FAILED = 'GENERAL_LIST_FAILED'\n\nexport const SEARCH_IMMIGRANT_REQUEST = 'SEARCH_IMMIGRANT_REQUEST',\n  SEARCH_IMMIGRANT_FAILED = 'SEARCH_IMMIGRANT_FAILED'\n","const { format } = require('number-currency-format')\nconst logout = (err: string) => {\n  if (err === 'Invalid token') {\n    removeLocal('user')\n    removeLocal('token')\n    window.location.reload()\n  }\n}\n\nexport const getObject = (collection: any[], key: any) => {\n  return collection.find((object: any) => object.id == key)\n}\n\nexport const toPlural = (val: number, text: string) =>\n  `${val} ${text}${(val > 1 && 's') || ''}`\n\nexport const getExt = (text: string) => `${text.split('.').pop()}`\n\nexport const handleErr = (error: any) => {\n  if (error.response) {\n    logout(error.response.data.message)\n    return error.response.data.message\n  } else if (error.message) {\n    logout(error.message)\n    return error.message\n  }\n}\n\nexport const getLocal = (name: string, parse: boolean = true) => {\n  const data = localStorage.getItem(name)\n  return data ? (parse ? JSON.parse(data) : data) : null\n}\nexport const setLocal = (name: string, content: Object | string) =>\n  localStorage.setItem(\n    name,\n    typeof content === 'object' ? JSON.stringify(content) : content\n  )\n\nexport const removeLocal = (name: string) => localStorage.removeItem(name)\n\nexport const _calculateAge = (birthday: string) => {\n  var ageDifMs = new Date().getTime() - new Date(birthday).getTime()\n  var ageDate = new Date(ageDifMs) // miliseconds from epoch\n  return Math.abs(ageDate.getUTCFullYear() - 1970)\n}\n\nconst formatNum = (num: number) =>\n  format(num, {\n    currency: '$',\n    showDecimals: 'NEVER',\n    currencyPosition: 'LEFT',\n    spacing: false,\n  })\n\nexport const fundsAction = (\n  funds: {\n    min: number\n    max: number\n    type: string\n    id: number\n  }[]\n) =>\n  funds.map((fund: { min: number; max: number; type: string; id: number }) => ({\n    name:\n      fund.min === 0\n        ? `Less than ${formatNum(fund.max)}`\n        : fund.max === 0\n        ? `Above ${formatNum(fund.min)}`\n        : `${formatNum(fund.min)} to ${formatNum(fund.max)}`,\n    value: fund.id,\n  }))\n","import Axios from 'axios'\nimport { toast } from 'react-toastify'\nimport { Dispatch } from 'redux'\nimport { URL } from '../config'\nimport {\n  BUSINESS_LIST_FAILED,\n  BUSINESS_LIST_REQUEST,\n  BUSINESS_LIST_SUCCESS,\n  GENERAL_LIST_FAILED,\n  GENERAL_LIST_REQUEST,\n  GENERAL_LIST_SUCCESS,\n  IMMIGRANT_LIST_FAILED,\n  IMMIGRANT_LIST_REQUEST,\n  IMMIGRANT_LIST_RESET,\n  IMMIGRANT_LIST_SUCCESS,\n  SEARCH_IMMIGRANT_FAILED,\n  SEARCH_IMMIGRANT_REQUEST,\n} from '../constants/immigrantsConstants'\nimport { handleErr } from '../helpers'\n\nexport type collectionType =\n  | 'generals'\n  | 'students'\n  | 'businesses'\n  | 'families'\n  | 'antigua'\n  | 'stkitts'\n\nexport const getImmigrants = (collection: collectionType) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: IMMIGRANT_LIST_REQUEST,\n    })\n    const {\n      auth: { token },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n    const res = await Axios.get(`${URL}/immigrants/${collection}`, config)\n\n    dispatch({\n      type: IMMIGRANT_LIST_SUCCESS,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: IMMIGRANT_LIST_FAILED,\n      payload: handleErr(error),\n    })\n    toast(handleErr(error))\n  }\n}\n\nexport const getBusinessImmigrants = () => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: BUSINESS_LIST_REQUEST,\n    })\n    const {\n      auth: { token },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n    const res = await Axios.get(`${URL}/immigrants/businesses`, config)\n\n    dispatch({\n      type: BUSINESS_LIST_SUCCESS,\n      payload: res.data,\n    })\n    return res.data\n  } catch (error) {\n    dispatch({\n      type: BUSINESS_LIST_FAILED,\n      payload: handleErr(error),\n    })\n    toast(handleErr(error))\n  }\n}\n\nexport const getGeneralImmigrants = () => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: GENERAL_LIST_REQUEST,\n    })\n    const {\n      auth: { token },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n    const res = await Axios.get(`${URL}/immigrants/generals`, config)\n\n    dispatch({\n      type: GENERAL_LIST_SUCCESS,\n      payload: res.data,\n    })\n    return res.data\n  } catch (error) {\n    dispatch({\n      type: GENERAL_LIST_FAILED,\n      payload: handleErr(error),\n    })\n    toast(handleErr(error))\n  }\n}\n\nexport const resetImmigrantList = () => (dispatch: Dispatch) => {\n  dispatch({\n    type: IMMIGRANT_LIST_RESET,\n  })\n}\n\nexport const searchDb = (collection: collectionType, query: object) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: SEARCH_IMMIGRANT_REQUEST,\n    })\n    const {\n      auth: { token },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n    let param = '?'\n\n    for (const [key, value] of Object.entries(query)) {\n      if (value) param += `${key}=${value}&`\n    }\n\n    const res = await Axios.get(\n      `${URL}/immigrants/${collection + param}`,\n      config\n    )\n\n    dispatch({\n      type:\n        collection === 'businesses'\n          ? BUSINESS_LIST_SUCCESS\n          : IMMIGRANT_LIST_SUCCESS,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: SEARCH_IMMIGRANT_FAILED,\n      payload: handleErr(error),\n    })\n    toast(handleErr(error))\n  }\n}\n","import React, { Component } from 'react'\r\n// import PhoneInput from 'react-phone-input-2'\r\nimport { FormFeedback, Input } from 'reactstrap'\r\nimport validator from 'validator'\r\n\r\ntype inputProps = {\r\n  isRequired?: boolean\r\n  required?: boolean\r\n  isEmail?: boolean\r\n  isPhoneNumber?: boolean\r\n  isPassword?: boolean\r\n  invalid?: boolean\r\n  value: any\r\n}\r\n\r\nclass TextValidator extends Component<inputProps> {\r\n  state = {\r\n    isValid: { valid: false, invalid: false },\r\n    feedBack: '',\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.invalid && this.state.isValid.invalid === false)\r\n      this.changeState(false, 'this field is required')\r\n    else return null\r\n  }\r\n  render() {\r\n    const {\r\n        isRequired,\r\n        isEmail,\r\n        isPhoneNumber,\r\n        isPassword,\r\n        value,\r\n        ...rest\r\n      } = this.props,\r\n      {\r\n        isValid: { valid, invalid },\r\n      } = this.state\r\n\r\n    return (\r\n      <>\r\n        {/* {isPhoneNumber ? (\r\n          <PhoneInput\r\n            specialLabel={''}\r\n            country={'ng'}\r\n            value={value}\r\n            inputProps={{\r\n              ...rest,\r\n              onKeyUp: () =>\r\n                isRequired || rest.required ? this.errorText() : null,\r\n            }}\r\n            inputClass={`w-100 ${\r\n              valid ? 'is-valid' : invalid ? 'is-invalid' : ''\r\n            }`}\r\n          />\r\n        ) : ( */}\r\n        <Input\r\n          onKeyUp={() =>\r\n            isRequired || rest.required ? this.errorText() : null\r\n          }\r\n          type={\r\n            isPhoneNumber\r\n              ? 'tel'\r\n              : isEmail\r\n              ? 'email'\r\n              : isPassword\r\n              ? 'password'\r\n              : 'text'\r\n          }\r\n          value={value === null ? '' : value}\r\n          {...rest}\r\n          {...this.state.isValid}\r\n        />\r\n        {/* )} */}\r\n        {this.state.feedBack}\r\n      </>\r\n    )\r\n  }\r\n\r\n  changeState = (valid: boolean, feedBack: string) => {\r\n    this.setState({ isValid: { invalid: !valid, valid } })\r\n    this.setState({\r\n      feedBack: valid ? (\r\n        ''\r\n      ) : (\r\n        <FormFeedback style={{ display: 'block' }}>{feedBack}</FormFeedback>\r\n      ),\r\n    })\r\n  }\r\n\r\n  errorText() {\r\n    const {\r\n      isRequired,\r\n      required,\r\n      isEmail,\r\n      isPhoneNumber,\r\n      isPassword,\r\n      value,\r\n    } = this.props\r\n\r\n    const otherConditions = () => {\r\n      if (isEmail) {\r\n        this.changeState(validator.isEmail(value), 'Invalid email address')\r\n      } else if (isPhoneNumber) {\r\n        this.changeState(\r\n          validator.isMobilePhone(value.replaceAll(' ', ''), 'any'),\r\n          'Invalid phone number'\r\n        )\r\n      } else if (isPassword) {\r\n        this.changeState(\r\n          validator.isLength(value, { min: 6 }),\r\n          'Password must be at least 6 characters'\r\n        )\r\n      } else {\r\n        this.changeState(true, '')\r\n      }\r\n    }\r\n\r\n    if (isRequired || required) {\r\n      if (validator.isEmpty(value)) {\r\n        this.changeState(false, 'this field is required')\r\n      } else {\r\n        otherConditions()\r\n      }\r\n    } else {\r\n      otherConditions()\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextValidator\r\n","import React from 'react'\r\nimport Datetime from 'react-datetime'\r\nimport Select from 'react-select'\r\nimport makeAnimated from 'react-select/animated'\r\nimport {\r\n  Col,\r\n  CustomInput,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputProps,\r\n  Label,\r\n} from 'reactstrap'\r\nimport { ColProps } from 'reactstrap/lib/Col'\r\nimport { CustomInputProps } from 'reactstrap/lib/CustomInput'\r\nimport validator from 'validator'\r\nimport './style.css'\r\nimport TextValidator from './TextValidator'\r\n\r\nconst animatedComponents = makeAnimated()\r\n\r\nexport const TextInputGroup = ({\r\n  iconClass = '',\r\n  label = '',\r\n  invalid = false,\r\n  ...rest\r\n}: { iconClass?: string; label?: string } & InputProps) => {\r\n  return (\r\n    <>\r\n      {!validator.isEmpty(label) ? (\r\n        <label className='form-control-label mt-2' htmlFor={rest.name}>\r\n          {label}\r\n          {rest.required && <span className='text-danger'>*</span>}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <TextValidator invalid={invalid} value {...rest} />\r\n      {rest.subText && <small>{rest.subText}</small>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const FileInput = ({ iconClass = '', label = '', ...rest }) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {!validator.isEmpty(label) ? (\r\n        <label className='form-control-label mt-2' htmlFor={rest.name}>\r\n          {label}\r\n          {rest.required && <span className='text-danger'>*</span>}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <InputGroup className='input-group-alternative'>\r\n        {!validator.isEmpty(iconClass) ? (\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <i className={iconClass} />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <CustomInput\r\n          id={rest.name}\r\n          type='file'\r\n          {...rest}\r\n          label={rest.customLabel ? rest.customLabel : 'Choose file'}\r\n        />\r\n      </InputGroup>\r\n      {rest.subText && <small>{rest.subText}</small>}\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport const DateInputGroup = ({\r\n  onChange = (e: any) => {},\r\n  iconClass = '',\r\n  label = '',\r\n  value = '',\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {!validator.isEmpty(label) ? (\r\n        <label className='form-control-label mt-2' htmlFor={rest.name}>\r\n          {label}\r\n          {rest.required && <span className='text-danger'>*</span>}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <InputGroup className='input-group-alternative'>\r\n        {!validator.isEmpty(iconClass) ? (\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <i className={iconClass} />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Datetime\r\n          onChange={(e) =>\r\n            //@ts-ignore\r\n            onChange({ target: { name: rest.name, value: e._d } })\r\n          }\r\n          closeOnSelect\r\n          timeFormat={false}\r\n          value={value}\r\n          {...{\r\n            rest,\r\n            inputProps: {\r\n              ...rest.inputProps,\r\n              style: { type: 'date' },\r\n              required: rest.required,\r\n              className: `form-control ${rest.invalid ? 'is-invalid' : ''}`,\r\n            },\r\n          }}\r\n        />\r\n      </InputGroup>\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport type radioOptions = {\r\n  id?: string | ''\r\n  label: string\r\n  value: string | number\r\n  selected?: boolean\r\n}\r\n\r\nexport const CheckBoxInput = ({\r\n  title,\r\n  label,\r\n  name,\r\n  required,\r\n  options,\r\n  inline,\r\n  onChange,\r\n  colProps,\r\n  ...rest\r\n}: {\r\n  title?: string\r\n  label?: string\r\n  name: string\r\n  required?: boolean | false\r\n  options: radioOptions[]\r\n  inline?: boolean | false\r\n  onChange: (e: any) => void\r\n  colProps: ColProps\r\n} & CustomInputProps) => {\r\n  return (\r\n    <>\r\n      <Col sm='12'>\r\n        <Label className='mt-2'>{title || label}</Label>\r\n      </Col>\r\n      {options.map((option) => (\r\n        <Col {...colProps} key={option.id}>\r\n          <FormGroup className='mb-0'>\r\n            <CustomInput\r\n              {...rest}\r\n              id={`${option.id}`}\r\n              name={name}\r\n              value={option.value}\r\n              label={option.label}\r\n              inline={inline}\r\n              onChange={onChange}\r\n              defaultChecked={option.selected || false}\r\n              required={required}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const RadioInput = ({\r\n  title,\r\n  name,\r\n  id = name,\r\n  required,\r\n  options,\r\n  inline,\r\n  onSelect,\r\n  ...rest\r\n}: {\r\n  title?: string\r\n  name: string\r\n  id?: any\r\n  required?: boolean\r\n  options: radioOptions[]\r\n  inline?: boolean | false\r\n  onSelect: (e: any) => void\r\n} & CustomInputProps) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {title && <Label className='mt-2'>{title}</Label>}\r\n      <div>\r\n        {options.map((option, key) => (\r\n          <CustomInput\r\n            {...rest}\r\n            key={key}\r\n            id={`${id + key}`}\r\n            name={name}\r\n            value={option.value}\r\n            label={option.label}\r\n            inline={inline}\r\n            onChange={onSelect}\r\n            defaultChecked={option.selected || false}\r\n            required={required}\r\n          />\r\n        ))}\r\n      </div>\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport const CheckBoxes = ({\r\n  title,\r\n  required,\r\n  options,\r\n  inline,\r\n  onSelect,\r\n  type = 'checkbox',\r\n  ...rest\r\n}: {\r\n  title: string\r\n  required?: boolean | false\r\n  invalid?: boolean | false\r\n  options: radioOptions[]\r\n  inline?: boolean | false\r\n  onSelect: (e: any) => void\r\n} & CustomInputProps) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      <Label className='mt-2'>{title}</Label>\r\n      <div>\r\n        {options.map((option, key) => (\r\n          <CustomInput\r\n            {...rest}\r\n            className='mb-2'\r\n            key={key}\r\n            type={type}\r\n            id={`${option.id}`}\r\n            name={rest.name}\r\n            value={option.value}\r\n            label={option.label}\r\n            inline={inline}\r\n            onChange={onSelect}\r\n            defaultChecked={option.selected || false}\r\n            required={required}\r\n          />\r\n        ))}\r\n      </div>\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport const SelectGroup = ({\r\n  placeholder,\r\n  name,\r\n  options = [],\r\n  onSelect,\r\n  id = '',\r\n  required = false,\r\n  value = '',\r\n  iconClass = '',\r\n  disabled = false,\r\n  label = '',\r\n  defaultValue = '',\r\n  ...rest\r\n}: {\r\n  value?: string | number\r\n  id?: string\r\n  invalid?: boolean | false\r\n  subText?: string\r\n  bsSize?: 'sm' | 'lg'\r\n  defaultValue?: string\r\n  placeholder: string\r\n  name: string\r\n  required?: boolean\r\n  options: {\r\n    name: string\r\n    value: string | number\r\n    code?: string\r\n    title?: string\r\n    selected?: boolean\r\n  }[]\r\n  onSelect: (e: any) => void\r\n  iconClass?: string\r\n  disabled?: boolean\r\n  label?: string\r\n  labelClass?: string\r\n}) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {!validator.isEmpty(label) ? (\r\n        <label\r\n          className={`mt-2 form-control-label ${\r\n            rest.labelClass ? rest.labelClass : ''\r\n          }`}\r\n          htmlFor={name}\r\n        >\r\n          {required && <span className='text-danger'>* </span>}\r\n          {label}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <InputGroup className='input-group-alternative'>\r\n        {!validator.isEmpty(iconClass) ? (\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <i className={iconClass} />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <CustomInput\r\n          type='select'\r\n          id={id}\r\n          name={name}\r\n          onChange={onSelect}\r\n          required={required}\r\n          disabled={disabled}\r\n          {...rest}\r\n        >\r\n          <option value='' defaultValue='' disabled={value ? true : false}>\r\n            {placeholder}\r\n          </option>\r\n          {options.map((item, key) => {\r\n            if (item.title) item.name = item.title\r\n\r\n            return (\r\n              <option\r\n                defaultValue={item.name}\r\n                key={key}\r\n                value={item.value}\r\n                selected={!!item.selected}\r\n              >\r\n                {item.name}\r\n              </option>\r\n            )\r\n          })}\r\n        </CustomInput>\r\n      </InputGroup>\r\n      {rest.subText && (\r\n        <small\r\n          className={`form-control-label ${\r\n            rest.labelClass ? rest.labelClass : ''\r\n          }`}\r\n        >\r\n          {rest.subText}\r\n        </small>\r\n      )}\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport const CustomSelectGroup = ({\r\n  placeholder,\r\n  options,\r\n  onSelect,\r\n  iconClass = '',\r\n  label = '',\r\n  isMulti = false,\r\n  ...rest\r\n}: {\r\n  label?: string\r\n  placeholder: string\r\n  isMulti?: boolean\r\n  options: any[]\r\n  onSelect: (e: any) => void\r\n  iconClass?: string\r\n} & InputProps) => {\r\n  console.log(options)\r\n\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {!validator.isEmpty(label) ? (\r\n        <label className='form-control-label mt-2' htmlFor={rest.name}>\r\n          {label}\r\n          {rest.required && <span className='text-danger'>*</span>}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <InputGroup className='input-group-alternative'>\r\n        {!validator.isEmpty(iconClass) ? (\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <i className={iconClass} />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n        ) : (\r\n          ''\r\n        )}\r\n\r\n        <Select\r\n          onChange={onSelect}\r\n          required={rest.required}\r\n          className='form-control h-auto p-0'\r\n          components={animatedComponents}\r\n          isMulti={isMulti}\r\n          placeholder={placeholder}\r\n          options={options}\r\n        />\r\n      </InputGroup>\r\n    </FormGroup>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ show }: { show: boolean }) =>\r\n  show ? (\r\n    <div className=\"text-center overlay\">\r\n      <div className=\"\">\r\n        <RingLoader />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <span></span>\r\n  );\r\n\r\nexport default Loading;\r\n","export default __webpack_public_path__ + \"static/media/bg1.d4d14e2f.jpg\";","export default __webpack_public_path__ + \"static/media/logo.cce7c0c2.png\";","export default __webpack_public_path__ + \"static/media/Avatar-1.9e978fae.png\";","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Section: (props: {\r\n  className?: string;\r\n  bgImage?: boolean;\r\n  bgImageSrc?: string;\r\n  width?: 'container' | 'container-fluid';\r\n  styles?: { backgroundImage?: string };\r\n  children?: any;\r\n  id?: string;\r\n}) => any = ({\r\n  bgImage = false,\r\n  bgImageSrc,\r\n  className,\r\n  styles = {},\r\n  children,\r\n  id,\r\n  width = ''\r\n}) => {\r\n  bgImage && bgImageSrc\r\n    ? (styles.backgroundImage = `url(${bgImageSrc})`)\r\n    : console.log();\r\n  return (\r\n    <section\r\n      id={id}\r\n      className={`py-5 ${width} ${className +\r\n        ' ' +\r\n        (bgImage ? 'bg-image' : '')}`}\r\n      style={{ ...styles }}\r\n    >\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { AxiosPromise } from 'axios'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { CSVLink } from 'react-csv'\nimport NumberFormat from 'react-number-format'\nimport { connect } from 'react-redux'\nimport { Card, Col, Row, Table } from 'reactstrap'\nimport {\n  collectionType,\n  getImmigrants,\n  searchDb,\n} from '../actions/ImmigrantActions'\nimport { TextInputGroup } from '../components/Form'\nimport Loading from '../components/Loading'\nimport { antiguaType } from '../interface/antiguaType'\n\nconst data = {\n  titles: [\n    '',\n    'Name',\n    'email',\n    'phone',\n    'married',\n    'invest funds',\n    'networth',\n    'residence',\n    'nationality',\n    'rejected',\n    'deported',\n    'O dep',\n    'Y dep',\n    'T dep',\n    'A dep',\n    'contact med',\n    'ref',\n    'time',\n  ],\n}\n\nclass Antigua extends Component<{\n  getImmigrants: (collection: collectionType) => AxiosPromise\n  searchDb: (collection: collectionType, searchParam: string) => AxiosPromise\n  immigrantList: antiguaType[]\n}> {\n  state = { search: '', loading: false }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n    await this.props\n      .getImmigrants('antigua')\n      .then((res) => this.setState({ loading: false }))\n      .catch((err) => this.setState({ loading: false }))\n  }\n\n  onChange = (e?: any) => {\n    this.setState({ [e.target.name]: e.target.value })\n    this.onSearch(e.target.value)\n  }\n\n  onSearch = (param: string) =>\n    this.setState({ loading: true }, () =>\n      this.props\n        .searchDb('antigua', param)\n        .then((res) => this.setState({ loading: false }))\n        .catch((err) => this.setState({ loading: false }))\n    )\n\n  render() {\n    const { immigrantList } = this.props\n    return (\n      <div id='requests' className='px-0 w-100 mx-auto'>\n        <Loading show={this.state.loading} />\n        <Row>\n          <Col>\n            <h2>Antigua</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={8}>\n            <TextInputGroup\n              onChange={(e: any) => this.onChange(e)}\n              name={'search'}\n              value={this.state.search}\n              placeholder='Search...'\n            />\n          </Col>\n          <Col sm={4}>\n            <CSVLink\n              data={immigrantList.map(\n                ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  rejected,\n                  deported,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  residenceCountry,\n                  nationalityCountry,\n                  RejectedCountries,\n                  DeportedCountries,\n                }) => ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  invest: `${investRange.min}-${investRange.max}`,\n                  networth: `${networthRange.min}-${networthRange.max}`,\n                  residenceCountry: residenceCountry.name,\n                  nationalityCountry: nationalityCountry.name,\n                  RejectedCountries,\n                  DeportedCountries,\n                  rejected: rejected\n                    ? RejectedCountries.map((country) => (\n                        <span className='' key={country.id}>\n                          {country.name},{' '}\n                        </span>\n                      ))\n                    : 'No',\n                  deported: deported\n                    ? DeportedCountries.map((country) => (\n                        <span className='' key={country.id}>\n                          {country.name},{' '}\n                        </span>\n                      ))\n                    : 'No',\n                })\n              )}\n              target='_blank'\n              className='btn btn-primary btn-block'\n              filename='Antigua-Immigrants'\n            >\n              Export to CSV\n            </CSVLink>\n          </Col>\n        </Row>\n        <Card className='p-0 resp'>\n          <Table responsive striped bordered>\n            <thead>\n              <tr>\n                {data.titles.map((title, key) => (\n                  <th className='text-capitalize' key={key}>\n                    {title}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {immigrantList.map((immigrant, key: any) => {\n                const {\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  rejected,\n                  deported,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  residenceCountry,\n                  nationalityCountry,\n                  RejectedCountries,\n                  DeportedCountries,\n                } = immigrant\n                return (\n                  <tr key={key}>\n                    <th scope='row'>{key + 1}</th>\n                    <td>{`${first_name} ${last_name}`}</td>\n                    <td>{email}</td>\n                    <td>{phone}</td>\n                    <td>{married}</td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>{residenceCountry.name}</td>\n                    <td>{nationalityCountry.name}</td>\n                    <td>\n                      {rejected\n                        ? RejectedCountries.map((country) => (\n                            <span className='' key={country.id}>\n                              {country.name},{' '}\n                            </span>\n                          ))\n                        : 'No'}\n                    </td>\n                    <td>\n                      {deported\n                        ? DeportedCountries.map((country) => (\n                            <span className='' key={country.id}>\n                              {country.name},{' '}\n                            </span>\n                          ))\n                        : 'No'}\n                    </td>\n                    <td>{old_dependents}</td>\n                    <td>{young_dependents}</td>\n                    <td>{teen_dependents}</td>\n                    <td>{average_dependents}</td>\n                    <td>{contact_medium}</td>\n                    <td>{referee}</td>\n                    <td>{moment(createdAt).format('L | HH:mm')}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n          {!immigrantList.length && (\n            <div className='text-center'>\n              <strong>No result found</strong>\n            </div>\n          )}\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ immigrantList }: { immigrantList: [] }) => ({\n  ...immigrantList,\n})\n\n//@ts-ignore\nexport default connect(mapStateToProps, { getImmigrants, searchDb })(Antigua)\n","import { AxiosPromise } from 'axios'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { CSVLink } from 'react-csv'\nimport NumberFormat from 'react-number-format'\nimport { connect } from 'react-redux'\nimport { Card, Col, Row, Table } from 'reactstrap'\nimport {\n  collectionType,\n  getBusinessImmigrants,\n  searchDb,\n} from '../actions/ImmigrantActions'\nimport { DateInputGroup, SelectGroup, TextInputGroup } from '../components/Form'\nimport Loading from '../components/Loading'\nimport { _calculateAge } from '../helpers'\nimport { businessType } from '../interface/businessType'\n\nconst data = {\n  titles: [\n    { title: '', field: 'id' },\n    { title: 'Name', field: 'name' },\n    { title: 'group', field: 'group' },\n    { title: 'Eligible Party', field: 'eligible_party' },\n    { title: 'networth', field: 'networthRange' },\n    { title: 'invest funds', field: 'investRange' },\n    { title: 'nationality', field: 'citizenshipCountry' },\n    { title: 'Residence', field: 'residenceCountry' },\n    { title: 'email', field: 'email' },\n    { title: 'phone', field: 'phone' },\n    { title: 'DOB', field: 'dob' },\n    { title: 'Married', field: 'Married' },\n    { title: 'Man Experience', field: 'managerial_experience' },\n    { title: 'Created At', field: 'createdAt' },\n  ],\n}\n\nclass Business extends Component<{\n  getBusinessImmigrants: (collection: collectionType) => AxiosPromise\n  searchDb: (collection: collectionType, searchParam: object) => AxiosPromise\n  businessList: businessType[]\n  countries: { name: string; value: number }[]\n  investRanges: { name: string; value: number }[]\n}> {\n  state = {\n    _q: '',\n    invest_funds: '',\n    loading: false,\n    query: {},\n    startDate: '',\n    endDate: '',\n    sortConfig: { field: null, asc: true },\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n    await this.props\n      .getBusinessImmigrants('businesses')\n      .then((data) => this.setState({ loading: false, data }))\n      .catch((err) => this.setState({ loading: false }))\n  }\n\n  enableKeyboard = () => (document.onkeypress = () => true)\n  disableKeyboard = () => (document.onkeypress = () => false)\n\n  sortData = (sortField: any) => {\n    const {\n      sortConfig: { field, asc },\n    } = this.state\n    const direction = sortField === field ? !asc : asc\n    this.props.businessList.sort((a: any, b: any) => {\n      let _a = a[sortField],\n        _b = b[sortField]\n\n      return typeof _a === 'string'\n        ? direction\n          ? _a.toLowerCase() < _b.toLowerCase()\n            ? -1\n            : _a.toLowerCase() > _b.toLowerCase()\n            ? 1\n            : 0\n          : -1\n        : direction\n        ? _a - _b\n        : _b - _a\n    })\n    this.setState({\n      sortConfig: { field: sortField, asc: direction },\n    })\n  }\n\n  onChange = (e?: any) => {\n    this.setState({\n      query: { ...this.state.query, [e.target.name]: e.target.value },\n      [e.target.name]: e.target.value,\n    })\n    this.onSearch()\n  }\n\n  onSearch = () =>\n    this.setState({ loading: true }, () =>\n      this.props\n        .searchDb('businesses', this.state.query)\n        .then((res) => this.setState({ loading: false }))\n        .catch((err) => this.setState({ loading: false }))\n    )\n\n  render() {\n    const { businessList, investRanges } = this.props,\n      {\n        loading,\n        invest_funds,\n        startDate,\n        endDate,\n        sortConfig: { asc, field: sortField },\n      } = this.state\n    return (\n      <div id='requests' className='px-0 w-100 mx-auto'>\n        <Loading show={loading} />\n        <Row>\n          <Col>\n            <h2>Business</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6} className='pb-3'>\n            <TextInputGroup\n              onChange={(e: any) => this.onChange(e)}\n              name='_q'\n              value={this.state._q}\n              placeholder='Search...'\n              subText={\n                <i className='text-gray'>\n                  searches <span className='text-info'>firstname</span>,{' '}\n                  <span className='text-info'>lastname</span>,{' '}\n                  <span className='text-info'>email</span>,{' '}\n                  <span className='text-info'>phone</span>,{' '}\n                  <span className='text-info'>eligible party</span> and{' '}\n                  <span className='text-info'>group</span>\n                </i>\n              }\n            />\n          </Col>\n          <Col sm={3} xs={6} className='pr-1'>\n            <CSVLink\n              data={businessList.map(\n                ({\n                  first_name,\n                  last_name,\n                  email,\n                  group,\n                  dob,\n                  eligible_party,\n                  phone,\n                  spouse,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  managerial_experience,\n                  residenceCountry,\n                  citizenshipCountry,\n                }) => ({\n                  first_name,\n                  last_name,\n                  email,\n                  group,\n                  dob,\n                  eligible_party,\n                  phone,\n                  married: spouse !== null,\n                  invest: `${investRange.min}-${investRange.max}`,\n                  networth: `${networthRange.min}-${networthRange.max}`,\n                  residenceCountry: residenceCountry.name,\n                  citizenshipCountry: citizenshipCountry.name,\n                  managerial_experience,\n                  createdAt,\n                })\n              )}\n              target='_blank'\n              className='btn btn-primary btn-block'\n              filename='Business-Immigrants'\n            >\n              Exp All\n            </CSVLink>\n          </Col>\n          <Col sm={3} xs={6} className='pl-1'>\n            <CSVLink\n              data={businessList.map(\n                ({ first_name, last_name, email, phone }) => ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                })\n              )}\n              target='_blank'\n              className='btn btn-info btn-block'\n              filename='Business-Immigrants(filtered)'\n            >\n              Exp Few\n            </CSVLink>\n          </Col>\n        </Row>\n\n        <Row className='mt-3'>\n          <Col sm='12'>\n            <h4>Filter By:</h4>\n          </Col>\n          <Col xs='6'>\n            <SelectGroup\n              id='invest_funds'\n              name='invest_funds'\n              value={invest_funds}\n              options={[{ name: 'None', value: '' }, ...investRanges]}\n              placeholder='Select...'\n              onSelect={this.onChange}\n              label='Available to Invest'\n              bsSize='sm'\n            />\n          </Col>\n          <Col xs='3' className='pr-1'>\n            <DateInputGroup\n              inputProps={{\n                style: { type: 'date', border: '1px solid #cad1d7' },\n                required: true,\n                placeholder: 'from',\n                class: 'form-control-sm form-control filter-input',\n              }}\n              label='Created'\n              onFocus={this.disableKeyboard}\n              onBlur={this.enableKeyboard}\n              value={startDate}\n              autoComplete='off'\n              name='startDate'\n              id='startDate'\n              onChange={(e) =>\n                this.onChange({\n                  ...e,\n                  target: { ...e.target, name: 'startDate' },\n                })\n              }\n            />\n          </Col>\n          <Col xs='3' className='pl-1'>\n            <DateInputGroup\n              inputProps={{\n                style: { type: 'date', border: '1px solid #cad1d7' },\n                required: true,\n                placeholder: 'to',\n                class: 'form-control-sm form-control filter-input',\n              }}\n              label='-'\n              onFocus={this.disableKeyboard}\n              onBlur={this.enableKeyboard}\n              value={endDate}\n              autoComplete='off'\n              name='endDate'\n              id='endDate'\n              onChange={(e) =>\n                this.onChange({\n                  ...e,\n                  target: { ...e.target, name: 'endDate' },\n                })\n              }\n            />\n          </Col>\n        </Row>\n        <Card className='p-0 resp mt-3'>\n          <Table responsive striped bordered>\n            <thead>\n              <tr>\n                {data.titles.map(({ title, field }, key) => (\n                  <th className='text-capitalize' key={key}>\n                    {title}{' '}\n                    <button\n                      className='d-inline btn btn-link px-0'\n                      onClick={() => this.sortData(field)}\n                    >\n                      <i\n                        className={`fa fa-angle-down mr-0 ${\n                          sortField === field && asc ? 'text-secondary' : ''\n                        }`}\n                      ></i>\n                      <i\n                        className={`fa fa-angle-up mr-0 ${\n                          sortField === field && !asc ? 'text-secondary' : ''\n                        }`}\n                      ></i>\n                    </button>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {businessList.map((immigrant, key: any) => {\n                const {\n                  first_name,\n                  last_name,\n                  email,\n                  group,\n                  dob,\n                  eligible_party,\n                  phone,\n                  spouse,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  managerial_experience,\n                  residenceCountry,\n                  citizenshipCountry,\n                } = immigrant\n                return (\n                  <tr key={key}>\n                    <th scope='row'>{key + 1}</th>\n                    <td>{`${first_name} ${last_name}`}</td>\n                    <td>Group {group}</td>\n                    <td>{eligible_party}</td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>{citizenshipCountry.name}</td>\n                    <td>{residenceCountry.name}</td>\n                    <td>{email}</td>\n                    <td>{phone}</td>\n                    <td>{_calculateAge(dob)}</td>\n                    <td>{spouse !== null ? 'true' : 'false'}</td>\n                    <td>{managerial_experience ? 'true' : 'false'}</td>\n\n                    <td>{moment(createdAt).format('L | HH:mm')}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n          {!businessList.length && (\n            <div className='text-center'>\n              <strong>No result found</strong>\n            </div>\n          )}\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ businessList }: { businessList: [] }) => ({\n  ...businessList,\n})\n\nexport default connect(mapStateToProps, { getBusinessImmigrants, searchDb })(\n  //@ts-ignore\n  Business\n)\n","import { AxiosPromise } from 'axios'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { CSVLink } from 'react-csv'\nimport { connect } from 'react-redux'\nimport { Card, Col, Row, Table } from 'reactstrap'\nimport {\n  collectionType,\n  getGeneralImmigrants,\n  searchDb\n} from '../actions/ImmigrantActions'\nimport { DateInputGroup, SelectGroup, TextInputGroup } from '../components/Form'\nimport Loading from '../components/Loading'\nimport { _calculateAge } from '../helpers'\nimport { generalType } from '../interface/generalType'\n\nconst data = {\n  titles: [\n    { title: '', field: 'id' },\n    { title: 'Name', field: 'name' },\n    { title: 'group', field: 'group' },\n    { title: 'Eligible Party', field: 'eligible_party' },\n    { title: 'nationality', field: 'citizenshipCountry' },\n    { title: 'Residence', field: 'residenceCountry' },\n    { title: 'email', field: 'email' },\n    { title: 'phone', field: 'phone' },\n    { title: 'DOB', field: 'dob' },\n    { title: 'Married', field: 'Married' },\n    { title: 'Created At', field: 'createdAt' },\n  ],\n}\n\nclass General extends Component<{\n  getGeneralImmigrants: () => AxiosPromise\n  searchDb: (collection: collectionType, searchParam: object) => AxiosPromise\n  generalList: generalType[]\n  countries: { name: string; value: number }[]\n}> {\n  state = {\n    _q: '',\n    loading: false,\n    query: {},\n    startDate: '',\n    endDate: '',\n    sortConfig: { field: null, asc: true },\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n    await this.props\n      .getGeneralImmigrants()\n      .then((data) => this.setState({ loading: false, data }))\n      .catch((err) => this.setState({ loading: false }))\n  }\n\n  enableKeyboard = () => (document.onkeypress = () => true)\n  disableKeyboard = () => (document.onkeypress = () => false)\n\n  sortData = (sortField: any) => {\n    const {\n      sortConfig: { field, asc },\n    } = this.state\n    const direction = sortField === field ? !asc : asc\n    this.props.generalList.sort((a: any, b: any) => {\n      let _a = a[sortField],\n        _b = b[sortField]\n\n      return typeof _a === 'string'\n        ? direction\n          ? _a.toLowerCase() < _b.toLowerCase()\n            ? -1\n            : _a.toLowerCase() > _b.toLowerCase()\n            ? 1\n            : 0\n          : -1\n        : direction\n        ? _a - _b\n        : _b - _a\n    })\n    this.setState({\n      sortConfig: { field: sortField, asc: direction },\n    })\n  }\n\n  onChange = (e?: any) => {\n    this.setState({\n      query: { ...this.state.query, [e.target.name]: e.target.value },\n      [e.target.name]: e.target.value,\n    })\n    this.onSearch()\n  }\n\n  onSearch = () =>\n    this.setState({ loading: true }, () =>\n      this.props\n        .searchDb('generals', this.state.query)\n        .then((res) => this.setState({ loading: false }))\n        .catch((err) => this.setState({ loading: false }))\n    )\n\n  render() {\n    const { generalList } = this.props,\n      {\n        loading,\n        startDate,\n        endDate,\n        sortConfig: { asc, field: sortField },\n      } = this.state\n    return (\n      <div id='requests' className='px-0 w-100 mx-auto'>\n        <Loading show={loading} />\n        <Row>\n          <Col>\n            <h2>General</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={6} className='pb-3'>\n            <TextInputGroup\n              onChange={(e: any) => this.onChange(e)}\n              name='_q'\n              value={this.state._q}\n              placeholder='Search...'\n              subText={\n                <i className='text-gray'>\n                  searches <span className='text-info'>firstname</span>,{' '}\n                  <span className='text-info'>lastname</span>,{' '}\n                  <span className='text-info'>email</span>,{' '}\n                  <span className='text-info'>phone</span>,{' '}\n                  <span className='text-info'>eligible party</span> and{' '}\n                  <span className='text-info'>group</span>\n                </i>\n              }\n            />\n          </Col>\n          <Col sm={3} xs={6} className='pr-1'>\n            <CSVLink\n              data={generalList.map(\n                ({\n                  first_name,\n                  last_name,\n                  email,\n                  group,\n                  dob,\n                  eligible_party,\n                  phone,\n                  spouse,\n                  createdAt,\n                  residenceCountry,\n                  citizenshipCountry,\n                }) => ({\n                  first_name,\n                  last_name,\n                  email,\n                  group,\n                  dob,\n                  eligible_party,\n                  phone,\n                  married: spouse !== null,\n                  residenceCountry: residenceCountry.name,\n                  citizenshipCountry: citizenshipCountry.name,\n                  createdAt,\n                })\n              )}\n              target='_blank'\n              className='btn btn-primary btn-block'\n              filename='General-Immigrants'\n            >\n              Exp All\n            </CSVLink>\n          </Col>\n          <Col sm={3} xs={6} className='pl-1'>\n            <CSVLink\n              data={generalList.map(\n                ({ first_name, last_name, email, phone }) => ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                })\n              )}\n              target='_blank'\n              className='btn btn-info btn-block'\n              filename='General-Immigrants(filtered)'\n            >\n              Exp Few\n            </CSVLink>\n          </Col>\n        </Row>\n\n        <Row className='mt-3'>\n          <Col sm='12'>\n            <h4>Filter By:</h4>\n          </Col>\n          <Col xs='3' className='pr-1'>\n            <DateInputGroup\n              inputProps={{\n                style: { type: 'date', border: '1px solid #cad1d7' },\n                required: true,\n                placeholder: 'from',\n                class: 'form-control-sm form-control filter-input',\n              }}\n              label='Created'\n              onFocus={this.disableKeyboard}\n              onBlur={this.enableKeyboard}\n              value={startDate}\n              autoComplete='off'\n              name='startDate'\n              id='startDate'\n              onChange={(e) =>\n                this.onChange({\n                  ...e,\n                  target: { ...e.target, name: 'startDate' },\n                })\n              }\n            />\n          </Col>\n          <Col xs='3' className='pl-1'>\n            <DateInputGroup\n              inputProps={{\n                style: { type: 'date', border: '1px solid #cad1d7' },\n                required: true,\n                placeholder: 'to',\n                class: 'form-control-sm form-control filter-input',\n              }}\n              label='-'\n              onFocus={this.disableKeyboard}\n              onBlur={this.enableKeyboard}\n              value={endDate}\n              autoComplete='off'\n              name='endDate'\n              id='endDate'\n              onChange={(e) =>\n                this.onChange({\n                  ...e,\n                  target: { ...e.target, name: 'endDate' },\n                })\n              }\n            />\n          </Col>\n        </Row>\n        <Card className='p-0 resp mt-3'>\n          <Table responsive striped bordered>\n            <thead>\n              <tr>\n                {data.titles.map(({ title, field }, key) => (\n                  <th className='text-capitalize' key={key}>\n                    {title}{' '}\n                    <button\n                      className='d-inline btn btn-link px-0'\n                      onClick={() => this.sortData(field)}\n                    >\n                      <i\n                        className={`fa fa-angle-down mr-0 ${\n                          sortField === field && asc ? 'text-secondary' : ''\n                        }`}\n                      ></i>\n                      <i\n                        className={`fa fa-angle-up mr-0 ${\n                          sortField === field && !asc ? 'text-secondary' : ''\n                        }`}\n                      ></i>\n                    </button>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {generalList.map((immigrant, key: any) => {\n                const {\n                  first_name,\n                  last_name,\n                  email,\n                  group,\n                  dob,\n                  eligible_party,\n                  phone,\n                  spouse,\n                  createdAt,\n                  residenceCountry,\n                  citizenshipCountry,\n                } = immigrant\n                return (\n                  <tr key={key}>\n                    <th scope='row'>{key + 1}</th>\n                    <td>{`${first_name} ${last_name}`}</td>\n                    <td>Group {group}</td>\n                    <td>{eligible_party}</td>\n                    <td>{citizenshipCountry.name}</td>\n                    <td>{residenceCountry.name}</td>\n                    <td>{email}</td>\n                    <td>{phone}</td>\n                    <td>{_calculateAge(dob)}</td>\n                    <td>{spouse !== null ? 'true' : 'false'}</td>\n\n                    <td>{moment(createdAt).format('L | HH:mm')}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n          {!generalList.length && (\n            <div className='text-center'>\n              <strong>No result found</strong>\n            </div>\n          )}\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ generalList }: { generalList: [] }) => ({\n  ...generalList,\n})\n\nexport default connect(mapStateToProps, { getGeneralImmigrants, searchDb })(\n  //@ts-ignore\n  General\n)\n","import { AxiosPromise } from 'axios'\nimport moment from 'moment'\nimport React, { Component } from 'react'\nimport { CSVLink } from 'react-csv'\nimport NumberFormat from 'react-number-format'\nimport { connect } from 'react-redux'\nimport { Card, Col, Row, Table } from 'reactstrap'\nimport {\n  collectionType,\n  getImmigrants,\n  searchDb,\n} from '../actions/ImmigrantActions'\nimport { TextInputGroup } from '../components/Form'\nimport Loading from '../components/Loading'\nimport { antiguaType } from '../interface/antiguaType'\n\nconst data = {\n  titles: [\n    '',\n    'Name',\n    'email',\n    'phone',\n    'married',\n    'invest funds',\n    'networth',\n    'residence',\n    'nationality',\n    'rejected',\n    'deported',\n    'O dep',\n    'Y dep',\n    'T dep',\n    'A dep',\n    'contact med',\n    'ref',\n    'time',\n  ],\n}\n\nclass Stkitts extends Component<{\n  getImmigrants: (collection: collectionType) => AxiosPromise\n  searchDb: (collection: collectionType, searchParam: string) => AxiosPromise\n  immigrantList: antiguaType[]\n}> {\n  state = { search: '', loading: false }\n\n  async componentDidMount() {\n    this.setState({ loading: true })\n    await this.props\n      .getImmigrants('stkitts')\n      .then((res) => this.setState({ loading: false }))\n      .catch((err) => this.setState({ loading: false }))\n  }\n  onChange = (e?: any) => {\n    this.setState({ [e.target.name]: e.target.value })\n    this.onSearch(e.target.value)\n  }\n\n  onSearch = (param: string) =>\n    this.setState({ loading: true }, () =>\n      this.props\n        .searchDb('stkitts', param)\n        .then((res) => this.setState({ loading: false }))\n        .catch((err) => this.setState({ loading: false }))\n    )\n\n  render() {\n    const { immigrantList } = this.props\n    return (\n      <div id='requests' className='px-0 w-100 mx-auto'>\n        <Loading show={this.state.loading} />\n        <Row>\n          <Col>\n            <h2>St. Kitts</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={8}>\n            <TextInputGroup\n              onChange={(e: any) => this.onChange(e)}\n              name={'search'}\n              value={this.state.search}\n              placeholder='Search...'\n            />\n          </Col>\n          <Col sm={4}>\n            <CSVLink\n              data={immigrantList.map(\n                ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  rejected,\n                  deported,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  residenceCountry,\n                  nationalityCountry,\n                  RejectedCountries,\n                  DeportedCountries,\n                }) => ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  invest: `${investRange.min}-${investRange.max}`,\n                  networth: `${networthRange.min}-${networthRange.max}`,\n                  residenceCountry: residenceCountry.name,\n                  nationalityCountry: nationalityCountry.name,\n                  RejectedCountries,\n                  DeportedCountries,\n                  rejected: rejected\n                    ? RejectedCountries.map((country) => (\n                        <span className='' key={country.id}>\n                          {country.name},{' '}\n                        </span>\n                      ))\n                    : 'No',\n                  deported: deported\n                    ? DeportedCountries.map((country) => (\n                        <span className='' key={country.id}>\n                          {country.name},{' '}\n                        </span>\n                      ))\n                    : 'No',\n                })\n              )}\n              target='_blank'\n              className='btn btn-primary btn-block'\n              filename='Stkitts-Immigrants'\n            >\n              Export to CSV\n            </CSVLink>\n          </Col>\n        </Row>\n        <Card className='p-0 resp'>\n          <Table responsive striped bordered>\n            <thead>\n              <tr>\n                {data.titles.map((title, key) => (\n                  <th className='text-capitalize' key={key}>\n                    {title}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {immigrantList.map((immigrant, key: any) => {\n                const {\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  rejected,\n                  deported,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  residenceCountry,\n                  nationalityCountry,\n                  RejectedCountries,\n                  DeportedCountries,\n                } = immigrant\n                return (\n                  <tr key={key}>\n                    <th scope='row'>{key + 1}</th>\n                    <td>{`${first_name} ${last_name}`}</td>\n                    <td>{email}</td>\n                    <td>{phone}</td>\n                    <td>{married}</td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>{residenceCountry.name}</td>\n                    <td>{nationalityCountry.name}</td>\n                    <td>\n                      {rejected\n                        ? RejectedCountries.map((country) => (\n                            <span className='' key={country.id}>\n                              {country.name},{' '}\n                            </span>\n                          ))\n                        : 'No'}\n                    </td>\n                    <td>\n                      {deported\n                        ? DeportedCountries.map((country) => (\n                            <span className='' key={country.id}>\n                              {country.name},{' '}\n                            </span>\n                          ))\n                        : 'No'}\n                    </td>\n                    <td>{old_dependents}</td>\n                    <td>{young_dependents}</td>\n                    <td>{teen_dependents}</td>\n                    <td>{average_dependents}</td>\n                    <td>{contact_medium}</td>\n                    <td>{referee}</td>\n                    <td>{moment(createdAt).format('L | HH:mm')}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n          {!immigrantList.length && (\n            <div className='text-center'>\n              <strong>No result found</strong>\n            </div>\n          )}\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ immigrantList }: { immigrantList: [] }) => ({\n  ...immigrantList,\n})\n\n//@ts-ignore\nexport default connect(mapStateToProps, { getImmigrants, searchDb })(Stkitts)\n","import Antigua from './pages/Antigua'\nimport Business from './pages/Business'\nimport General from './pages/General'\nimport Stkitts from './pages/Stkitts'\n\nvar routes = [\n  {\n    path: '/antigua',\n    name: 'All Antigua',\n    component: Antigua,\n  },\n  {\n    path: '/stkitts',\n    name: 'All St. Kitts',\n    component: Stkitts,\n  },\n  {\n    path: '/businesses',\n    name: 'All Business Immigrants',\n    component: Business,\n  },\n  {\n    path: '/generals',\n    name: 'All General Immigrants',\n    component: General,\n  },\n\n  {\n    path: '/',\n    name: 'All Antigua',\n    component: Antigua,\n  },\n]\n\nexport default routes\n","import Axios from 'axios'\nimport { URL } from '../config'\n\n// Get Countries\nexport const getCountries = async () =>\n  await Axios.get(`${URL}/utilities/countries`)\n\n// Get Fund Ranges\nexport const getFundRanges = async (type: string) =>\n  await Axios.get(`${URL}/utilities/funds/${type}`)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect, Route, Switch, NavLink } from 'react-router-dom'\nimport { Card, Col, Row, Button } from 'reactstrap'\nimport { showcaseBg, avatar1, logo } from '../assets/img'\nimport Loading from '../components/Loading'\nimport Section from '../components/Section'\nimport './style.scss'\nimport routes from '../routes'\nimport { logOut } from '../actions'\nimport userType, { authState } from '../interface/user'\nimport { getCountries, getFundRanges } from '../actions/Utilites'\nimport { toast } from 'react-toastify'\nimport { errHandler } from '../actions/errorHandler'\nimport { fundsAction } from '../helpers'\n\nclass AdminLayout extends Component<{\n  user: userType | null\n  logOut: () => void\n}> {\n  state = {\n    showMenu: false,\n    loading: false,\n    countries: [],\n    investRanges: [],\n  }\n\n  componentDidMount() {\n    this.initFunc()\n  }\n\n  initFunc = async () => {\n    this.setState({ loading: true })\n    try {\n      const res1 = await getCountries()\n      // const res2 = await getFundRanges('worth')\n      const res3 = await getFundRanges('invest')\n\n      this.setState({\n        loading: false,\n        countries: res1.data,\n        investRanges: res3.data,\n      })\n    } catch (err) {\n      this.setState({ loading: false })\n      errHandler(err?.response?.data, toast)\n    }\n  }\n\n  toggleMenu = () => this.setState({ showMenu: !this.state.showMenu })\n\n  getRoutes = (\n    routes: {\n      path: string\n      name: string\n      component: React.ComponentClass<{ countries: any; investRanges: any }>\n    }[]\n  ) => {\n    const { investRanges, countries } = this.state\n    return routes.map((prop, key) => (\n      <Route\n        path={prop.path}\n        component={() => (\n          <prop.component\n            countries={countries.map(\n              (country: { name: string; id: number }) => ({\n                name: country.name,\n                value: country.id,\n              })\n            )}\n            investRanges={fundsAction(investRanges)}\n          />\n        )}\n        key={key}\n      />\n    ))\n  }\n\n  render() {\n    const { user } = this.props,\n      { showMenu } = this.state\n\n    return user ? (\n      <Section\n        bgImage\n        bgImageSrc={showcaseBg}\n        id='showcase'\n        className='default-padding'\n      >\n        <div className='container' id='Dashboard'>\n          <div>\n            <Card className='p-3 bg-faded flex-md-row justify-content-between'>\n              <h2 className='text-center'>\n                <i\n                  className='fa fa-bars d-md-none float-left'\n                  onClick={() => this.toggleMenu()}\n                ></i>\n                <Link to='/'>\n                  <span className=' float-md-none float-right'>Dashboard</span>\n                </Link>\n              </h2>\n              <div className='text-center'>\n                <img src={`${logo}`} alt='Loft' height={60} />\n              </div>\n            </Card>\n          </div>\n          <Row className='row-eq-height'>\n            <Col\n              className={`mt-md-3 pr-0 menu ${\n                showMenu ? ' show ' : ''\n              }d-md-block`}\n              sm='12'\n              md='3'\n              onClick={(e: any) => {\n                if (e.target.classList.contains('menu')) this.toggleMenu()\n              }}\n            >\n              <Card className='bg-faded p-4 h-100'>\n                <h2 className='text-right'>\n                  <i\n                    onClick={() => this.toggleMenu()}\n                    className='d-md-none fa fa-times'\n                  ></i>\n                </h2>\n                <div className='text-center mt-4'>\n                  <img\n                    alt='...'\n                    className='rounded-circle w-50'\n                    src={`${avatar1}`}\n                  />\n                  <br />\n                  <strong>{`${user.email}`}</strong>\n                  <br />\n\n                  <div className='h5 font-weight-300'>{user.email}</div>\n                </div>\n                <div id='menu' className='mt-4'>\n                  <p className='mb-1'>\n                    <NavLink\n                      activeClassName='active'\n                      onClick={this.toggleMenu}\n                      to='/antigua'\n                    >\n                      Antigua Immigrants\n                    </NavLink>\n                  </p>\n                  <hr className='mt-0 mb-3' />\n                  <p className='mb-1'>\n                    <NavLink\n                      activeClassName='active'\n                      onClick={this.toggleMenu}\n                      to='/stkitts'\n                    >\n                      St. Kitts Immigrants\n                    </NavLink>\n                  </p>\n                  <hr className='mt-0 mb-3' />\n                  <p className='mb-1'>\n                    <NavLink\n                      activeClassName='active'\n                      onClick={this.toggleMenu}\n                      to='/businesses'\n                    >\n                      Business Immigrants\n                    </NavLink>\n                  </p>\n                  <hr className='mt-0 mb-3' />\n                  <p className='mb-1'>\n                    <NavLink\n                      activeClassName='active'\n                      onClick={this.toggleMenu}\n                      to='/generals'\n                    >\n                      General Immigrants\n                    </NavLink>\n                  </p>\n                  <hr className='mt-0 mb-3' />\n                  {/* <p className=\"mb-1\">\n                    <NavLink\n                      activeClassName=\"active\"\n                      onClick={this.toggleMenu}\n                      to=\"/student-visa\"\n                    >\n                      Students\n                    </NavLink>\n                  </p>\n                  <hr className=\"mt-0 mb-3\" /> */}\n\n                  <Button block onClick={this.props.logOut} color='danger'>\n                    Logout\n                  </Button>\n                </div>\n              </Card>\n            </Col>\n            <Col className='mt-3' md='9'>\n              <Card className='bg-faded p-sm-4 p-2 h-100'>\n                <Loading show={this.state.loading} />\n                {\n                  //@ts-ignore\n                  <Switch>{this.getRoutes(routes)}</Switch>\n                }\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </Section>\n    ) : (\n      <Redirect to='/auth/login' />\n    )\n  }\n}\nconst mapStateToProps = ({ auth }: { auth: authState }) => ({\n  ...auth,\n})\n\nexport default connect(mapStateToProps, { logOut })(AdminLayout)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Col, Container, Row, Form } from 'reactstrap'\nimport { authenticateUser } from '../actions'\nimport { TextInputGroup } from '../components/Form'\nimport Loading from '../components/Loading'\nimport AdminLayout from '../layouts/AdminLayout'\nimport { logo } from '../assets/img'\nimport { authState } from '../interface/user'\n\nconst initialState = {\n  email: '',\n  password: '',\n  prevPath: '/',\n  loading: false,\n}\n\nclass Auth extends Component<authState> {\n  state = initialState\n\n  onChange = (e?: any) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  loginUser = (e: any) => {\n    e.preventDefault()\n    this.setState({ loading: true })\n    this.props.authenticateUser(this.state, (res: any, err: any) =>\n      res ? this.setState(initialState) : this.setState(err)\n    )\n  }\n\n  render() {\n    return this.props.isAuthenticated ? (\n      //@ts-ignore\n      <AdminLayout />\n    ) : (\n      <>\n        <Container id='Quote' className='mt-5 pt-5'>\n          <Row className='mb-4'>\n            <Col className='text-center'>\n              <img src={logo} style={{ maxHeight: '5rem' }} alt='Logo' />\n            </Col>\n          </Row>\n          <Form onSubmit={this.loginUser.bind(this)}>\n            <Row>\n              <Loading show={this.state.loading} />\n              <Col sm='6' lg={4} className='offset-sm-3 offset-lg-4 py-2'>\n                <TextInputGroup\n                  onChange={(e: any) => this.onChange(e)}\n                  name={'email'}\n                  value={this.state.email}\n                  isRequired\n                  placeholder='Username'\n                  iconClass='ni ni-email-83'\n                  autoFocus={true}\n                  className='mb-1'\n                />\n\n                <TextInputGroup\n                  onChange={(e: any) => this.onChange(e)}\n                  name={'password'}\n                  type='password'\n                  value={this.state.password}\n                  isRequired\n                  isPassword\n                  placeholder='Password'\n                  iconClass='ni ni-lock-circle-open'\n                />\n                <div className='text-center'>\n                  <Button\n                    block\n                    className='mt-4 mb-2'\n                    color='primary'\n                    type='submit'\n                  >\n                    Login\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Form>\n        </Container>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({ auth }: { auth: any }) => ({\n  ...auth,\n})\n\nexport default connect(mapStateToProps, { authenticateUser })(Auth)\n","import { LOGOUT_USER, AUTH_SUCCESS } from '../actions/types'\nimport { setLocal } from '../helpers'\n\nconst authReducer = (state = {}, action: { type: string; payload: any }) => {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      const { token } = action.payload\n      delete action.payload.token\n      setLocal('token', token)\n      setLocal('user', action.payload)\n      return {\n        ...state,\n        authLoaded: true,\n        token,\n        user: action.payload,\n        isAuthenticated: true,\n        goBack: true,\n      }\n\n    case LOGOUT_USER:\n      return {\n        ...state,\n        authLoaded: true,\n        isAuthenticated: false,\n        user: null,\n        token: '',\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default authReducer\n","import { combineReducers } from 'redux'\nimport { default as auth } from './AuthReducers'\nimport {\n  immigrantDeleteReducer as immigrantDelete,\n  immigrantListReducer as immigrantList,\n  businessListReducer as businessList,\n  generalListReducer as generalList,\n} from './ImmigrantReducers'\n\nexport default combineReducers({\n  auth,\n  immigrantDelete,\n  immigrantList,\n  businessList,\n  generalList,\n})\n","import {\n  IMMIGRANT_DELETE_FAILED,\n  IMMIGRANT_DELETE_REQUEST,\n  IMMIGRANT_DELETE_SUCCESS,\n  IMMIGRANT_LIST_FAILED,\n  IMMIGRANT_LIST_REQUEST,\n  IMMIGRANT_LIST_SUCCESS,\n  BUSINESS_LIST_FAILED,\n  BUSINESS_LIST_REQUEST,\n  BUSINESS_LIST_SUCCESS,\n  GENERAL_LIST_FAILED,\n  GENERAL_LIST_REQUEST,\n  GENERAL_LIST_SUCCESS,\n  IMMIGRANT_LIST_RESET,\n} from '../constants/immigrantsConstants'\n\nexport const immigrantDeleteReducer = (\n  state = {},\n  { type, payload = null }: { type: string; payload: any }\n) => {\n  switch (type) {\n    case IMMIGRANT_DELETE_REQUEST:\n      return { loading: true }\n    case IMMIGRANT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case IMMIGRANT_DELETE_FAILED:\n      return { loading: true, error: payload }\n    default:\n      return state\n  }\n}\n\nexport const immigrantListReducer = (\n  state = { immigrantList: [] },\n  { type, payload = null }: { type: string; payload: any }\n) => {\n  switch (type) {\n    case IMMIGRANT_LIST_REQUEST:\n      return { ...state, loading: true }\n    case IMMIGRANT_LIST_SUCCESS:\n      return { ...state, loading: false, immigrantList: payload }\n    case IMMIGRANT_LIST_FAILED:\n      return { ...state, loading: false, error: payload }\n    case IMMIGRANT_LIST_RESET:\n      return { immigrantList: [] }\n    default:\n      return state\n  }\n}\n\nexport const businessListReducer = (\n  state = { businessList: [] },\n  { type, payload = null }: { type: string; payload: any }\n) => {\n  switch (type) {\n    case BUSINESS_LIST_REQUEST:\n      return { ...state, loading: true }\n    case BUSINESS_LIST_SUCCESS:\n      return { ...state, loading: false, businessList: payload }\n    case BUSINESS_LIST_FAILED:\n      return { ...state, loading: false, error: payload }\n    default:\n      return state\n  }\n}\n\nexport const generalListReducer = (\n  state = { generalList: [] },\n  { type, payload = null }: { type: string; payload: any }\n) => {\n  switch (type) {\n    case GENERAL_LIST_REQUEST:\n      return { ...state, loading: true }\n    case GENERAL_LIST_SUCCESS:\n      return { ...state, loading: false, generalList: payload }\n    case GENERAL_LIST_FAILED:\n      return { ...state, loading: false, error: payload }\n    default:\n      return state\n  }\n}\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport { getLocal } from './helpers'\nimport reducers from './reducers'\n\nconst auth = {\n  isAuthenticated: getLocal('token', false),\n  user: getLocal('user'),\n  token: getLocal('token', false),\n}\n\nconst initialState = {\n  auth,\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Auth from \"./pages/Auth\";\nimport store from \"./store\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <ToastContainer\n            autoClose={8000}\n            draggable\n            enableMultiContainer\n            containerId={\"A\"}\n            position={\"top-right\"}\n          />\n          <ToastContainer\n            autoClose={8000}\n            draggable\n            enableMultiContainer\n            containerId={\"B\"}\n            position={\"bottom-left\"}\n          />\n          <ToastContainer autoClose={8000} draggable />\n          {\n            //@ts-ignore\n            <Auth />\n          }\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./assets/vendor/nucleo/css/nucleo.css\";\nimport \"./index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}