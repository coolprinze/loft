{"version":3,"sources":["config.ts","actions/types.ts","actions/errorHandler.ts","actions/AuthActions.ts","constants/immigrantsConstants.ts","helpers/index.ts","actions/ImmigrantActions.ts","components/Form/TextValidator.tsx","components/Form/index.tsx","components/Loading/index.tsx","assets/img/bg1.jpg","assets/img/logo.png","assets/img/Avatar-1.png","components/Section/index.tsx","pages/Antigua.tsx","pages/Stkitts.tsx","routes.ts","layouts/AdminLayout.tsx","pages/Auth.tsx","reducers/AuthReducers.ts","reducers/index.ts","reducers/ImmigrantReducers.ts","store.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["URL","header","headers","Accept","AUTH_SUCCESS","LOGOUT_USER","errHandler","err","callback","Array","isArray","forEach","error","Object","keys","message","auth","localStorage","removeItem","type","key","setUser","data","dispatch","a","payload","IMMIGRANT_LIST_REQUEST","IMMIGRANT_LIST_SUCCESS","IMMIGRANT_LIST_FAILED","IMMIGRANT_DELETE_REQUEST","IMMIGRANT_DELETE_SUCCESS","IMMIGRANT_DELETE_FAILED","logout","removeLocal","window","location","reload","handleErr","response","getLocal","name","parse","getItem","JSON","setLocal","content","setItem","stringify","getImmigrants","collection","getState","token","config","Authorization","Axios","get","res","toast","searchDb","searchParam","TextValidator","state","isValid","feedBack","changeState","valid","setState","invalid","undefined","FormFeedback","this","props","isEmail","isPhoneNumber","isPassword","value","rest","Input","onKeyUp","errorText","isRequired","required","otherConditions","validator","toString","isMobilePhone","isLength","min","isEmpty","Component","TextInputGroup","makeAnimated","iconClass","label","className","htmlFor","subText","Loading","show","Section","bgImage","bgImageSrc","styles","children","id","width","backgroundImage","console","log","style","titles","Antigua","search","loading","onChange","e","target","onSearch","param","then","catch","immigrantList","Row","Col","sm","placeholder","map","first_name","last_name","email","phone","married","old_dependents","young_dependents","teen_dependents","average_dependents","rejected","deported","contact_medium","referee","createdAt","investRange","networthRange","residenceCountry","nationalityCountry","RejectedCountries","DeportedCountries","invest","max","networth","country","filename","Card","Table","responsive","striped","bordered","title","immigrant","scope","thousandSeparator","prefix","displayType","moment","format","length","connect","Stkitts","routes","path","component","AdminLayout","showMenu","toggleMenu","getRoutes","prop","user","showcaseBg","onClick","to","src","logo","alt","height","md","classList","contains","avatar1","activeClassName","Button","block","logOut","color","initialState","password","prevPath","Auth","loginUser","preventDefault","authenticateUser","isAuthenticated","Container","maxHeight","Form","onSubmit","bind","lg","autoFocus","callBack","post","authReducer","action","authLoaded","goBack","combineReducers","immigrantDelete","success","middleware","thunk","store","createStore","reducers","composeWithDevTools","applyMiddleware","App","autoClose","draggable","enableMultiContainer","containerId","position","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0eACaA,EAAM,qCAEjBC,EAMI,CACFC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,qBCZDC,EAAe,eAC1BC,EAAc,cCMHC,EAAa,SAACC,EAAUC,GACnC,GAAIC,MAAMC,QAAQH,GAChBA,EAAII,SAAQ,SAAAC,GAAK,OAAIJ,EAASI,EAAMC,OAAOC,KAAKF,GAAO,aAClD,GAAmB,kBAARL,EAChB,GAAIA,EAAIQ,QACNP,EAASD,EAAIQ,cACR,GAAIR,EAAIK,OAASL,EAAIS,KAC1BC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,QACxBV,EAASD,EAAIK,OACE,CAAEO,KAAMd,OAClB,CACMQ,OAAOC,KAAKP,GAClBI,SAAQ,SAAAS,GACXZ,EAASD,EAAIa,WAGO,kBAARb,GAChBC,EAASD,ICDAc,EAAU,SAACC,GAAD,8CAA6C,WAClEC,GADkE,SAAAC,EAAA,sDAGlED,EAAS,CACPJ,KAAMf,EACNqB,QAASH,IALuD,2CAA7C,uDCxBVI,EAAyB,yBACpCC,EAAyB,yBACzBC,EAAwB,wBAEbC,EAA2B,2BACtCC,EAA2B,2BAC3BC,EAA0B,0BCNtBC,EAAS,SAACzB,GACF,kBAARA,IACF0B,EAAY,QACZA,EAAY,SACZC,OAAOC,SAASC,WAaPC,EAAY,SAACzB,GACxB,OAAIA,EAAM0B,UACRN,EAAOpB,EAAM0B,SAAShB,KAAKP,SACpBH,EAAM0B,SAAShB,KAAKP,SAClBH,EAAMG,SACfiB,EAAOpB,EAAMG,SACNH,EAAMG,cAFR,GAMIwB,EAAW,SAACC,GAAyC,IAA3BC,IAA0B,yDACzDnB,EAAOL,aAAayB,QAAQF,GAClC,OAAOlB,EAAQmB,EAAQE,KAAKF,MAAMnB,GAAQA,EAAQ,MAEvCsB,EAAW,SAACJ,EAAcK,GAAf,OACtB5B,aAAa6B,QACXN,EACmB,kBAAZK,EAAuBF,KAAKI,UAAUF,GAAWA,IAG/CZ,EAAc,SAACO,GAAD,OAAkBvB,aAAaC,WAAWsB,IChBxDQ,EAAgB,SAACC,GAAD,8CAAgC,WAC3D1B,EACA2B,GAF2D,qBAAA1B,EAAA,sEAKzDD,EAAS,CACPJ,KAAMO,IANiD,EAUrDwB,IADMC,EAT+C,EASvDnC,KAAQmC,MAGJC,EAAS,CACblD,QAAS,CACPmD,cAAc,UAAD,OAAYF,KAd4B,SAiBvCG,IAAMC,IAAN,UAAavD,EAAb,uBAA+BiD,GAAcG,GAjBN,OAiBnDI,EAjBmD,OAmBzDjC,EAAS,CACPJ,KAAMQ,EACNF,QAAS+B,EAAIlC,OArB0C,kDAwBzDC,EAAS,CACPJ,KAAMS,EACNH,QAASY,EAAU,EAAD,MAEpBoB,YAAMpB,EAAU,EAAD,KA5B0C,0DAAhC,yDAgChBqB,EAAW,SACtBT,EACAU,GAFsB,8CAGnB,WAAOpC,EAAoB2B,GAA3B,qBAAA1B,EAAA,sEAEDD,EAAS,CACPJ,KFnDkC,6BEgDnC,EAOG+B,IADMC,EANT,EAMCnC,KAAQmC,MAGJC,EAAS,CACblD,QAAS,CACPmD,cAAc,UAAD,OAAYF,KAX5B,SAciBG,IAAMC,IAAN,UACbvD,EADa,uBACKiD,EADL,eACsBU,GACtCP,GAhBD,OAcKI,EAdL,OAmBDjC,EAAS,CACPJ,KAAMQ,EACNF,QAAS+B,EAAIlC,OArBd,kDAwBDC,EAAS,CACPJ,KFxEsB,0BEyEtBM,QAASY,EAAU,EAAD,MAEpBoB,YAAMpB,EAAU,EAAD,KA5Bd,0DAHmB,yD,uHC2CTuB,E,4MAnFbC,MAAQ,CACNC,QAAS,GACTC,SAAU,I,EA6BZC,YAAc,SAACC,GAAuD,IAA3BF,EAA0B,uDAAP,GAC5D,EAAKG,SAAS,CACZJ,QAAS,CAAEG,QAAOE,aAAmBC,IAAVH,OAAsBG,GAAaH,KAEhE,EAAKC,SAAS,CACZH,SAAUE,EAAQ,GAAK,cAACI,EAAA,EAAD,UAAeN,O,uDAhChC,IAAD,SACwDO,KAAKC,MAA5DC,EADD,EACCA,QAASC,EADV,EACUA,cAAeC,EADzB,EACyBA,WAAYC,EADrC,EACqCA,MAAUC,EAD/C,gEAGP,OACE,qCACE,cAACC,EAAA,EAAD,yBACEC,QAAS,kBAAM,EAAKC,aACpB5D,KACEsD,EACI,MACAD,EACA,QACAE,EACA,WACAE,EAAKzD,KACLyD,EAAKzD,KACL,OAENwD,MAAiB,OAAVA,EAAiB,GAAKA,GACzBC,GACAN,KAAKT,MAAMC,UAEhBQ,KAAKT,MAAME,c,kCAcL,IAAD,SAQNO,KAAKC,MANPS,EAFQ,EAERA,WACAC,EAHQ,EAGRA,SACAT,EAJQ,EAIRA,QACAC,EALQ,EAKRA,cACAC,EANQ,EAMRA,WANQ,IAORC,aAPQ,MAOA,GAPA,EAUJO,EAAkB,WAClBV,EACF,EAAKR,YACHmB,IAAUX,QAAQG,EAAQA,EAAMS,WAAa,IAC7C,yBAEOX,EACT,EAAKT,YACHmB,IAAUE,cAAcV,EAAQA,EAAMS,WAAa,GAAI,OACvD,wBAEOV,EACT,EAAKV,YACHmB,IAAUG,SAASX,EAAQA,EAAMS,WAAa,GAAI,CAAEG,IAAK,IACzD,0CAGF,EAAKvB,iBAAYI,KAIjBY,GAAcC,IACZE,IAAUK,QAAQb,EAAQA,EAAMS,WAAa,IAC/Cd,KAAKN,aAAY,EAAO,0BAK1BkB,Q,GA/EsBO,aCUfC,GAFcC,cAEG,SAAC,GAI4B,EAHzDC,UAG0D,IAAD,IAFzDC,aAEyD,MAFjD,GAEiD,EADtDjB,EACsD,qCACzD,OACE,qCACIO,IAAUK,QAAQK,GAMlB,6BALA,wBAAOC,UAAU,0BAA0BC,QAASnB,EAAKpC,KAAzD,UACGqD,EACAjB,EAAKK,UAAY,sBAAMa,UAAU,cAAhB,kBAKtB,cAAC,EAAD,eAAmBlB,IAClBA,EAAKoB,SAAW,gCAAQpB,EAAKoB,e,SCvBrBC,I,OAXC,SAAC,GAAD,SAAGC,KAEf,qBAAKJ,UAAU,sBAAf,SACE,qBAAKA,UAAU,GAAf,SACE,cAAC,cAAD,QAIJ,2B,mBCZW,OAA0B,gCCA1B,OAA0B,iCCA1B,OAA0B,qCCoC1BK,I,OAzBH,SAAC,GAQN,IAAD,IAPJC,eAOI,SANJC,EAMI,EANJA,WACAP,EAKI,EALJA,UAKI,IAJJQ,cAII,MAJK,GAIL,EAHJC,EAGI,EAHJA,SACAC,EAEI,EAFJA,GAEI,IADJC,aACI,MADI,GACJ,EAIJ,OAHAL,GAAWC,EACNC,EAAOI,gBAAP,cAAgCL,EAAhC,KACDM,QAAQC,MAEV,yBACEJ,GAAIA,EACJV,UAAS,eAAUW,EAAV,YAAmBX,EAC1B,KACCM,EAAU,WAAa,KAC1BS,MAAK,eAAOP,GALd,SAOGC,M,yDCdDjF,GAAO,CACXwF,OAAQ,CACN,GACA,OACA,QACA,QACA,UACA,eACA,WACA,YACA,cACA,WACA,WACA,QACA,QACA,QACA,QACA,cACA,MACA,SAIEC,G,4MAKJlD,MAAQ,CAAEmD,OAAQ,GAAIC,SAAS,G,EAW/BC,SAAW,SAACC,GACV,EAAKjD,SAAL,eAAiBiD,EAAEC,OAAO5E,KAAO2E,EAAEC,OAAOzC,QAC1C,EAAK0C,SAASF,EAAEC,OAAOzC,Q,EAGzB0C,SAAW,SAACC,GAAD,OACT,EAAKpD,SAAS,CAAE+C,SAAS,IAAQ,kBAC/B,EAAK1C,MACFb,SAAS,UAAW4D,GACpBC,MAAK,SAAC/D,GAAD,OAAS,EAAKU,SAAS,CAAE+C,SAAS,OACvCO,OAAM,SAACjH,GAAD,OAAS,EAAK2D,SAAS,CAAE+C,SAAS,W,kEAnB1B,IAAD,OAClB3C,KAAKJ,SAAS,CAAE+C,SAAS,IAAQ,kBAC/B,EAAK1C,MACFvB,cAAc,WACduE,MAAK,SAAC/D,GAAD,OAAS,EAAKU,SAAS,CAAE+C,SAAS,OACvCO,OAAM,SAACjH,GAAD,OAAS,EAAK2D,SAAS,CAAE+C,SAAS,Y,+BAiBrC,IAAD,OACCQ,EAAkBnD,KAAKC,MAAvBkD,cACR,OACE,sBAAKjB,GAAG,WAAWV,UAAU,qBAA7B,UACE,cAAC,GAAD,CAASI,KAAM5B,KAAKT,MAAMoD,UAC1B,cAACS,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,6CAGJ,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,CACEV,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpC3E,KAAM,SACNmC,MAAOL,KAAKT,MAAMmD,OAClBa,YAAY,gBAGhB,cAACF,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,WAAD,CACEtG,KAAMmG,EAAcK,KAClB,gBACEC,EADF,EACEA,WACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,QACAC,EANF,EAMEA,eACAC,EAPF,EAOEA,iBACAC,EARF,EAQEA,gBACAC,EATF,EASEA,mBACAC,EAVF,EAUEA,SACAC,EAXF,EAWEA,SACAC,EAZF,EAYEA,eACAC,EAbF,EAaEA,QACAC,EAdF,EAcEA,UACAC,EAfF,EAeEA,YACAC,EAhBF,EAgBEA,cACAC,EAjBF,EAiBEA,iBACAC,EAlBF,EAkBEA,mBACAC,EAnBF,EAmBEA,kBACAC,EApBF,EAoBEA,kBApBF,MAqBO,CACLnB,aACAC,YACAC,QACAC,QACAC,UACAC,iBACAC,mBACAC,kBACAC,qBACAG,iBACAC,UACAC,YACAO,OAAO,GAAD,OAAKN,EAAYtD,IAAjB,YAAwBsD,EAAYO,KAC1CC,SAAS,GAAD,OAAKP,EAAcvD,IAAnB,YAA0BuD,EAAcM,KAChDL,iBAAkBA,EAAiBvG,KACnCwG,mBAAoBA,EAAmBxG,KACvCyG,oBACAC,oBACAV,SAAUA,EACNS,EAAkBnB,KAAI,SAACwB,GAAD,OACpB,uBAAMxD,UAAU,GAAhB,UACGwD,EAAQ9G,KADX,IACkB,MADM8G,EAAQ9C,OAIlC,KACJiC,SAAUA,EACNS,EAAkBpB,KAAI,SAACwB,GAAD,OACpB,uBAAMxD,UAAU,GAAhB,UACGwD,EAAQ9G,KADX,IACkB,MADM8G,EAAQ9C,OAIlC,SAGRY,OAAO,SACPtB,UAAU,4BACVyD,SAAS,qBA5DX,gCAkEJ,eAACC,GAAA,EAAD,CAAM1D,UAAU,WAAhB,UACE,eAAC2D,GAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAAlC,UACE,gCACE,6BACGtI,GAAKwF,OAAOgB,KAAI,SAAC+B,EAAOzI,GAAR,OACf,oBAAI0E,UAAU,kBAAd,SACG+D,GADkCzI,UAM3C,gCACGqG,EAAcK,KAAI,SAACgC,EAAW1I,GAAc,IAEzC2G,EAoBE+B,EApBF/B,WACAC,EAmBE8B,EAnBF9B,UACAC,EAkBE6B,EAlBF7B,MACAC,EAiBE4B,EAjBF5B,MACAC,EAgBE2B,EAhBF3B,QACAC,EAeE0B,EAfF1B,eACAC,EAcEyB,EAdFzB,iBACAC,EAaEwB,EAbFxB,gBACAC,EAYEuB,EAZFvB,mBACAC,EAWEsB,EAXFtB,SACAC,EAUEqB,EAVFrB,SACAC,EASEoB,EATFpB,eACAC,EAQEmB,EARFnB,QACAC,EAOEkB,EAPFlB,UACAC,EAMEiB,EANFjB,YACAC,EAKEgB,EALFhB,cACAC,EAIEe,EAJFf,iBACAC,EAGEc,EAHFd,mBACAC,EAEEa,EAFFb,kBACAC,EACEY,EADFZ,kBAEF,OACE,+BACE,oBAAIa,MAAM,MAAV,SAAiB3I,EAAM,IACvB,uCAAQ2G,EAAR,YAAsBC,KACtB,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,+BACE,cAAC,KAAD,CACE6B,mBAAiB,EACjBC,OAAO,IACPtF,MAAOkE,EAAYtD,IACnB2E,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPtF,MAAOkE,EAAYO,IACnBc,YAAY,YAGhB,+BACE,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPtF,MAAOmE,EAAcvD,IACrB2E,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPtF,MAAOmE,EAAcM,IACrBc,YAAY,YAGhB,6BAAKnB,EAAiBvG,OACtB,6BAAKwG,EAAmBxG,OACxB,6BACGgG,EACGS,EAAkBnB,KAAI,SAACwB,GAAD,OACpB,uBAAMxD,UAAU,GAAhB,UACGwD,EAAQ9G,KADX,IACkB,MADM8G,EAAQ9C,OAIlC,OAEN,6BACGiC,EACGS,EAAkBpB,KAAI,SAACwB,GAAD,OACpB,uBAAMxD,UAAU,GAAhB,UACGwD,EAAQ9G,KADX,IACkB,MADM8G,EAAQ9C,OAIlC,OAEN,6BAAK4B,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKG,IACL,6BAAKC,IACL,6BAAKwB,KAAOvB,GAAWwB,OAAO,iBA9DvBhJ,YAoEfqG,EAAc4C,QACd,qBAAKvE,UAAU,cAAf,SACE,iE,GA7NQL,aA2OP6E,gBALS,SAAC,GAAD,IAAG7C,EAAH,EAAGA,cAAH,sBACnBA,KAImC,CAAEzE,gBAAeU,YAA1C4G,CAAsDvD,IClQ/DzF,GAAO,CACXwF,OAAQ,CACN,GACA,OACA,QACA,QACA,UACA,eACA,WACA,YACA,cACA,WACA,WACA,QACA,QACA,QACA,QACA,cACA,MACA,SAIEyD,G,4MAKJ1G,MAAQ,CAAEmD,OAAQ,GAAIC,SAAS,G,EAW/BC,SAAW,SAACC,GACV,EAAKjD,SAAL,eAAiBiD,EAAEC,OAAO5E,KAAO2E,EAAEC,OAAOzC,QAC1C,EAAK0C,SAASF,EAAEC,OAAOzC,Q,EAGzB0C,SAAW,SAACC,GAAD,OACT,EAAKpD,SAAS,CAAE+C,SAAS,IAAQ,kBAC/B,EAAK1C,MACFb,SAAS,UAAW4D,GACpBC,MAAK,SAAC/D,GAAD,OAAS,EAAKU,SAAS,CAAE+C,SAAS,OACvCO,OAAM,SAACjH,GAAD,OAAS,EAAK2D,SAAS,CAAE+C,SAAS,W,kEAnB1B,IAAD,OAClB3C,KAAKJ,SAAS,CAAE+C,SAAS,IAAQ,kBAC/B,EAAK1C,MACFvB,cAAc,WACduE,MAAK,SAAC/D,GAAD,OAAS,EAAKU,SAAS,CAAE+C,SAAS,OACvCO,OAAM,SAACjH,GAAD,OAAS,EAAK2D,SAAS,CAAE+C,SAAS,Y,+BAiBrC,IAAD,OACCQ,EAAkBnD,KAAKC,MAAvBkD,cACR,OACE,sBAAKjB,GAAG,WAAWV,UAAU,qBAA7B,UACE,cAAC,GAAD,CAASI,KAAM5B,KAAKT,MAAMoD,UAC1B,cAACS,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,+CAGJ,eAACD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,CACEV,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpC3E,KAAM,SACNmC,MAAOL,KAAKT,MAAMmD,OAClBa,YAAY,gBAGhB,cAACF,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,WAAD,CACEtG,KAAMmG,EAAcK,KAClB,gBACEC,EADF,EACEA,WACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,QACAC,EANF,EAMEA,eACAC,EAPF,EAOEA,iBACAC,EARF,EAQEA,gBACAC,EATF,EASEA,mBACAC,EAVF,EAUEA,SACAC,EAXF,EAWEA,SACAC,EAZF,EAYEA,eACAC,EAbF,EAaEA,QACAC,EAdF,EAcEA,UACAC,EAfF,EAeEA,YACAC,EAhBF,EAgBEA,cACAC,EAjBF,EAiBEA,iBACAC,EAlBF,EAkBEA,mBACAC,EAnBF,EAmBEA,kBACAC,EApBF,EAoBEA,kBApBF,MAqBO,CACLnB,aACAC,YACAC,QACAC,QACAC,UACAC,iBACAC,mBACAC,kBACAC,qBACAG,iBACAC,UACAC,YACAO,OAAO,GAAD,OAAKN,EAAYtD,IAAjB,YAAwBsD,EAAYO,KAC1CC,SAAS,GAAD,OAAKP,EAAcvD,IAAnB,YAA0BuD,EAAcM,KAChDL,iBAAkBA,EAAiBvG,KACnCwG,mBAAoBA,EAAmBxG,KACvCyG,oBACAC,oBACAV,SAAUA,EACNS,EAAkBnB,KAAI,SAACwB,GAAD,OACpB,uBAAMxD,UAAU,GAAhB,UACGwD,EAAQ9G,KADX,IACkB,MADM8G,EAAQ9C,OAIlC,KACJiC,SAAUA,EACNS,EAAkBpB,KAAI,SAACwB,GAAD,OACpB,uBAAMxD,UAAU,GAAhB,UACGwD,EAAQ9G,KADX,IACkB,MADM8G,EAAQ9C,OAIlC,SAGRY,OAAO,SACPtB,UAAU,4BACVyD,SAAS,qBA5DX,gCAkEJ,eAACC,GAAA,EAAD,CAAM1D,UAAU,WAAhB,UACE,eAAC2D,GAAA,EAAD,CAAOC,YAAU,EAACC,SAAO,EAACC,UAAQ,EAAlC,UACE,gCACE,6BACGtI,GAAKwF,OAAOgB,KAAI,SAAC+B,EAAOzI,GAAR,OACf,oBAAI0E,UAAU,kBAAd,SACG+D,GADkCzI,UAM3C,gCACGqG,EAAcK,KAAI,SAACgC,EAAW1I,GAAc,IAEzC2G,EAoBE+B,EApBF/B,WACAC,EAmBE8B,EAnBF9B,UACAC,EAkBE6B,EAlBF7B,MACAC,EAiBE4B,EAjBF5B,MACAC,EAgBE2B,EAhBF3B,QACAC,EAeE0B,EAfF1B,eACAC,EAcEyB,EAdFzB,iBACAC,EAaEwB,EAbFxB,gBACAC,EAYEuB,EAZFvB,mBACAC,EAWEsB,EAXFtB,SACAC,EAUEqB,EAVFrB,SACAC,EASEoB,EATFpB,eACAC,EAQEmB,EARFnB,QACAC,EAOEkB,EAPFlB,UACAC,EAMEiB,EANFjB,YACAC,EAKEgB,EALFhB,cACAC,EAIEe,EAJFf,iBACAC,EAGEc,EAHFd,mBACAC,EAEEa,EAFFb,kBACAC,EACEY,EADFZ,kBAEF,OACE,+BACE,oBAAIa,MAAM,MAAV,SAAiB3I,EAAM,IACvB,uCAAQ2G,EAAR,YAAsBC,KACtB,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,+BACE,cAAC,KAAD,CACE6B,mBAAiB,EACjBC,OAAO,IACPtF,MAAOkE,EAAYtD,IACnB2E,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPtF,MAAOkE,EAAYO,IACnBc,YAAY,YAGhB,+BACE,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPtF,MAAOmE,EAAcvD,IACrB2E,YAAY,SAEb,MACD,cAAC,KAAD,CACEF,mBAAiB,EACjBC,OAAO,IACPtF,MAAOmE,EAAcM,IACrBc,YAAY,YAGhB,6BAAKnB,EAAiBvG,OACtB,6BAAKwG,EAAmBxG,OACxB,6BACGgG,EACGS,EAAkBnB,KAAI,SAACwB,GAAD,OACpB,uBAAMxD,UAAU,GAAhB,UACGwD,EAAQ9G,KADX,IACkB,MADM8G,EAAQ9C,OAIlC,OAEN,6BACGiC,EACGS,EAAkBpB,KAAI,SAACwB,GAAD,OACpB,uBAAMxD,UAAU,GAAhB,UACGwD,EAAQ9G,KADX,IACkB,MADM8G,EAAQ9C,OAIlC,OAEN,6BAAK4B,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKG,IACL,6BAAKC,IACL,6BAAKwB,KAAOvB,GAAWwB,OAAO,iBA9DvBhJ,YAoEfqG,EAAc4C,QACd,qBAAKvE,UAAU,cAAf,SACE,iE,GA7NQL,aClBP+E,GAnBF,CACX,CACEC,KAAM,WACNjI,KAAM,cACNkI,UAAW3D,IAEb,CACE0D,KAAM,WACNjI,KAAM,gBACNkI,UDuQWJ,aALS,SAAC,GAAD,IAAG7C,EAAH,EAAGA,cAAH,sBACnBA,KAImC,CAAEzE,gBAAeU,YAA1C4G,CAAsDC,KCpQnE,CACEE,KAAM,IACNjI,KAAM,cACNkI,UAAW3D,KCNT4D,G,4MAIJ9G,MAAQ,CACN+G,UAAU,EACV3D,SAAS,G,EAGX4D,WAAa,kBAAM,EAAK3G,SAAS,CAAE0G,UAAW,EAAK/G,MAAM+G,Y,EAEzDE,UAAY,SACVN,GADU,OAOVA,EAAO1C,KAAI,SAACiD,EAAM3J,GAAP,OACT,cAAC,KAAD,CAAOqJ,KAAMM,EAAKN,KAAMC,UAAWK,EAAKL,WAAgBtJ,O,uDAGlD,IAAD,OACC4J,EAAS1G,KAAKC,MAAdyG,KACJJ,EAAatG,KAAKT,MAAlB+G,SAEJ,OAAOI,EACL,cAAC,GAAD,CACE5E,SAAO,EACPC,WAAY4E,GACZzE,GAAG,WACHV,UAAU,kBAJZ,SAME,sBAAKA,UAAU,YAAYU,GAAG,YAA9B,UACE,8BACE,eAACgD,GAAA,EAAD,CAAM1D,UAAU,mDAAhB,UACE,qBAAIA,UAAU,cAAd,UACE,mBACEA,UAAU,kCACVoF,QAAS,kBAAM,EAAKL,gBAEtB,cAAC,IAAD,CAAMM,GAAG,IAAT,SACE,sBAAMrF,UAAU,6BAAhB,4BAGJ,qBAAKA,UAAU,cAAf,SACE,qBAAKsF,IAAG,UAAKC,IAAQC,IAAI,OAAOC,OAAQ,YAI9C,eAAC7D,EAAA,EAAD,CAAK5B,UAAU,gBAAf,UACE,cAAC6B,EAAA,EAAD,CACE7B,UAAS,4BACP8E,EAAW,SAAW,GADf,cAGThD,GAAG,KACH4D,GAAG,IACHN,QAAS,SAAC/D,GACJA,EAAEC,OAAOqE,UAAUC,SAAS,SAAS,EAAKb,cAPlD,SAUE,eAACrB,GAAA,EAAD,CAAM1D,UAAU,qBAAhB,UACE,oBAAIA,UAAU,aAAd,SACE,mBACEoF,QAAS,kBAAM,EAAKL,cACpB/E,UAAU,4BAGd,sBAAKA,UAAU,mBAAf,UACE,qBACEwF,IAAI,MACJxF,UAAU,sBACVsF,IAAG,UAAKO,MAEV,uBACA,2CAAYX,EAAK/C,SACjB,uBAEA,qBAAKnC,UAAU,qBAAf,SAAqCkF,EAAK/C,WAE5C,sBAAKzB,GAAG,OAAOV,UAAU,OAAzB,UACE,mBAAGA,UAAU,OAAb,SACE,cAAC,IAAD,CACE8F,gBAAgB,SAChBV,QAAS5G,KAAKuG,WACdM,GAAG,WAHL,kCAQF,oBAAIrF,UAAU,cACd,mBAAGA,UAAU,OAAb,SACE,cAAC,IAAD,CACE8F,gBAAgB,SAChBV,QAAS5G,KAAKuG,WACdM,GAAG,WAHL,oCAQF,oBAAIrF,UAAU,cAYd,cAAC+F,EAAA,EAAD,CAAQC,OAAK,EAACZ,QAAS5G,KAAKC,MAAMwH,OAAQC,MAAM,SAAhD,4BAMN,cAACrE,EAAA,EAAD,CAAK7B,UAAU,OAAO0F,GAAG,IAAzB,SACE,eAAChC,GAAA,EAAD,CAAM1D,UAAU,4BAAhB,UACE,cAAC,GAAD,CAASI,KAAM5B,KAAKT,MAAMoD,UAGxB,cAAC,KAAD,UAAS3C,KAAKwG,UAAUN,mBAQpC,cAAC,KAAD,CAAUW,GAAG,oB,GAnIO1F,aA2IX6E,gBAJS,SAAC,GAAD,IAAGtJ,EAAH,EAAGA,KAAH,sBACnBA,KAGmC,CAAE+K,Od1FpB,kBAAM,SAACxK,GAC3BN,aAAaC,WAAW,QACxBD,aAAaC,WAAW,SACxBjB,EAAOC,QAAQmD,cAAgB,GAE/BI,YAAM,2BACNlC,EAAS,CACPJ,KAAMd,OcmFKiK,CAAqCK,IC7I9CsB,GAAe,CACnBhE,MAAO,GACPiE,SAAU,GACVC,SAAU,IACVlF,SAAS,GAGLmF,G,4MACJvI,MAAQoI,G,EAER/E,SAAW,SAACC,GACV,EAAKjD,SAAL,eAAiBiD,EAAEC,OAAO5E,KAAO2E,EAAEC,OAAOzC,S,EAG5C0H,UAAY,SAAClF,GACXA,EAAEmF,iBACF,EAAKpI,SAAS,CAAE+C,SAAS,IACzB,EAAK1C,MAAMgI,iBAAiB,EAAK1I,OAAO,SAACL,EAAUjD,GAAX,OACtCiD,EAAM,EAAKU,SAAS+H,IAAgB,EAAK/H,SAAS3D,O,uDAI5C,IAAD,OACP,OAAO+D,KAAKC,MAAMiI,gBAEhB,cAAC,GAAD,IAEA,mCACE,eAACC,EAAA,EAAD,CAAWjG,GAAG,QAAQV,UAAU,YAAhC,UACE,cAAC4B,EAAA,EAAD,CAAK5B,UAAU,OAAf,SACE,cAAC6B,EAAA,EAAD,CAAK7B,UAAU,cAAf,SACE,qBAAKsF,IAAKC,GAAMxE,MAAO,CAAE6F,UAAW,QAAUpB,IAAI,aAGtD,cAACqB,EAAA,EAAD,CAAMC,SAAUtI,KAAK+H,UAAUQ,KAAKvI,MAApC,SACE,eAACoD,EAAA,EAAD,WACE,cAAC,GAAD,CAASxB,KAAM5B,KAAKT,MAAMoD,UAC1B,eAACU,EAAA,EAAD,CAAKC,GAAG,IAAIkF,GAAI,EAAGhH,UAAU,+BAA7B,UACE,cAAC,EAAD,CACEoB,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpC3E,KAAM,QACNmC,MAAOL,KAAKT,MAAMoE,MAClBjD,YAAU,EACV6C,YAAY,WACZjC,UAAU,iBACVmH,WAAW,EACXjH,UAAU,SAGZ,cAAC,EAAD,CACEoB,SAAU,SAACC,GAAD,OAAY,EAAKD,SAASC,IACpC3E,KAAM,WACNrB,KAAK,WACLwD,MAAOL,KAAKT,MAAMqI,SAClBlH,YAAU,EACVN,YAAU,EACVmD,YAAY,WACZjC,UAAU,2BAEZ,qBAAKE,UAAU,cAAf,SACE,cAAC+F,EAAA,EAAD,CACEC,OAAK,EACLhG,UAAU,YACVkG,MAAM,UACN7K,KAAK,SAJP,sC,GArDCsE,aA2EJ6E,gBAJS,SAAC,GAAD,IAAGtJ,EAAH,EAAGA,KAAH,sBACnBA,KAGmC,CAAEuL,iBfpFV,SAC9BvB,GAD8B,IAE9BgC,EAF8B,uDAEd,aAFc,8CAG3B,WAAOzL,GAAP,SAAAC,EAAA,sEACG8B,IAAM2J,KAAN,UAAcjN,EAAd,gBAAiCgL,EAAM/K,GAC1CsH,KADG,uCACE,WAAO/D,GAAP,SAAAhC,EAAA,6DACJwL,GAAS,GAAM,GADX,SAEE3L,EAAQmC,EAAIlC,KAAZD,CAAkBE,GAFpB,OAGJkC,YAAM,oBAHF,2CADF,uDAMH+D,OAAM,SAACjH,GACNyM,GAAS,EAAO,CAAE/F,SAAS,IAC3B3G,EAAW,sBAAuBmD,QATnC,2CAH2B,wDeoFjB6G,CAA+C8B,I,2BC3D/Cc,GA9BK,WAAyD,IAAxDrJ,EAAuD,uDAA/C,GAAIsJ,EAA2C,uCAC1E,OAAQA,EAAOhM,MACb,KAAKf,EAAL,IACU+C,EAAUgK,EAAO1L,QAAjB0B,MAIR,cAHOgK,EAAO1L,QAAQ0B,MACtBP,EAAS,QAASO,GAClBP,EAAS,OAAQuK,EAAO1L,SACjB,2BACFoC,GADL,IAEEuJ,YAAY,EACZjK,QACA6H,KAAMmC,EAAO1L,QACb+K,iBAAiB,EACjBa,QAAQ,IAGZ,KAAKhN,EACH,OAAO,2BACFwD,GADL,IAEEuJ,YAAY,EACZZ,iBAAiB,EACjBxB,KAAM,KACN7H,MAAO,KAGX,QACE,OAAOU,ICtBEyJ,8BAAgB,CAC7BtM,QACAuM,gBCAoC,WAGhC,IAFJ1J,EAEG,uDAFK,GAEL,yCADD1C,EACC,EADDA,KACC,IADKM,eACL,MADe,KACf,EACH,OAAQN,GACN,KAAKU,EACH,MAAO,CAAEoF,SAAS,GACpB,KAAKnF,EACH,MAAO,CAAEmF,SAAS,EAAOuG,SAAS,GACpC,KAAKzL,EACH,MAAO,CAAEkF,SAAS,EAAMrG,MAAOa,GACjC,QACE,OAAOoC,IDXX4D,cCekC,WAG9B,IAFJ5D,EAEG,uDAFK,CAAE4D,cAAe,IAEtB,yCADDtG,EACC,EADDA,KACC,IADKM,eACL,MADe,KACf,EACH,OAAQN,GACN,KAAKO,EACH,OAAO,2BAAKmC,GAAZ,IAAmBoD,SAAS,IAC9B,KAAKtF,EACH,OAAO,2BAAKkC,GAAZ,IAAmBoD,SAAS,EAAOQ,cAAehG,IACpD,KAAKG,EACH,OAAO,2BAAKiC,GAAZ,IAAmBoD,SAAS,EAAOrG,MAAOa,IAC5C,QACE,OAAOoC,MCzBPoI,GAAe,CACnBjL,KAPW,CACXwL,gBAAiBjK,EAAS,SAAS,GACnCyI,KAAMzI,EAAS,QACfY,MAAOZ,EAAS,SAAS,KAOrBkL,GAAa,CAACC,MAQLC,GANDC,uBACZC,GACA5B,GACA6B,+BAAoBC,mBAAe,WAAf,EAAmBN,MCkB1BO,G,uKA5BX,OACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEM,UAAW,IACXC,WAAS,EACTC,sBAAoB,EACpBC,YAAa,IACbC,SAAU,cAEZ,cAAC,IAAD,CACEJ,UAAW,IACXC,WAAS,EACTC,sBAAoB,EACpBC,YAAa,IACbC,SAAU,gBAEZ,cAAC,IAAD,CAAgBJ,UAAW,IAAMC,WAAS,IAGxC,cAAC,GAAD,a,GAtBMzI,a,qBCGE6I,QACW,cAA7BpM,OAAOC,SAASoM,UAEe,UAA7BrM,OAAOC,SAASoM,UAEhBrM,OAAOC,SAASoM,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzH,MAAK,SAAA0H,GACJA,EAAaC,gBAEd1H,OAAM,SAAA5G,GACL+F,QAAQ/F,MAAMA,EAAMG,c","file":"static/js/main.3cb1b05c.chunk.js","sourcesContent":["// export const URL = 'http://localhost:5000',\nexport const URL = 'https://api-v2.loftimmigration.com',\n  baseColor = '#365B76 ',\n  header: {\n    headers: {\n      'Content-Type': string\n      Accept: string\n      Authorization?: string\n    }\n  } = {\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  },\n  secret = 'secret'\n","export const AUTH_SUCCESS = 'AUTH_SUCCESS',\n  LOGOUT_USER = 'LOGOUT_USER'\n","import { Dispatch } from 'redux';\r\nimport { LOGOUT_USER } from './types';\r\n\r\nconst dispatchAction = (action: { type: string; payload?: string }) => (\r\n  dispatch: Dispatch\r\n) => dispatch(action);\r\n\r\nexport const errHandler = (err: any, callback: (e: string) => void) => {\r\n  if (Array.isArray(err)) {\r\n    err.forEach(error => callback(error[Object.keys(error)[0]]));\r\n  } else if (typeof err === 'object') {\r\n    if (err.message) {\r\n      callback(err.message);\r\n    } else if (err.error && err.auth) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      callback(err.error);\r\n      dispatchAction({ type: LOGOUT_USER });\r\n    } else {\r\n      let keys = Object.keys(err);\r\n      keys.forEach(key => {\r\n        callback(err[key]);\r\n      });\r\n    }\r\n  } else if (typeof err === 'string') {\r\n    callback(err);\r\n  }\r\n};\r\n","import Axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { header, URL } from '../config'\r\nimport { errHandler } from './errorHandler'\r\nimport { LOGOUT_USER, AUTH_SUCCESS } from './types'\r\nimport { Dispatch } from 'redux'\r\nimport userType from '../interface/user'\r\n\r\nexport const authenticateUser = (\r\n  user: { identifier: string; password: string },\r\n  callBack: any = () => {}\r\n) => async (dispatch: Dispatch) => {\r\n  await Axios.post(`${URL}/users/login`, user, header)\r\n    .then(async (res) => {\r\n      callBack(true, false)\r\n      await setUser(res.data)(dispatch)\r\n      toast('Login Successful')\r\n    })\r\n    .catch((err) => {\r\n      callBack(false, { loading: false })\r\n      errHandler('Invalid Credentials', toast)\r\n    })\r\n}\r\n\r\nexport const setUser = (data: { token: string; user: userType }) => async (\r\n  dispatch: Dispatch\r\n) => {\r\n  dispatch({\r\n    type: AUTH_SUCCESS,\r\n    payload: data,\r\n  })\r\n}\r\n\r\nexport const resetPassword = async (data: any, callBack = (res: any) => {}) => {\r\n  header.headers.Authorization = `Bearer ${data.token}`\r\n  await Axios.patch(`${URL}/users/reset-password`, data, header)\r\n    .then((res) => {\r\n      callBack(true)\r\n      toast('Password reset successful, proceed to login')\r\n    })\r\n    .catch((err) => {\r\n      callBack(false)\r\n      errHandler(err.response.data, toast)\r\n    })\r\n}\r\n\r\nexport const forgotPassword = async (\r\n  email: string,\r\n  callBack = (res: any) => {}\r\n) =>\r\n  await Axios.post(`${URL}/users/forgot-password`, { email }, header)\r\n    .then(async (res) => {\r\n      toast('A link to reset your password have been sent to your email')\r\n\r\n      callBack(true)\r\n    })\r\n    .catch((err) => {\r\n      callBack(false)\r\n      errHandler(err.response.data, toast)\r\n    })\r\n\r\nexport const logOut = () => (dispatch: Dispatch) => {\r\n  localStorage.removeItem('user')\r\n  localStorage.removeItem('token')\r\n  header.headers.Authorization = ''\r\n\r\n  toast('Successfully logged out')\r\n  dispatch({\r\n    type: LOGOUT_USER,\r\n  })\r\n}\r\n","export const IMMIGRANT_LIST_REQUEST = 'IMMIGRANT_LIST_REQUEST',\n  IMMIGRANT_LIST_SUCCESS = 'IMMIGRANT_LIST_SUCCESS',\n  IMMIGRANT_LIST_FAILED = 'IMMIGRANT_LIST_FAILED'\n\nexport const IMMIGRANT_DELETE_REQUEST = 'IMMIGRANT_DELETE_REQUEST',\n  IMMIGRANT_DELETE_SUCCESS = 'IMMIGRANT_DELETE_SUCCESS',\n  IMMIGRANT_DELETE_FAILED = 'IMMIGRANT_DELETE_FAILED'\n\nexport const SEARCH_IMMIGRANT_REQUEST = 'SEARCH_IMMIGRANT_REQUEST',\n  SEARCH_IMMIGRANT_FAILED = 'SEARCH_IMMIGRANT_FAILED'\n","const logout = (err: string) => {\n  if (err === 'Invalid token') {\n    removeLocal('user')\n    removeLocal('token')\n    window.location.reload()\n  }\n}\n\nexport const getObject = (collection: any[], key: any) => {\n  return collection.find((object: any) => object.id == key)\n}\n\nexport const toPlural = (val: number, text: string) =>\n  `${val} ${text}${(val > 1 && 's') || ''}`\n\nexport const getExt = (text: string) => `${text.split('.').pop()}`\n\nexport const handleErr = (error: any) => {\n  if (error.response) {\n    logout(error.response.data.message)\n    return error.response.data.message\n  } else if (error.message) {\n    logout(error.message)\n    return error.message\n  }\n}\n\nexport const getLocal = (name: string, parse: boolean = true) => {\n  const data = localStorage.getItem(name)\n  return data ? (parse ? JSON.parse(data) : data) : null\n}\nexport const setLocal = (name: string, content: Object | string) =>\n  localStorage.setItem(\n    name,\n    typeof content === 'object' ? JSON.stringify(content) : content\n  )\n\nexport const removeLocal = (name: string) => localStorage.removeItem(name)\n","import Axios from 'axios'\nimport { toast } from 'react-toastify'\nimport { Dispatch } from 'redux'\nimport { URL } from '../config'\nimport {\n  IMMIGRANT_LIST_FAILED,\n  IMMIGRANT_LIST_REQUEST,\n  IMMIGRANT_LIST_SUCCESS,\n  SEARCH_IMMIGRANT_FAILED,\n  SEARCH_IMMIGRANT_REQUEST,\n} from '../constants/immigrantsConstants'\nimport { handleErr } from '../helpers'\n\nexport type collectionType =\n  | 'generals'\n  | 'students'\n  | 'businesses'\n  | 'families'\n  | 'antigua'\n  | 'stkitts'\n\nexport const getImmigrants = (collection: collectionType) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: IMMIGRANT_LIST_REQUEST,\n    })\n    const {\n      auth: { token },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n    const res = await Axios.get(`${URL}/immigrants/${collection}`, config)\n\n    dispatch({\n      type: IMMIGRANT_LIST_SUCCESS,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: IMMIGRANT_LIST_FAILED,\n      payload: handleErr(error),\n    })\n    toast(handleErr(error))\n  }\n}\n\nexport const searchDb = (\n  collection: collectionType,\n  searchParam: string\n) => async (dispatch: Dispatch, getState: any) => {\n  try {\n    dispatch({\n      type: SEARCH_IMMIGRANT_REQUEST,\n    })\n    const {\n      auth: { token },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n    const res = await Axios.get(\n      `${URL}/immigrants/${collection}?_q=${searchParam}`,\n      config\n    )\n\n    dispatch({\n      type: IMMIGRANT_LIST_SUCCESS,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: SEARCH_IMMIGRANT_FAILED,\n      payload: handleErr(error),\n    })\n    toast(handleErr(error))\n  }\n}\n\nconst realData = {\n  id: 5,\n  first_name: 'Ebuka',\n  last_name: 'Nwosu',\n  email: 'info@cybertechdigitals.com',\n  phone: '8107539186',\n  married: 'false',\n  old_dependents: 0,\n  young_dependents: 0,\n  teen_dependents: 0,\n  average_dependents: 0,\n  rejected: true,\n  deported: true,\n  contact_medium: 'Phone Call',\n  referee: 'Instagram',\n  createdAt: '2021-01-14T08:35:33.000Z',\n  updatedAt: '2021-01-14T08:35:33.000Z',\n  invest_funds: 9,\n  networth: 3,\n  residence: 2,\n  nationality: 3,\n  fund: {\n    id: 3,\n    min: 500000,\n    max: 1000000,\n    type: 'worth',\n    createdAt: '2021-01-14T07:49:27.000Z',\n    updatedAt: '2021-01-14T07:49:27.000Z',\n  },\n  country: {\n    id: 3,\n    name: 'Albania',\n    code: 'AL',\n    slug: 'albania',\n    flag: 'https://restcountries.eu/data/alb.svg',\n    desc: 'Albania',\n    createdAt: '2021-01-14T07:49:27.000Z',\n    updatedAt: '2021-01-14T07:49:27.000Z',\n  },\n  RejectedCountries: [\n    {\n      id: 2,\n      name: 'Åland Islands',\n      code: 'AX',\n      slug: 'land-islands',\n      flag: 'https://restcountries.eu/data/ala.svg',\n      desc: 'Åland Islands',\n      createdAt: '2021-01-14T07:49:27.000Z',\n      updatedAt: '2021-01-14T07:49:27.000Z',\n      rejected_countries: {\n        createdAt: '2021-01-14T08:35:33.000Z',\n        updatedAt: '2021-01-14T08:35:33.000Z',\n        antiguaImmigrantId: 5,\n        countryId: 2,\n      },\n    },\n    {\n      id: 3,\n      name: 'Albania',\n      code: 'AL',\n      slug: 'albania',\n      flag: 'https://restcountries.eu/data/alb.svg',\n      desc: 'Albania',\n      createdAt: '2021-01-14T07:49:27.000Z',\n      updatedAt: '2021-01-14T07:49:27.000Z',\n      rejected_countries: {\n        createdAt: '2021-01-14T08:35:33.000Z',\n        updatedAt: '2021-01-14T08:35:33.000Z',\n        antiguaImmigrantId: 5,\n        countryId: 3,\n      },\n    },\n  ],\n  DeportedCountries: [],\n}\n","import React, { Component } from 'react'\r\nimport { FormFeedback, Input, InputProps } from 'reactstrap'\r\nimport validator from 'validator'\r\n\r\ntype inputProps = {\r\n  isRequired?: boolean\r\n  required?: boolean\r\n  isEmail?: boolean\r\n  isPhoneNumber?: boolean\r\n  isPassword?: boolean\r\n} & InputProps\r\n\r\nclass TextValidator extends Component<inputProps> {\r\n  state = {\r\n    isValid: {},\r\n    feedBack: '',\r\n  }\r\n  render() {\r\n    const { isEmail, isPhoneNumber, isPassword, value, ...rest } = this.props\r\n\r\n    return (\r\n      <>\r\n        <Input\r\n          onKeyUp={() => this.errorText()}\r\n          type={\r\n            isPhoneNumber\r\n              ? 'tel'\r\n              : isEmail\r\n              ? 'email'\r\n              : isPassword\r\n              ? 'password'\r\n              : rest.type\r\n              ? rest.type\r\n              : 'text'\r\n          }\r\n          value={value === null ? '' : value}\r\n          {...rest}\r\n          {...this.state.isValid}\r\n        />\r\n        {this.state.feedBack}\r\n      </>\r\n    )\r\n  }\r\n\r\n  changeState = (valid: boolean | undefined, feedBack: string = '') => {\r\n    this.setState({\r\n      isValid: { valid, invalid: valid === undefined ? undefined : !valid },\r\n    })\r\n    this.setState({\r\n      feedBack: valid ? '' : <FormFeedback>{feedBack}</FormFeedback>,\r\n    })\r\n  }\r\n\r\n  errorText() {\r\n    const {\r\n      isRequired,\r\n      required,\r\n      isEmail,\r\n      isPhoneNumber,\r\n      isPassword,\r\n      value = '',\r\n    } = this.props\r\n\r\n    const otherConditions = () => {\r\n      if (isEmail) {\r\n        this.changeState(\r\n          validator.isEmail(value ? value.toString() : ''),\r\n          'Invalid email address'\r\n        )\r\n      } else if (isPhoneNumber) {\r\n        this.changeState(\r\n          validator.isMobilePhone(value ? value.toString() : '', 'any'),\r\n          'Invalid phone number'\r\n        )\r\n      } else if (isPassword) {\r\n        this.changeState(\r\n          validator.isLength(value ? value.toString() : '', { min: 6 }),\r\n          'Password must be at least 6 characters'\r\n        )\r\n      } else {\r\n        this.changeState(undefined)\r\n      }\r\n    }\r\n\r\n    if (isRequired || required) {\r\n      if (validator.isEmpty(value ? value.toString() : '')) {\r\n        this.changeState(false, 'this feild is required')\r\n      } else {\r\n        otherConditions()\r\n      }\r\n    } else {\r\n      otherConditions()\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextValidator\r\n","import React from 'react'\r\nimport Datetime from 'react-datetime'\r\nimport Select from 'react-select'\r\nimport makeAnimated from 'react-select/animated'\r\nimport {\r\n  Col,\r\n  CustomInput,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputProps,\r\n  Label,\r\n} from 'reactstrap'\r\nimport { ColProps } from 'reactstrap/lib/Col'\r\nimport { CustomInputProps } from 'reactstrap/lib/CustomInput'\r\nimport validator from 'validator'\r\nimport './style.scss'\r\nimport TextValidator from './TextValidator'\r\n\r\nconst animatedComponents = makeAnimated()\r\n\r\nexport const TextInputGroup = ({\r\n  iconClass = '',\r\n  label = '',\r\n  ...rest\r\n}: { iconClass?: string; label?: string } & InputProps) => {\r\n  return (\r\n    <>\r\n      {!validator.isEmpty(label) ? (\r\n        <label className='form-control-label mt-2' htmlFor={rest.name}>\r\n          {label}\r\n          {rest.required && <span className='text-danger'>*</span>}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <TextValidator {...rest} />\r\n      {rest.subText && <small>{rest.subText}</small>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const FileInput = ({ iconClass = '', label = '', ...rest }) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {!validator.isEmpty(label) ? (\r\n        <label className='form-control-label mt-2' htmlFor={rest.name}>\r\n          {label}\r\n          {rest.required && <span className='text-danger'>*</span>}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <InputGroup className='input-group-alternative'>\r\n        {!validator.isEmpty(iconClass) ? (\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <i className={iconClass} />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <CustomInput\r\n          id={rest.name}\r\n          type='file'\r\n          {...rest}\r\n          label={rest.customLabel ? rest.customLabel : 'Choose file'}\r\n        />\r\n      </InputGroup>\r\n      {rest.subText && <small>{rest.subText}</small>}\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport const DateInputGroup = ({\r\n  onChange = (e: any) => {},\r\n  iconClass = '',\r\n  label = '',\r\n  value = '',\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {!validator.isEmpty(label) ? (\r\n        <label className='form-control-label mt-2' htmlFor={rest.name}>\r\n          {label}\r\n          {rest.required && <span className='text-danger'>*</span>}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <InputGroup className='input-group-alternative'>\r\n        {!validator.isEmpty(iconClass) ? (\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <i className={iconClass} />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <Datetime\r\n          onChange={onChange}\r\n          closeOnSelect\r\n          timeFormat={false}\r\n          value={value}\r\n          {...rest}\r\n        />\r\n      </InputGroup>\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport type radioOptions = {\r\n  id?: string | ''\r\n  label: string\r\n  value: string | number\r\n  selected?: boolean\r\n}\r\n\r\nexport const CheckBoxInput = ({\r\n  title,\r\n  label,\r\n  name,\r\n  required,\r\n  options,\r\n  inline,\r\n  onChange,\r\n  colProps,\r\n  ...rest\r\n}: {\r\n  title?: string\r\n  label?: string\r\n  name: string\r\n  required?: boolean | false\r\n  options: radioOptions[]\r\n  inline?: boolean | false\r\n  onChange: (e: any) => void\r\n  colProps: ColProps\r\n} & CustomInputProps) => {\r\n  return (\r\n    <>\r\n      <Col sm='12'>\r\n        <Label className='mt-2'>{title || label}</Label>\r\n      </Col>\r\n      {options.map((option) => (\r\n        <Col {...colProps} key={option.id}>\r\n          <FormGroup className='mb-0'>\r\n            <CustomInput\r\n              {...rest}\r\n              id={`${option.id}`}\r\n              name={name}\r\n              value={option.value}\r\n              label={option.label}\r\n              inline={inline}\r\n              onChange={onChange}\r\n              defaultChecked={option.selected || false}\r\n              required={required}\r\n            />\r\n          </FormGroup>\r\n        </Col>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const RadioInput = ({\r\n  title,\r\n  name,\r\n  id = name,\r\n  required,\r\n  options,\r\n  inline,\r\n  onSelect,\r\n  ...rest\r\n}: {\r\n  title?: string\r\n  name: string\r\n  id?: any\r\n  required?: boolean\r\n  options: radioOptions[]\r\n  inline?: boolean | false\r\n  onSelect: (e: any) => void\r\n} & CustomInputProps) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {title && <Label className='mt-2'>{title}</Label>}\r\n      <div>\r\n        {options.map((option, key) => (\r\n          <CustomInput\r\n            {...rest}\r\n            key={key}\r\n            id={`${id + key}`}\r\n            name={name}\r\n            value={option.value}\r\n            label={option.label}\r\n            inline={inline}\r\n            onChange={onSelect}\r\n            defaultChecked={option.selected || false}\r\n            required={required}\r\n          />\r\n        ))}\r\n      </div>\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport const CheckBoxes = ({\r\n  title,\r\n  required,\r\n  options,\r\n  inline,\r\n  onSelect,\r\n  type = 'checkbox',\r\n  ...rest\r\n}: {\r\n  title: string\r\n  required?: boolean | false\r\n  invalid?: boolean | false\r\n  options: radioOptions[]\r\n  inline?: boolean | false\r\n  onSelect: (e: any) => void\r\n} & CustomInputProps) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      <Label className='mt-2'>{title}</Label>\r\n      <div>\r\n        {options.map((option, key) => (\r\n          <CustomInput\r\n            {...rest}\r\n            className='mb-2'\r\n            key={key}\r\n            type={type}\r\n            id={`${option.id}`}\r\n            name={rest.name}\r\n            value={option.value}\r\n            label={option.label}\r\n            inline={inline}\r\n            onChange={onSelect}\r\n            defaultChecked={option.selected || false}\r\n            required={required}\r\n          />\r\n        ))}\r\n      </div>\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport const SelectGroup = ({\r\n  placeholder,\r\n  name,\r\n  options = [],\r\n  onSelect,\r\n  id = '',\r\n  required = false,\r\n  value = '',\r\n  iconClass = '',\r\n  disabled = false,\r\n  label = '',\r\n  defaultValue = '',\r\n  ...rest\r\n}: {\r\n  value?: string | number\r\n  id?: string\r\n  invalid?: boolean | false\r\n  subText?: string\r\n  defaultValue?: string\r\n  placeholder: string\r\n  name: string\r\n  required?: boolean\r\n  options: {\r\n    name: string\r\n    value: string | number\r\n    code?: string\r\n    title?: string\r\n    selected?: boolean\r\n  }[]\r\n  onSelect: (e: any) => void\r\n  iconClass?: string\r\n  disabled?: boolean\r\n  label?: string\r\n  labelClass?: string\r\n}) => {\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {!validator.isEmpty(label) ? (\r\n        <label\r\n          className={`mt-2 form-control-label ${\r\n            rest.labelClass ? rest.labelClass : ''\r\n          }`}\r\n          htmlFor={name}\r\n        >\r\n          {required && <span className='text-danger'>* </span>}\r\n          {label}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <InputGroup className='input-group-alternative'>\r\n        {!validator.isEmpty(iconClass) ? (\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <i className={iconClass} />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n        ) : (\r\n          ''\r\n        )}\r\n        <CustomInput\r\n          type='select'\r\n          id={id}\r\n          name={name}\r\n          onChange={onSelect}\r\n          required={required}\r\n          disabled={disabled}\r\n          {...rest}\r\n        >\r\n          <option value='' defaultValue='' disabled={value ? true : false}>\r\n            {placeholder}\r\n          </option>\r\n          {options.map((item, key) => {\r\n            if (item.title) item.name = item.title\r\n\r\n            return (\r\n              <option\r\n                defaultValue={item.name}\r\n                key={key}\r\n                value={item.value}\r\n                selected={!!item.selected}\r\n              >\r\n                {item.name}\r\n              </option>\r\n            )\r\n          })}\r\n        </CustomInput>\r\n      </InputGroup>\r\n      {rest.subText && (\r\n        <small\r\n          className={`form-control-label ${\r\n            rest.labelClass ? rest.labelClass : ''\r\n          }`}\r\n        >\r\n          {rest.subText}\r\n        </small>\r\n      )}\r\n    </FormGroup>\r\n  )\r\n}\r\n\r\nexport const CustomSelectGroup = ({\r\n  placeholder,\r\n  options,\r\n  onSelect,\r\n  iconClass = '',\r\n  label = '',\r\n  isMulti = false,\r\n  ...rest\r\n}: {\r\n  label?: string\r\n  placeholder: string\r\n  isMulti?: boolean\r\n  options: any[]\r\n  onSelect: (e: any) => void\r\n  iconClass?: string\r\n} & InputProps) => {\r\n  console.log(options)\r\n\r\n  return (\r\n    <FormGroup className='mb-2'>\r\n      {!validator.isEmpty(label) ? (\r\n        <label className='form-control-label mt-2' htmlFor={rest.name}>\r\n          {label}\r\n          {rest.required && <span className='text-danger'>*</span>}\r\n        </label>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <InputGroup className='input-group-alternative'>\r\n        {!validator.isEmpty(iconClass) ? (\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <i className={iconClass} />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n        ) : (\r\n          ''\r\n        )}\r\n\r\n        <Select\r\n          onChange={onSelect}\r\n          required={rest.required}\r\n          className='form-control h-auto p-0'\r\n          components={animatedComponents}\r\n          isMulti={isMulti}\r\n          placeholder={placeholder}\r\n          options={options}\r\n        />\r\n      </InputGroup>\r\n    </FormGroup>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { RingLoader } from \"react-spinners\";\r\nimport \"./style.scss\";\r\n\r\nconst Loading = ({ show }: { show: boolean }) =>\r\n  show ? (\r\n    <div className=\"text-center overlay\">\r\n      <div className=\"\">\r\n        <RingLoader />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <span></span>\r\n  );\r\n\r\nexport default Loading;\r\n","export default __webpack_public_path__ + \"static/media/bg1.d4d14e2f.jpg\";","export default __webpack_public_path__ + \"static/media/logo.cce7c0c2.png\";","export default __webpack_public_path__ + \"static/media/Avatar-1.9e978fae.png\";","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Section: (props: {\r\n  className?: string;\r\n  bgImage?: boolean;\r\n  bgImageSrc?: string;\r\n  width?: 'container' | 'container-fluid';\r\n  styles?: { backgroundImage?: string };\r\n  children?: any;\r\n  id?: string;\r\n}) => any = ({\r\n  bgImage = false,\r\n  bgImageSrc,\r\n  className,\r\n  styles = {},\r\n  children,\r\n  id,\r\n  width = ''\r\n}) => {\r\n  bgImage && bgImageSrc\r\n    ? (styles.backgroundImage = `url(${bgImageSrc})`)\r\n    : console.log();\r\n  return (\r\n    <section\r\n      id={id}\r\n      className={`py-5 ${width} ${className +\r\n        ' ' +\r\n        (bgImage ? 'bg-image' : '')}`}\r\n      style={{ ...styles }}\r\n    >\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react'\nimport { CSVLink } from 'react-csv'\nimport { connect } from 'react-redux'\nimport NumberFormat from 'react-number-format'\nimport { Card, Col, Row, Table } from 'reactstrap'\nimport {\n  getImmigrants,\n  searchDb,\n  collectionType,\n} from '../actions/ImmigrantActions'\nimport { TextInputGroup } from '../components/Form'\n// import { businessType } from \"../reducers/interface\";\nimport { AxiosPromise } from 'axios'\nimport Loading from '../components/Loading'\nimport moment from 'moment'\nimport { antiguaType } from '../interface/antiguaType'\n\nconst data = {\n  titles: [\n    '',\n    'Name',\n    'email',\n    'phone',\n    'married',\n    'invest funds',\n    'networth',\n    'residence',\n    'nationality',\n    'rejected',\n    'deported',\n    'O dep',\n    'Y dep',\n    'T dep',\n    'A dep',\n    'contact med',\n    'ref',\n    'time',\n  ],\n}\n\nclass Antigua extends Component<{\n  getImmigrants: (collection: collectionType) => AxiosPromise\n  searchDb: (collection: collectionType, searchParam: string) => AxiosPromise\n  immigrantList: antiguaType[]\n}> {\n  state = { search: '', loading: false }\n\n  componentDidMount() {\n    this.setState({ loading: true }, () =>\n      this.props\n        .getImmigrants('antigua')\n        .then((res) => this.setState({ loading: false }))\n        .catch((err) => this.setState({ loading: false }))\n    )\n  }\n\n  onChange = (e?: any) => {\n    this.setState({ [e.target.name]: e.target.value })\n    this.onSearch(e.target.value)\n  }\n\n  onSearch = (param: string) =>\n    this.setState({ loading: true }, () =>\n      this.props\n        .searchDb('antigua', param)\n        .then((res) => this.setState({ loading: false }))\n        .catch((err) => this.setState({ loading: false }))\n    )\n\n  render() {\n    const { immigrantList } = this.props\n    return (\n      <div id='requests' className='px-0 w-100 mx-auto'>\n        <Loading show={this.state.loading} />\n        <Row>\n          <Col>\n            <h2>Antigua</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={8}>\n            <TextInputGroup\n              onChange={(e: any) => this.onChange(e)}\n              name={'search'}\n              value={this.state.search}\n              placeholder='Search...'\n            />\n          </Col>\n          <Col sm={4}>\n            <CSVLink\n              data={immigrantList.map(\n                ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  rejected,\n                  deported,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  residenceCountry,\n                  nationalityCountry,\n                  RejectedCountries,\n                  DeportedCountries,\n                }) => ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  invest: `${investRange.min}-${investRange.max}`,\n                  networth: `${networthRange.min}-${networthRange.max}`,\n                  residenceCountry: residenceCountry.name,\n                  nationalityCountry: nationalityCountry.name,\n                  RejectedCountries,\n                  DeportedCountries,\n                  rejected: rejected\n                    ? RejectedCountries.map((country) => (\n                        <span className='' key={country.id}>\n                          {country.name},{' '}\n                        </span>\n                      ))\n                    : 'No',\n                  deported: deported\n                    ? DeportedCountries.map((country) => (\n                        <span className='' key={country.id}>\n                          {country.name},{' '}\n                        </span>\n                      ))\n                    : 'No',\n                })\n              )}\n              target='_blank'\n              className='btn btn-primary btn-block'\n              filename='Antigua-Immigrants'\n            >\n              Export to CSV\n            </CSVLink>\n          </Col>\n        </Row>\n        <Card className='p-0 resp'>\n          <Table responsive striped bordered>\n            <thead>\n              <tr>\n                {data.titles.map((title, key) => (\n                  <th className='text-capitalize' key={key}>\n                    {title}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {immigrantList.map((immigrant, key: any) => {\n                const {\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  rejected,\n                  deported,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  residenceCountry,\n                  nationalityCountry,\n                  RejectedCountries,\n                  DeportedCountries,\n                } = immigrant\n                return (\n                  <tr key={key}>\n                    <th scope='row'>{key + 1}</th>\n                    <td>{`${first_name} ${last_name}`}</td>\n                    <td>{email}</td>\n                    <td>{phone}</td>\n                    <td>{married}</td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>{residenceCountry.name}</td>\n                    <td>{nationalityCountry.name}</td>\n                    <td>\n                      {rejected\n                        ? RejectedCountries.map((country) => (\n                            <span className='' key={country.id}>\n                              {country.name},{' '}\n                            </span>\n                          ))\n                        : 'No'}\n                    </td>\n                    <td>\n                      {deported\n                        ? DeportedCountries.map((country) => (\n                            <span className='' key={country.id}>\n                              {country.name},{' '}\n                            </span>\n                          ))\n                        : 'No'}\n                    </td>\n                    <td>{old_dependents}</td>\n                    <td>{young_dependents}</td>\n                    <td>{teen_dependents}</td>\n                    <td>{average_dependents}</td>\n                    <td>{contact_medium}</td>\n                    <td>{referee}</td>\n                    <td>{moment(createdAt).format('L | HH:mm')}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n          {!immigrantList.length && (\n            <div className='text-center'>\n              <strong>No result found</strong>\n            </div>\n          )}\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ immigrantList }: { immigrantList: [] }) => ({\n  ...immigrantList,\n})\n\n//@ts-ignore\nexport default connect(mapStateToProps, { getImmigrants, searchDb })(Antigua)\n","import React, { Component } from 'react'\nimport { CSVLink } from 'react-csv'\nimport { connect } from 'react-redux'\nimport NumberFormat from 'react-number-format'\nimport { Card, Col, Row, Table } from 'reactstrap'\nimport {\n  getImmigrants,\n  searchDb,\n  collectionType,\n} from '../actions/ImmigrantActions'\nimport { TextInputGroup } from '../components/Form'\n// import { businessType } from \"../reducers/interface\";\nimport { AxiosPromise } from 'axios'\nimport Loading from '../components/Loading'\nimport moment from 'moment'\nimport { antiguaType } from '../interface/antiguaType'\n\nconst data = {\n  titles: [\n    '',\n    'Name',\n    'email',\n    'phone',\n    'married',\n    'invest funds',\n    'networth',\n    'residence',\n    'nationality',\n    'rejected',\n    'deported',\n    'O dep',\n    'Y dep',\n    'T dep',\n    'A dep',\n    'contact med',\n    'ref',\n    'time',\n  ],\n}\n\nclass Stkitts extends Component<{\n  getImmigrants: (collection: collectionType) => AxiosPromise\n  searchDb: (collection: collectionType, searchParam: string) => AxiosPromise\n  immigrantList: antiguaType[]\n}> {\n  state = { search: '', loading: false }\n\n  componentDidMount() {\n    this.setState({ loading: true }, () =>\n      this.props\n        .getImmigrants('stkitts')\n        .then((res) => this.setState({ loading: false }))\n        .catch((err) => this.setState({ loading: false }))\n    )\n  }\n\n  onChange = (e?: any) => {\n    this.setState({ [e.target.name]: e.target.value })\n    this.onSearch(e.target.value)\n  }\n\n  onSearch = (param: string) =>\n    this.setState({ loading: true }, () =>\n      this.props\n        .searchDb('stkitts', param)\n        .then((res) => this.setState({ loading: false }))\n        .catch((err) => this.setState({ loading: false }))\n    )\n\n  render() {\n    const { immigrantList } = this.props\n    return (\n      <div id='requests' className='px-0 w-100 mx-auto'>\n        <Loading show={this.state.loading} />\n        <Row>\n          <Col>\n            <h2>St. Kitts</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={8}>\n            <TextInputGroup\n              onChange={(e: any) => this.onChange(e)}\n              name={'search'}\n              value={this.state.search}\n              placeholder='Search...'\n            />\n          </Col>\n          <Col sm={4}>\n            <CSVLink\n              data={immigrantList.map(\n                ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  rejected,\n                  deported,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  residenceCountry,\n                  nationalityCountry,\n                  RejectedCountries,\n                  DeportedCountries,\n                }) => ({\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  invest: `${investRange.min}-${investRange.max}`,\n                  networth: `${networthRange.min}-${networthRange.max}`,\n                  residenceCountry: residenceCountry.name,\n                  nationalityCountry: nationalityCountry.name,\n                  RejectedCountries,\n                  DeportedCountries,\n                  rejected: rejected\n                    ? RejectedCountries.map((country) => (\n                        <span className='' key={country.id}>\n                          {country.name},{' '}\n                        </span>\n                      ))\n                    : 'No',\n                  deported: deported\n                    ? DeportedCountries.map((country) => (\n                        <span className='' key={country.id}>\n                          {country.name},{' '}\n                        </span>\n                      ))\n                    : 'No',\n                })\n              )}\n              target='_blank'\n              className='btn btn-primary btn-block'\n              filename='Stkitts-Immigrants'\n            >\n              Export to CSV\n            </CSVLink>\n          </Col>\n        </Row>\n        <Card className='p-0 resp'>\n          <Table responsive striped bordered>\n            <thead>\n              <tr>\n                {data.titles.map((title, key) => (\n                  <th className='text-capitalize' key={key}>\n                    {title}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {immigrantList.map((immigrant, key: any) => {\n                const {\n                  first_name,\n                  last_name,\n                  email,\n                  phone,\n                  married,\n                  old_dependents,\n                  young_dependents,\n                  teen_dependents,\n                  average_dependents,\n                  rejected,\n                  deported,\n                  contact_medium,\n                  referee,\n                  createdAt,\n                  investRange,\n                  networthRange,\n                  residenceCountry,\n                  nationalityCountry,\n                  RejectedCountries,\n                  DeportedCountries,\n                } = immigrant\n                return (\n                  <tr key={key}>\n                    <th scope='row'>{key + 1}</th>\n                    <td>{`${first_name} ${last_name}`}</td>\n                    <td>{email}</td>\n                    <td>{phone}</td>\n                    <td>{married}</td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={investRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.min}\n                        displayType='text'\n                      />\n                      {' - '}\n                      <NumberFormat\n                        thousandSeparator\n                        prefix='$'\n                        value={networthRange.max}\n                        displayType='text'\n                      />\n                    </td>\n                    <td>{residenceCountry.name}</td>\n                    <td>{nationalityCountry.name}</td>\n                    <td>\n                      {rejected\n                        ? RejectedCountries.map((country) => (\n                            <span className='' key={country.id}>\n                              {country.name},{' '}\n                            </span>\n                          ))\n                        : 'No'}\n                    </td>\n                    <td>\n                      {deported\n                        ? DeportedCountries.map((country) => (\n                            <span className='' key={country.id}>\n                              {country.name},{' '}\n                            </span>\n                          ))\n                        : 'No'}\n                    </td>\n                    <td>{old_dependents}</td>\n                    <td>{young_dependents}</td>\n                    <td>{teen_dependents}</td>\n                    <td>{average_dependents}</td>\n                    <td>{contact_medium}</td>\n                    <td>{referee}</td>\n                    <td>{moment(createdAt).format('L | HH:mm')}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n          {!immigrantList.length && (\n            <div className='text-center'>\n              <strong>No result found</strong>\n            </div>\n          )}\n        </Card>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ immigrantList }: { immigrantList: [] }) => ({\n  ...immigrantList,\n})\n\n//@ts-ignore\nexport default connect(mapStateToProps, { getImmigrants, searchDb })(Stkitts)\n","import Antigua from './pages/Antigua'\nimport Stkitts from './pages/Stkitts'\n\nvar routes = [\n  {\n    path: '/antigua',\n    name: 'All Antigua',\n    component: Antigua,\n  },\n  {\n    path: '/stkitts',\n    name: 'All St. Kitts',\n    component: Stkitts,\n  },\n\n  {\n    path: '/',\n    name: 'All Antigua',\n    component: Antigua,\n  },\n]\n\nexport default routes\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Redirect, Route, Switch, NavLink } from 'react-router-dom'\nimport { Card, Col, Row, Button } from 'reactstrap'\nimport { showcaseBg, avatar1, logo } from '../assets/img'\nimport Loading from '../components/Loading'\nimport Section from '../components/Section'\nimport './style.scss'\nimport routes from '../routes'\nimport { logOut } from '../actions'\nimport userType, { authState } from '../interface/user'\n\nclass AdminLayout extends Component<{\n  user: userType | null\n  logOut: () => void\n}> {\n  state = {\n    showMenu: false,\n    loading: false,\n  }\n\n  toggleMenu = () => this.setState({ showMenu: !this.state.showMenu })\n\n  getRoutes = (\n    routes: {\n      path: string\n      name: string\n      component: React.ComponentClass\n    }[]\n  ) =>\n    routes.map((prop, key) => (\n      <Route path={prop.path} component={prop.component} key={key} />\n    ))\n\n  render() {\n    const { user } = this.props,\n      { showMenu } = this.state\n\n    return user ? (\n      <Section\n        bgImage\n        bgImageSrc={showcaseBg}\n        id='showcase'\n        className='default-padding'\n      >\n        <div className='container' id='Dashboard'>\n          <div>\n            <Card className='p-3 bg-faded flex-md-row justify-content-between'>\n              <h2 className='text-center'>\n                <i\n                  className='fa fa-bars d-md-none float-left'\n                  onClick={() => this.toggleMenu()}\n                ></i>\n                <Link to='/'>\n                  <span className=' float-md-none float-right'>Dashboard</span>\n                </Link>\n              </h2>\n              <div className='text-center'>\n                <img src={`${logo}`} alt='Loft' height={60} />\n              </div>\n            </Card>\n          </div>\n          <Row className='row-eq-height'>\n            <Col\n              className={`mt-md-3 pr-0 menu ${\n                showMenu ? ' show ' : ''\n              }d-md-block`}\n              sm='12'\n              md='3'\n              onClick={(e: any) => {\n                if (e.target.classList.contains('menu')) this.toggleMenu()\n              }}\n            >\n              <Card className='bg-faded p-4 h-100'>\n                <h2 className='text-right'>\n                  <i\n                    onClick={() => this.toggleMenu()}\n                    className='d-md-none fa fa-times'\n                  ></i>\n                </h2>\n                <div className='text-center mt-4'>\n                  <img\n                    alt='...'\n                    className='rounded-circle w-50'\n                    src={`${avatar1}`}\n                  />\n                  <br />\n                  <strong>{`${user.email}`}</strong>\n                  <br />\n\n                  <div className='h5 font-weight-300'>{user.email}</div>\n                </div>\n                <div id='menu' className='mt-4'>\n                  <p className='mb-1'>\n                    <NavLink\n                      activeClassName='active'\n                      onClick={this.toggleMenu}\n                      to='/antigua'\n                    >\n                      Antigua Immigrants\n                    </NavLink>\n                  </p>\n                  <hr className='mt-0 mb-3' />\n                  <p className='mb-1'>\n                    <NavLink\n                      activeClassName='active'\n                      onClick={this.toggleMenu}\n                      to='/stkitts'\n                    >\n                      St. Kitts Immigrants\n                    </NavLink>\n                  </p>\n                  <hr className='mt-0 mb-3' />\n                  {/* <p className=\"mb-1\">\n                    <NavLink\n                      activeClassName=\"active\"\n                      onClick={this.toggleMenu}\n                      to=\"/student-visa\"\n                    >\n                      Students\n                    </NavLink>\n                  </p>\n                  <hr className=\"mt-0 mb-3\" /> */}\n\n                  <Button block onClick={this.props.logOut} color='danger'>\n                    Logout\n                  </Button>\n                </div>\n              </Card>\n            </Col>\n            <Col className='mt-3' md='9'>\n              <Card className='bg-faded p-sm-4 p-2 h-100'>\n                <Loading show={this.state.loading} />\n                {\n                  //@ts-ignore\n                  <Switch>{this.getRoutes(routes)}</Switch>\n                }\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </Section>\n    ) : (\n      <Redirect to='/auth/login' />\n    )\n  }\n}\nconst mapStateToProps = ({ auth }: { auth: authState }) => ({\n  ...auth,\n})\n\nexport default connect(mapStateToProps, { logOut })(AdminLayout)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Col, Container, Row, Form } from 'reactstrap'\nimport { authenticateUser } from '../actions'\nimport { TextInputGroup } from '../components/Form'\nimport Loading from '../components/Loading'\nimport AdminLayout from '../layouts/AdminLayout'\nimport { logo } from '../assets/img'\nimport { authState } from '../interface/user'\n\nconst initialState = {\n  email: '',\n  password: '',\n  prevPath: '/',\n  loading: false,\n}\n\nclass Auth extends Component<authState> {\n  state = initialState\n\n  onChange = (e?: any) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  loginUser = (e: any) => {\n    e.preventDefault()\n    this.setState({ loading: true })\n    this.props.authenticateUser(this.state, (res: any, err: any) =>\n      res ? this.setState(initialState) : this.setState(err)\n    )\n  }\n\n  render() {\n    return this.props.isAuthenticated ? (\n      //@ts-ignore\n      <AdminLayout />\n    ) : (\n      <>\n        <Container id='Quote' className='mt-5 pt-5'>\n          <Row className='mb-4'>\n            <Col className='text-center'>\n              <img src={logo} style={{ maxHeight: '5rem' }} alt='Logo' />\n            </Col>\n          </Row>\n          <Form onSubmit={this.loginUser.bind(this)}>\n            <Row>\n              <Loading show={this.state.loading} />\n              <Col sm='6' lg={4} className='offset-sm-3 offset-lg-4 py-2'>\n                <TextInputGroup\n                  onChange={(e: any) => this.onChange(e)}\n                  name={'email'}\n                  value={this.state.email}\n                  isRequired\n                  placeholder='Username'\n                  iconClass='ni ni-email-83'\n                  autoFocus={true}\n                  className='mb-1'\n                />\n\n                <TextInputGroup\n                  onChange={(e: any) => this.onChange(e)}\n                  name={'password'}\n                  type='password'\n                  value={this.state.password}\n                  isRequired\n                  isPassword\n                  placeholder='Password'\n                  iconClass='ni ni-lock-circle-open'\n                />\n                <div className='text-center'>\n                  <Button\n                    block\n                    className='mt-4 mb-2'\n                    color='primary'\n                    type='submit'\n                  >\n                    Login\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Form>\n        </Container>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = ({ auth }: { auth: any }) => ({\n  ...auth,\n})\n\nexport default connect(mapStateToProps, { authenticateUser })(Auth)\n","import { LOGOUT_USER, AUTH_SUCCESS } from '../actions/types'\nimport { setLocal } from '../helpers'\n\nconst authReducer = (state = {}, action: { type: string; payload: any }) => {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      const { token } = action.payload\n      delete action.payload.token\n      setLocal('token', token)\n      setLocal('user', action.payload)\n      return {\n        ...state,\n        authLoaded: true,\n        token,\n        user: action.payload,\n        isAuthenticated: true,\n        goBack: true,\n      }\n\n    case LOGOUT_USER:\n      return {\n        ...state,\n        authLoaded: true,\n        isAuthenticated: false,\n        user: null,\n        token: '',\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default authReducer\n","import { combineReducers } from 'redux'\nimport { default as auth } from './AuthReducers'\nimport {\n  immigrantDeleteReducer as immigrantDelete,\n  immigrantListReducer as immigrantList,\n} from './ImmigrantReducers'\n\nexport default combineReducers({\n  auth,\n  immigrantDelete,\n  immigrantList,\n})\n","import {\n  IMMIGRANT_DELETE_FAILED,\n  IMMIGRANT_DELETE_REQUEST,\n  IMMIGRANT_DELETE_SUCCESS,\n  IMMIGRANT_LIST_FAILED,\n  IMMIGRANT_LIST_REQUEST,\n  IMMIGRANT_LIST_SUCCESS,\n} from '../constants/immigrantsConstants'\n\nexport const immigrantDeleteReducer = (\n  state = {},\n  { type, payload = null }: { type: string; payload: any }\n) => {\n  switch (type) {\n    case IMMIGRANT_DELETE_REQUEST:\n      return { loading: true }\n    case IMMIGRANT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case IMMIGRANT_DELETE_FAILED:\n      return { loading: true, error: payload }\n    default:\n      return state\n  }\n}\n\nexport const immigrantListReducer = (\n  state = { immigrantList: [] },\n  { type, payload = null }: { type: string; payload: any }\n) => {\n  switch (type) {\n    case IMMIGRANT_LIST_REQUEST:\n      return { ...state, loading: true }\n    case IMMIGRANT_LIST_SUCCESS:\n      return { ...state, loading: false, immigrantList: payload }\n    case IMMIGRANT_LIST_FAILED:\n      return { ...state, loading: false, error: payload }\n    default:\n      return state\n  }\n}\n","import { applyMiddleware, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport { getLocal } from './helpers'\nimport reducers from './reducers'\n\nconst auth = {\n  isAuthenticated: getLocal('token', false),\n  user: getLocal('user'),\n  token: getLocal('token', false),\n}\n\nconst initialState = {\n  auth,\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Auth from \"./pages/Auth\";\nimport store from \"./store\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <ToastContainer\n            autoClose={8000}\n            draggable\n            enableMultiContainer\n            containerId={\"A\"}\n            position={\"top-right\"}\n          />\n          <ToastContainer\n            autoClose={8000}\n            draggable\n            enableMultiContainer\n            containerId={\"B\"}\n            position={\"bottom-left\"}\n          />\n          <ToastContainer autoClose={8000} draggable />\n          {\n            //@ts-ignore\n            <Auth />\n          }\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./assets/vendor/nucleo/css/nucleo.css\";\nimport \"./index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}